(function(){angular.module("pageVisibility",[]).factory("$pageVisibility",["$document","$rootScope",function(a,b){var c=b.$new(),d="undefined"!==typeof a.prop("hidden")?["hidden","visibilitychange"]:"undefined"!==typeof a.prop("mozHidden")?["mozHidden","mozvisibilitychange"]:"undefined"!==typeof a.prop("msHidden")?["msHidden","msvisibilitychange"]:"undefined"!==typeof a.prop("webkitHidden")?["webkitHidden","webkitvisibilitychange"]:[null,null],e=d[0],d=d[1];c.isHidden=function(){return!!e&&a.prop(e)};
if(d)a.on(d,function(){return c.$broadcast(c.isHidden()?"hide":"show")});return c}])})();(function(){var a=function(a,c){var d,e,f=Array.isArray(a)?a:a.split("."),g=Object.prototype.hasOwnProperty;this.value=c||window;for(d=0;d<f.length&&!(e=f[d],this.value=g.call(this.value,e)?this.value[e]:void 0,"undefined"===typeof this.value);d+=1);this.create=function(){var a,b,d=c||window;for(a=0;a<f.length;a+=1)b=f[a],g.call(d,b)||(d[b]={}),d=d[b];this.value=d;return this};this.get=function(a){return this.value?this.value[a]:void 0};this.invoke=function(a){this.result.apply(this,arguments);return this};
this.method=function(a,b){return this.set(a,"function"===typeof b?b:function(){})};this.result=function(a){var b=Array.prototype.slice.call(arguments,1),c=this.get(a);return"function"===typeof c?c.apply(this.value,b):c};this.set=function(a,b){if("string"!==typeof a||1>f.length)return this;this.value[a]=b;return this}};window.namespace=function(b,c){if(b instanceof a)return b;if(!(this instanceof a))return new a(b,c)}})();(function(){_.mixin(_.string.exports());window.clientReporting=new window.amzn.sm.ClientReporter("beanstalkInlineStartTimer","/elasticbeanstalk/service/reporting");var a=jQuery("#logging-endpoint-url").attr("href");a&&namespace("AWSC.Clog").invoke("setEndpointOverride",a);a=window.location.href.replace(/(#.+)|#$/,"$1");window.history&&(window.history.pushState&&window.location.href!==a)&&window.history.pushState({},"",a);var b=namespace("amzn.beanstalk").create().value;b.DEPENDENT_MODULES="ngMessages ngRoute ngSanitize ui.select smComponents smModels smServices smTemplates beanstalkTemplates beanstalkServices beanstalkDirectives beanstalkComponents beanstalkModels beanstalkCollections beanstalkResolves beanstalkFilters beanstalkMonitoring beanstalkWizards beanstalkEnvironment beanstalkConfiguration beanstalkApplications gettingStarted".split(" ");
b.module=angular.module("beanstalk",b.DEPENDENT_MODULES);b.module.constant("XSRF_ENDPOINT","/elasticbeanstalk/service/util/xsrfToken").constant("XSRF_TOKEN_HEADER","x-eb-xsrf-token").constant("HOME_CONTROLLER","ApplicationListController").constant("OLD_FINISHED_METRIC_NAME","elasticbeanstalk_loadFinished").constant("LOCALIZATION_SOURCE","amzn.beanstalk.localized").constant("REQUEST_ID_HEADER","X-ElasticBeanstalk-RequestId");b.module.config(["BeanstalkLocationsProvider","$provide",function(a,d){var e=
function(a){angular.forEach(a._invokeQueue,function(a){if("directive"===a[1]){a=a[2];try{if(-1===a[1]().restrict.indexOf("E"))return}catch(b){}a=a[0].replace(/[A-Z]/g,function(a,b){return(0!==b?"-":"")+a.toLowerCase()});document.createElement(a)}})};navigator.appName&&("Microsoft Internet Explorer"===navigator.appName&&null!==/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(navigator.userAgent)&&9>parseFloat(RegExp.$1))&&_.each(b.DEPENDENT_MODULES,function(a){e(angular.module(a))});d.decorator("$sniffer",["$delegate",
function(a){a.csp=!0;return a}])}])})();(function(){amzn.beanstalk.application={};amzn.beanstalk.application=angular.module("beanstalkApplications",[])})();(function(){amzn.beanstalk.application.ApplicationOverviewController={};amzn.beanstalk.application.controller("ApplicationOverviewController",["$scope","EnvironmentHelper","Environments",function(a,b,c){b.injectSelectedApplication(a);a.application=a.application||{applicationName:""};a.environments=_.isUndefined(a.application)?[]:c.environmentsByApplication[a.application.applicationName]}])})();(function(){amzn.beanstalk.module.factory("$exceptionHandler",["$log","$window",function(a,b){var c=0,d;return function(e,f){a.error(e);a.error(f);b.clientReporting.error("exceptionHandler",{message:e.message,stack:e.stack});d&&10<c?c=0:d&&(clearTimeout(d),c+=1);d=setTimeout(function(){b.clientReporting.report()},50)}}])})();(function(){amzn.beanstalk.module.service("FeaturesService",function(){var a=["managed"],b=jQuery("#s-features").attr("href")||"";this.has=function(c){return 0<=_.indexOf(a,c)||0<=b.indexOf(c)}})})();(function(){amzn.beanstalk.preload={};amzn.beanstalk.module.provider("preload",function(){var a=/\\([{}])/g;this.$get=function(){var b=window.document.getElementById("preload");return!b?(window.clientReporting.fault("missingPreload",{preload:b}),{}):_.reduce(b.attributes,function(b,d){_.startsWith(d.name,"data-")&&(b[d.name.slice(5)]=d.value.replace(a,"$1"));return b},{})}})})();(function(){amzn.beanstalk.module.run(["$window",function(a){var b=/[\?&]ref_=([^&#]*)/.exec(a.location.search);null!==b&&a.clientReporting.event("referrer",{referrer:decodeURIComponent(b[1].replace(/\+/g," "))})}])})();(function(){amzn.beanstalk.collections={};amzn.beanstalk.collections=angular.module("beanstalkCollections",[])})();(function(){amzn.beanstalk.collections.factory("ManagedUpdatesHistoryCollection",["ManagedUpdatesHistoryItem",function(a){var b=function(){this.history=[];this.nextToken=null};b.prototype.deserialize=function(b){_.each(b,function(b){b=new a(b);this.validateUniquenessOf(b)&&this.history.splice(_.sortedIndex(this.history,b,function(a){return-a.executedTime}),0,b)},this)};b.prototype.validateUniquenessOf=function(b){return!(b instanceof a)?!1:!_.some(this.history,function(a){return a.executedTime===
b.executedTime})};return b}])})();(function(){amzn.beanstalk.collections.provider("PlatformVersionsCollection",[function(){var a=amzn.beanstalk.utils.compareSemanticVersions,b=function(a){return _.groupBy(a,function(a){return a.platformName})},c=function(c){this.collection=_.map([].concat(c),function(a){return new this.constructor.model(a)},this);this.groups=_.map(b(this.collection),function(b,c){return{platformName:c,platformVersions:b,recommended:_.first(b.sort(function(b,c){return a(b.platformVersion,c.platformVersion)}))}})};
c.prototype.getGroupForPlatform=function(a){return _.findWhere(this.groups,{platformName:a.platformName})};c.prototype.isEmpty=function(){return _.isEmpty(this.collection)};c.prototype.platformIsUpgradable=function(a){a=this.getGroupForPlatform(a);return _.isDefined(a)&&1<a.platformVersions.length};this.$get=["Platform",function(a){c.model=a;return c}]}])})();(function(){amzn.beanstalk.components={};amzn.beanstalk.components=angular.module("beanstalkComponents",["ngSanitize"])})();(function(){amzn.beanstalk.components.filter("versionToUrl",["RegionUtil","$location",function(a){return function(b){return!b?"#":"GenericSampleApplication"===b.sourceBundle.s3Key?"http://docs.aws.amazon.com/console/elasticbeanstalk/related-resources":"/elasticbeanstalk/service/util/applicationVersionRedirect?region="+a.getCurrentRegion()+"&applicationName="+encodeURIComponent(b.applicationName)+"&versionLabel="+encodeURIComponent(b.versionLabel)}}]);amzn.beanstalk.components.filter("bundleToLinkTitle",
["LocalizationService",function(a){return function(b){if(!b)return a.localize("generic_version_label");if("GenericSampleApplication"===b.s3Key)return a.localize("sample_version_label");var c=b.s3Key.match("git-([a-f0-9]{7})[a-f0-9]{33}-[0-9]+(.[a-z0-9]+)$");return c?"git-"+c[1]+c[2]:b.s3Key}}]);amzn.beanstalk.components.filter("bundleToTarget",["$window",function(a){return function(b){return a.navigator.appName&&"Microsoft Internet Explorer"===a.navigator.appName?"_blank":!b?"_self":"GenericSampleApplication"===
b.s3Key?"_blank":"_self"}}])})();(function(){amzn.beanstalk.components.cleanVersionLabel={};amzn.beanstalk.components.filter("cleanVersionLabel",[function(){return function(a){if(!a)return a;var b=a.match("git-([a-f0-9]{7})[a-f0-9]{33}");return b?"git-"+b[1]:a}}])})();(function(){amzn.beanstalk.components.doubleSlider={};var a=800;amzn.beanstalk.components.directive("doubleSlider",["$document","$timeout",function(b,c){return{restrict:"E",replace:!0,scope:{lowValue:"=",highValue:"=",absoluteMinValue:"=",minValue:"=",maxValue:"=",allowMinScaling:"@",leftLabel:"=",rightLabel:"=",leftPopover:"@",rightPopover:"@"},templateUrl:"partials/components/double-slider.html",link:function(d,e){function f(){x=q.outerWidth()-w;u=x/(d.maxValue-d.minValue);y=1/u}function g(){z&&
c.cancel(z);z=c(function(){var a=r.find(".popover").filter(":visible"),b=m.find(".popover").filter(":visible");d.popoverDirection=a.offset()&&b.offset()&&a.offset().left+a.outerWidth()>b.offset().left?"top":"bottom";z=null},0)}function h(){var a=(d.lowValue-d.minValue)*u+"px";r.css("left",a);t.css("left",a)}function k(){var a=(d.highValue-d.minValue)*u;m.css("right",x-a+"px");t.css("right",x-a+"px")}function l(){e.toggleClass("stacked",e.outerWidth()<a);f();h();k()}function n(){if(!("true"!==d.allowMinScaling||
B)){for(var a=!1;d.lowValue<d.minValue+0.05*(d.maxValue-d.minValue);)a=!0,d.minValue-=(d.maxValue-d.minValue)/2;for(;d.lowValue>d.minValue+0.95*(d.maxValue-d.minValue);)a=!0,d.minValue+=(d.maxValue-d.minValue)/2;!_.isUndefined(d.absoluteMinValue)&&d.minValue<d.absoluteMinValue&&(a=!0,d.minValue=d.absoluteMinValue);a&&l()}}function p(a,c,e,f,k){function l(a){h=_.extend(h,a);d["show"+_.capitalize(c)+"Popover"]=h.hovering||h.moving||h.clicked;g();d.$apply()}var h={hovering:!1,moving:!1,clicked:!1};a.hover(function(){l({hovering:!0})},
function(){l({hovering:!1})});a.on("mousedown",function(a){if(1===a.which){var g=!1;l({moving:!0});b.on("mousemove",function(a){B=g=!0;a=a.pageX-q.offset().left-w/2;var b=e(),l=f();d[c]=a<b?d.minValue+y*b:a>l?d.minValue+y*l:d.minValue+y*a;k();d.$apply();return!1});b.on("mouseup",function(){B=!1;b.off("mousemove");b.off("mouseup");n();l({moving:!1,clicked:g?h.clicked:!h.clicked});return!1});return!1}})}if(!_.isNumber(d.minValue))throw"Minimum value is required";if(!_.isNumber(d.maxValue))throw"Maximum value is required";
_.isNumber(d.lowValue)||(d.lowValue=Math.floor(0.75*d.maxValue));_.isNumber(d.highValue)||(d.highValue=d.maxValue);var q=e.find(".slider-container"),r=q.find(".value.low"),m=q.find(".value.high"),t=q.find(".range"),s=e.find(".left-label"),v=e.find(".right-label"),w=m.innerWidth(),x,u,y,B=!1,z;d.$watch("lowValue + highValue",g);f();e.on("resize",l);p(r,"lowValue",function(){return 0},function(){return m.position().left-w},h);p(m,"highValue",function(){return r.position().left+w},function(){return x},
k);d.$watch("lowValue",function(){h();n()});d.$watch("highValue",k);d.$watch("minValue",l);d.$watch("maxValue",l);d.$watch("leftLabel",function(){q.css("margin-left",s.outerWidth()+10+"px");l()});d.$watch("rightLabel",function(){q.css("margin-right",v.outerWidth()+10+"px");l()})}}}])})();(function(){amzn.beanstalk.components.service("ebAlert",["LocalizationService",function(a){var b=null,c=null;return{clear:function(){c=b=null},getMessage:function(){return b},getTitle:function(){return c},isActive:function(){return!_.isNull(this.getMessage())},setMessage:function(d){b=amzn.beanstalk.utils.htmlEntities(d.message)||a.localize("validation_error");c=a.localize(_.underscored(d.code).replace(/_exception$/,""))||a.localize("validation_error")}}}]);amzn.beanstalk.components.directive("alert",
["ebAlert",function(a){return{restrict:"E",templateUrl:"partials/components/eb-alert.html",link:function(b,c,d){b.ebAlert=a;b.clear=function(){return a.clear()};b.show=function(){return a.isActive()}}}}])})();(function(){amzn.beanstalk.components.service("ebContext",function(){var a;return{clear:function(b){!_.isEmpty(a)&&_.has(a,b)?delete a[b]:this.set(void 0)},get:function(b){return _.isString(b)?_.has(a,b)?a[b]:void 0:a},set:function(b){a=b}}})})();(function(){amzn.beanstalk.components.service("ebStatusIndicator",["$q","LocalizationService",function(a,b){var c=null,d=null,e={clear:function(a){_.isString(a)&&a!==c||(d=c=null)},getMessage:function(){return d},isActive:function(){return!_.isNull(this.getMessage())},setMessage:function(f,g,h){c=f;d=b.localize(c,g);if((h=_.isArray(h)?a.all(h):h)&&_.isFunction(h.then))return h["finally"](_.bind(e.clear,e,c))}};return e}]);amzn.beanstalk.components.directive("globalStatusIndicator",["ebDialog",function(a){return{restrict:"E",
templateUrl:"partials/components/eb-status-indicator.html",link:function(b,c,d){b.show=function(){return b.statusIndicator.isActive()&&!a.isOpen()};b.$watch(b.show,function(a){angular.element("body").css("overflow",a?"hidden":"auto")})}}}]);amzn.beanstalk.components.directive("statusIndicator",["ebStatusIndicator",function(a){return{restrict:"E",templateUrl:"partials/components/eb-status-indicator.html",link:function(b,c,d){b.statusIndicator=a;b.show=function(){return a.isActive()}}}}])})();(function(){amzn.beanstalk.components.directive("externalServiceSelect",[function(){return{restrict:"E",templateUrl:"partials/components/external-service-select.html",replace:!0,scope:{info:"=",inputModel:"=",inputKey:"@",onRefresh:"&",disabled:"=",onChange:"&",isRequired:"=",groupBy:"@",optionsFilter:"=",defaultOptionText:"@"}}}])})();(function(){amzn.beanstalk.components.controller("FileUploadController",["$document","$q","$rootScope","$scope","$timeout","$window","Alerts","UtilService",function(a,b,c,d,e,f,g,h){var k,l,n,p,q=a.find("#s3-upload-target");this.getFilename=function(){if(n&&n.closest(a[0].documentElement).length)return n.val()};this.getFileSize=function(){if(!n||!n.closest(a[0].documentElement).length)return 0;var b=n.get(0).files;return _.isDefined(b[0])?b[0].size:0};this.hasFileSelected=function(){return!!this.getFilename()};
this.reset=function(){var a=this,b=n.clone(!0);n.replaceWith(b);n=b;n.on("change",function(){k&&d.$apply(function(){var b=a.getFilename(),b=_.strRightBack(b,"/"),b=_.strRightBack(b,"\\");k({$filename:b,$filesize:a.getFileSize()})})})};this.setup=function(a,b,c,d){p=a;n=b;k=c;l=d;this.reset()};this.upload=function(){var a=b.defer(),k=function(){var b,d,e,g;try{e=q[0].contentWindow.location;if(!_.str.contains(e.pathname,"uploadSuccess")){f.clientReporting.fault("upload:wrongUploadLocation",{location:e});
a.reject({message:"wrong_upload_location"});return}g="?"===e.search[0]?e.search.substring(1):e.search;_.each(g.split("&"),function(a){_.startsWith(a,"bucket=")?b=decodeURIComponent(a.substring(7)):_.startsWith(a,"key=")&&(d=decodeURIComponent(a.replace(/\+/g," ").substring(4)))});if(!b||!d){f.clientReporting.fault("upload:missingBucketKey",{location:e});a.reject({message:"missing_bucket_key"});return}a.resolve({s3Bucket:b,s3Key:d})}catch(k){f.clientReporting.fault("upload:caughtException",{exception:k,
location:e}),a.reject({message:"file_upload_exception"})}c.$digest()};q.unbind("load",k);q.on("load",k);h.getUploadParameters().then(function(a){d.params=a;d.params.success_action_redirect="https://"+f.location.host+"/elasticbeanstalk/service/util/uploadSuccess";e(function(){p.submit()},1)},function(a){l?l({$error:a,$messageKey:"unable_to_get_upload_parameters"}):g.error("unable_to_get_upload_parameters",{message:amzn.beanstalk.utils.htmlEntities(a.message)});return b.reject()});return a.promise}}]);
amzn.beanstalk.components.directive("fileUploader",["$sce",function(a){return{restrict:"E",templateUrl:"partials/components/file-uploader.html",replace:!0,controller:"FileUploadController",scope:{acceptTypes:"=",changeHandler:"&",disabled:"=?",errorHandler:"&",getFilename:"=",hasFileChecker:"=",reset:"=",uploadTrigger:"="},link:function(b,c,d,e){var f=d.changeHandler?b.changeHandler:null;d=d.errorHandler?b.errorHandler:null;e.setup(c.find("form"),c.find('input[type="file"]'),f,d);b.disabled=_.isDefined(b.disabled)?
b.disabled:!1;b.getFilename=e.getFilename;b.hasFileChecker=e.hasFileSelected;b.reset=e.reset;b.uploadTrigger=e.upload;b.trustUrl=function(b){return a.trustAsResourceUrl(b)};b.$watch("acceptTypes",function(){var a=_.map(b.acceptTypes,function(a){return"."===a[0]?a:"."+a}).join(",");c.find('input[type="file"]').attr("accept",a)})}}}]);amzn.beanstalk.components.directive("changeDigester",["$rootScope",function(a){return{restrict:"A",link:function(b,c){c.on("change",function(){a.$digest()})}}}])})();(function(){var a={};amzn.beanstalk.components.service("loaderStatusService",["LocalizationService",function(b){var c={setStatus:function(d,e,f,g){a[d]=b.localize(e,f);g&&(e=function(){c.removeStatus(d)},g.then(e,e))},removeStatus:function(b){delete a[b]}};return c}]);amzn.beanstalk.components.controller("loadingController",["$rootScope","$scope","BeanstalkLocations","Environments","ebStatusIndicator",function(a,c,d,e,f){c.statusIndicator=f;a.$on("$routeChangeStart",function(a,b){b&&(b.$$route&&b.$$route.resolve)&&
(c.loading=!0,c.environment=e.environmentsById[d.getEnvironmentId()])});a.$on("$routeChangeSuccess",function(){c.loading=!1})}]);amzn.beanstalk.components.directive("loaderDisplay",["EnvironmentNavigations",function(b){return{restrict:"A",scope:{environment:"=",loading:"="},templateUrl:"partials/components/loader-display.html",link:function(c){c.statusMessages=a;c.displayEnvironmentSidenav=function(){return _.isObject(c.environment)&&b.has(c.environment)}}}}])})();(function(){amzn.beanstalk.components.pauseTimeInput={};amzn.beanstalk.components.directive("pauseTimeInput",["Duration","LocalizationService",function(a,b){return{restrict:"E",replace:!0,scope:{controlsDisabled:"=",error:"=",maxValue:"@",model:"="},templateUrl:"partials/components/pause-time-input.html",link:function(c){var d=new a;d.setIso8601(c.maxValue);c.duration=new a;c.$watch("model",function(a){a?c.duration.setIso8601(a):c.duration.hours=c.duration.minutes=c.duration.seconds=0});c.$watch("duration",
function(){c.duration.normalize();c.duration.isLessThan(d)?c.error=null:c.error=b.localize("pause_time_exceeds_max_time_error",{maxValue:c.maxValue});if(c.duration.hours||c.duration.minutes||c.duration.seconds)c.model=c.duration.getIso8601()},!0)}}}])})();(function(){amzn.beanstalk.components.directive("showFeedback",function(){return function(a,b,c){var d=document.getElementById("feedback");if(!_.isNull(d))b.on("click",function(){d.click()})}})})();(function(){var a="docker iis-7-5 iis-8 iis-8-5 multi-container-docker node-js php python ruby tomcat".split(" ");amzn.beanstalk.components.filter("solutionStackToIcon",function(){return function(b){b=amzn.beanstalk.utils.structifySolutionStack(b);var c=_.strLeft(b.platformDescription," (legacy)"),d=b.platformName.toLowerCase().replace(/[ \.]/ig,"-");"iis"===d&&(d=(b.platformName+(c?" "+c:"")).toLowerCase().replace(/[ \.]/ig,"-"));return"icon-"+(_.contains(a,d)?d:"cogs")}});amzn.beanstalk.components.filter("solutionStackToPlatform",
function(){return function(a){return amzn.beanstalk.utils.structifySolutionStack(a).platformName}});amzn.beanstalk.components.filter("solutionStackToPlatformAndVersion",function(){return function(a){a=amzn.beanstalk.utils.structifySolutionStack(a);return a.platformName+(a.platformDescription?" "+a.platformDescription:"")}})})();(function(){amzn.beanstalk.components.TITLE_DATA_PROVIDER={};amzn.beanstalk.components.value("TITLE_DATA_PROVIDER",["BeanstalkLocations","Environments",function(a,b){var c=a.getApplicationName()||"",d="",e=b.find(a.getEnvironmentId());e&&(d=e.environmentName);e=a.getGraphMetricName();return{environmentName:d,applicationName:c,metricName:e}}])})();(function(){amzn.beanstalk.components.updatingAlert={};amzn.beanstalk.components.directive("updatingAlert",["EnvironmentHelper","BeanstalkLocations","LocalizationService",function(a,b,c){return{restrict:"A",replace:!0,templateUrl:"partials/components/updating-alert.html",scope:{onEventsPage:"@"},link:function(d,e,f){a.injectSelectedApplicationAndEnvironment(d);d.useDefaultText=!f.updatingAlert;d.updateText=c.localize(f.updatingAlert,{status:c.localize(amzn.beanstalk.utils.getEnvironmentStatusString(d.environment))});
d.eventsUrl=b.getPathToEnvironmentEvents(d.environment);d.defaultMessage=c.localize("updating_environment_alert_message",{status:c.localize(amzn.beanstalk.utils.getEnvironmentStatusString(d.environment))});d.isUpdating=function(){return amzn.beanstalk.utils.isEnvironmentUpdating(d.environment)};d.isAbortableOperationInProgress=function(){return amzn.beanstalk.utils.isAbortableOperationInProgress(d.environment)};d.isEnvironmentAborting=function(){return amzn.beanstalk.utils.isEnvironmentAborting(d.environment)}}}}])})();(function(){amzn.beanstalk.constants={};amzn.beanstalk.constants={ALERT_DURATION:5E3,LONG_ALERT_DURATION:1E4,APPLICATIONS_REFRESH_RATE:3E4,DASHBOARD_EVENT_REFRESH_DELAY:1E4,MONITORING_REFRESH_DELAY:3E4,EVENTS_REFRESH_DELAY:3E4,ALARM_REFRESH_DELAY:3E4,DASHBOARD_EVENT_REFRESH_DELAY_FAST:3E3,DASHBOARD_ENVIRONMENT_REFRESH_DELAY_FAST:3E3,DASHBOARD_HEALTH_REFRESH_DELAY:10100,DASHBOARD_HEALTH_REFRESH_INSTANCES_LIMIT:100,DELETE_APPLICATION_REFRESH_DELAY:2E3,ENVIRONMENT_CHANGED:"amzn.beanstalk.environmentChanged",
ENVIRONMENT_ADDED:"amzn.beanstalk.environmentAdded",ENVIRONMENT_DELETED:"amzn.beanstalk.environmentDeleted",APPLICATION_CHANGED:"amzn.beanstalk.applicationChanged",APPLICATION_ADDED:"amzn.beanstalk.applicationAdded",APPLICATION_DELETED:"amzn.beanstalk.applicationDeleted",ALARMS_CHANGED:"amzn.beanstalk.alarmsChanged",RESOURCES_CHANGED:"amzn.beanstalk.resourcesChanged",CONFIGURATION_OPTIONS_CHANGED:"amzn.beanstalk.configurationOptionsChanged",CONFIGURATION_SETTINGS_CHANGED:"amzn.beanstalk.configurationSettingsChanged",
CONFIGURATION_CREATED:"amzn.beanstalk.configurationCreated",CONFIGURATION_DELETED:"amzn.beanstalk.configurationDeleted",REQUEST_CHANGED:"amzn.beanstalk.requestChanged",SAVE_MODIFICATIONS:"amzn.beanstalk.saveModifications",CANCEL_MODIFICATIONS:"amzn.beanstalk.cancelModifications",ENTER_KEY:13,VALID_ENVIRONMENT_NAME_PATTERN:/^[a-zA-Z0-9][a-zA-Z0-9\-]+[a-zA-Z0-9]$/,ENVIRONMENTS_REFRESH_RATE:3E4,ISO_8601:"YYYY-MM-DDTHH:mm:ss.SSS[Z]",SNIPPET_SUFFIX:".EBConsoleSnippet",CREATE_DEFAULT_ROLE:"%create-default-role-value%",
DEFAULT_INSTANCE_PROFILE:"aws-elasticbeanstalk-ec2-role",DEFAULT_SERVICE_ROLE:"aws-elasticbeanstalk-service-role",DEFAULT_WORKER_INSTANCE_PROFILE:"aws-elasticbeanstalk-ec2-worker-role",APP_SIDEBAR_DISPLAY:"application-sidebar-display",APP_SIDEBAR_DISPLAY_VERSION:2,CONFIG_SOURCE_CUSTOM_PLATFORM:"custom",CONFIG_SOURCE_ENVIRONMENT:"environment",CONFIG_SOURCE_PARTIAL_TEMPLATE:"partial",CONFIG_SOURCE_SOLUTION_STACK:"solution-stack",CONFIG_SOURCE_SAVED_CONFIG:"saved-configuration",service:{environmentType:{SINGLE_INSTANCE:"SingleInstance",
LOAD_BALANCED:"LoadBalanced"}},DEFAULT_TAGS:["elasticbeanstalk:environment-id","elasticbeanstalk:environment-name","Name"],MAX_NUMBER_TAGS:47,WEB_SERVER:"WebServer",WORKER:"Worker",APPLICATION:"application",ENVIRONMENT:"environment",BUNDLE:"bundle",TAIL:"tail",DOCKER_PRECONFIGURED:"docker",GENERIC:"generic",LEGACY:"legacy",NATIVE:"native",TERMINATED:"Terminated",FIXED:"Fixed",PERCENTAGE:"Percentage",UPDATE_LEVEL_MINOR:"minor",UPDATE_LEVEL_PATCH:"patch",MAX_BATCH_SIZE:1E4,DEFAULT_BATCH_SIZE_FIXED:1,
DEFAULT_BATCH_SIZE_PERCENT:30,ALL_AT_ONCE:"AllAtOnce",DISABLED:"Disabled",HEALTH:"Health",HEALTH_STATUS_CODES:{Ok:0,Pending:0,Info:1,Unknown:5,"No Data":10,Warning:15,Degraded:20,Severe:25},IMMUTABLE:"Immutable",RDS_ALLOCATED_STORAGE_MAP:{mysql:{minValue:5},"oracle-se1":{minValue:10},"oracle-se":{minValue:10},"oracle-ee":{minValue:10},"sqlserver-ee":{minValue:30},"sqlserver-ex":{minValue:30},"sqlserver-web":{minValue:30},"sqlserver-se":{minValue:200},postgres:{minValue:5}},ROLLING:"Rolling",ROLLING_WITH_ADDITIONAL_BATCH:"RollingWithAdditionalBatch",
TIME:"Time",IGNORE_HEALTH_CHECK:"IgnoreHealthCheck",ENHANCED:"enhanced",BASIC:"basic",ACTION_TYPES:{INSTANCE_REFRESH:"InstanceRefresh",PLATFORM_UPDATE:"PlatformUpdate"},ACTION_STATUSES:{PENDING:"Pending",RUNNING:"Running",SCHEDULED:"Scheduled",UNKNOWN:"Unknown"},WORKER_DEFAULT_HTTP_CONNECTIONS:10,WORKER_DEFAULT_VISIBILITY_TIMEOUT:300,WORKER_DEFAULT_ERROR_VISIBILITY_TIMEOUT:2,ASG_CAPACITY_LIMIT:1E4,CNAME_DOMAIN:jQuery("#cname-domain").attr("href")||".elasticbeanstalk.com",DOCS_DOMAIN:jQuery("#docs-domain").attr("href")||
"https://docs.aws.amazon.com",EXPERIMENT_ENABLED:"true"===jQuery('meta[name="eb-experiment-enabled"]').attr("content")||!1,S3_DOMAIN:jQuery("#s3-domain").attr("href")||"s3.amazonaws.com"};amzn.beanstalk.constants.RDS_SNIPPET_URL="https://"+amzn.beanstalk.constants.S3_DOMAIN+"/elasticbeanstalk-env-resources-{{region}}/eb_snippets/rds/rds.json"})();(function(){amzn.beanstalk.appsNavBar={};amzn.beanstalk.components.controller("ApplicationsNavBarController",["$scope","$log","BeanstalkLocations","Applications","Environments","LocalizationService",function(a,b,c,d,e,f){var g=null;a.AppModel=d;a.displayAllAppsMenu=!1;a.displayCreateLink=!0;a.getEnvironments=function(a){if(a)return e.environmentsByApplication[a.applicationName]};a.getEnvironmentUrl=function(a){return a.status!==amzn.beanstalk.constants.TERMINATED?c.getPathToEnvironmentDashboard(a):
c.getPathToEnvironmentEvents(a)};a.unselectApplication=function(a){g===a.applicationName&&(g=null)};a.toggleApplicationSelection=function(a){g=g===a.applicationName?null:a.applicationName};a.isSelected=function(a){return!a?!1:g===a.applicationName};a.getApplicationOverviewUrl=function(a){return c.getPathToApplicationOverview(a.applicationName)};a.getApplicationVersionsUrl=function(a){return c.getPathToApplicationVersions(a)};a.getSavedConfigurationsUrl=function(a){return c.getPathToApplicationConfigurations(a)};
a.getAllApplicationUrl=function(){return c.getPathToAllApplications()};a.getSelectedApplicationName=function(){return c.getApplicationName()};a.isCurrentApp=function(a){return!a?!1:a.applicationName===c.getApplicationName()};a.getCreateUrl=function(){var b=a.getSelectedApplicationName();return!_.isUndefined(b)&&_.has(d.applicationsByName,b)?c.getPathToCreateEnvironment(a.getSelectedApplicationName()):c.getPathToNewApplication()};a.getCreateLinkText=function(){var b=a.getSelectedApplicationName();
return!_.isUndefined(b)&&_.has(d.applicationsByName,b)?f.localize("create_environment_button_text"):f.localize("create_application_button_text")}}]);amzn.beanstalk.components.directive("navDisplay",function(){return{restrict:"A",scope:{},replace:!0,controller:"ApplicationsNavBarController",templateUrl:"partials/applications-nav-bar.html",link:function(a,b,c,d){var e=b.find(".create-link").outerWidth(),f=b.find(".brand").outerWidth(),g=b.find(".display-all-apps").outerWidth(),h=jQuery('<li class="app-name-width-checker"><a><span class="name-check-field-value"></span><i class="icon-caret-down"></i></a></li>'),
k=h.find(".name-check-field-value"),l=_.memoize(function(a){k.text(" "+a+" ");return h.outerWidth()});b.find(".nav").append(h);b.resize(function(){a.$apply()});a.getNavApplications=function(c){if(!c)return c;var d,k=[],h,m=!1,t=a.getSelectedApplicationName(),s=0;t&&((h=_.find(c,function(a){return a.applicationName===t}))?s=l(t):t=null);d=1<c.length||!t&&1===c.length;s=b.width()-f-s;a.displayCreateLink=d?e<s-g:e<s;a.displayCreateLink&&(s-=e);for(d=0;d<c.length;d+=1){var v=c[d];if(v.applicationName===
t)m=!0;else{var w=l(v.applicationName);if(0>s-w)break;else s-=w}k.push(v)}t&&!m&&k.unshift(h);if(k.length===c.length)a.displayAllAppsMenu=!1;else{c=g-s;for(h=t?1:0;0<c&&k.length>h;)m=k.pop(),t&&t===m.applicationName?k.unshift(m):c-=l(m.applicationName);a.displayAllAppsMenu=!0}return k}}}})})();(function(){amzn.beanstalk.ResourceRedirectController={};amzn.beanstalk.module.controller("ResourceRedirectController",["$routeParams","BeanstalkLocations",function(a,b){var c=amzn.beanstalk.constants.APPLICATION,d=amzn.beanstalk.constants.ENVIRONMENT,e={allApplications:_.bind(b.goToAllApplications,this,"deep_linking_routing_error",{resourceType:a.resourceType})};e[c]=_.bind(b.goToApplicationOverview,this,a.resourceIdentifier);e[d]=_.bind(b.goToEnvironmentLookup,this,a.resourceIdentifier);(_.has(e,
a.resourceType)?e[a.resourceType]:e.allApplications).call()}])})();(function(){amzn.beanstalk.collections.factory("ScheduledActionsCollection",["ScheduledAction",function(a){var b=amzn.beanstalk.constants.ASG_CAPACITY_LIMIT,c=amzn.beanstalk.constants.service.environmentType.LOAD_BALANCED,d=amzn.beanstalk.constants.service.environmentType.SINGLE_INSTANCE,e=function(){this.collection=[];this.environmentType=null};e.prototype.add=function(b){_.has(b,"name")&&(b=b instanceof a?b:(new a(b.name)).set(b),this.validateUniquenessOf(b,"name"),this.validateUniquenessOf(b,"recurrence"),
b.validate(this)&&this.collection.push(b))};e.prototype.collects=function(a){return"aws:autoscaling:scheduledaction"===a.namespace&&!_.isNull(a.resourceName)};e.prototype.getCapacityLimit=function(){return this.environmentType===d?1:b};e.prototype.getOptionSettings=function(){return _.reduce(this.collection,function(a,b){return a.concat(b.getOptionSettings())},[])};e.prototype.getOptionsToRemove=function(){return _.reduce(this.collection,function(a,b){return a.concat(b.getOptionsToRemove())},[])};
e.prototype.indexOf=function(b){var c=b instanceof a?b.name:b;return _.reduce(this.collection,function(a,b,d){return b.name===c?d:a},-1)};e.prototype.isDirty=function(){return _.reduce(this.collection,function(a,b){return a||b.dirty||b.remove},!1)};e.prototype.remove=function(a){a=this.indexOf(a);-1<a&&this.collection.splice(a,1)};e.prototype.validate=function(){return _.reduce(this.collection,function(a,b){return b.validate(this)&&a},!0,this)};e.prototype.validateUniquenessOf=function(a,b){if(!_.isString(b))throw new TypeError("ScheduledActionsCollection#validateUniquenessOf requires a property");
var c=a[b];if(_.isBlank(c))return!0;var d=_.some(this.collection,function(a){return a[b]===c});a.errors.set("scheduled_action_"+b+"_must_be_unique",d);return!d};e.prototype.withConfigurationSettings=function(a){if(!_.isDefined(a)||!_.has(a,"optionSettings"))return this;var b=_.findWhere(a.optionSettings,{namespace:"aws:elasticbeanstalk:environment",optionName:"EnvironmentType"});return this.withOptionSettings(a.optionSettings).withEnvironmentType(b)};e.prototype.withEnvironmentType=function(a){a=
_.isObject(a)?_.has(a,"value")?a.value:null:_.isString(a)?a:null;if(a===c||a===d)this.environmentType=a;return this};e.prototype.withOptionSettings=function(b){if(!_.isArray(b))return this;b=_.reduce(b,function(b,c){this.collects(c)&&(_.has(b,c.resourceName)||(b[c.resourceName]=new a(c.resourceName)),b[c.resourceName].deserialize(c));return b},{},this);this.collection=_.toArray(b);return this};return e}])})();(function(){amzn.beanstalk.collections.factory("TagsCollection",["Tag",function(a){var b=amzn.beanstalk.constants.DEFAULT_TAGS,c=amzn.beanstalk.constants.MAX_NUMBER_TAGS;return function(){var d={};this.collection=[];this.defaults=[];this.length=0;this.max=c;var e=function(a){return a.key.toLowerCase()},f=function(a){return _.reduce(a,function(a,b){a[b.key]=_.pick(b,"key","value");return a},{})},g=function(a){a=_.reduce(a,function(a,b){a.hasOwnProperty(b.key)||(a[b.key]=[]);a[b.key].push(b);return a},
{});_.each(a,function(a,b){_.each(a,function(b){b.errors.set("tag_key_must_be_unique",1<a.length)})})};this.add=function(b,c){if(!this.maxedOut()){var d=new a(b,c);this.length=this.collection.push(d);return this}};this.addBlankTag=function(){0===this.blanks().length&&this.add("","");return this};this.at=function(a){return this.collection[a]};this.blanks=function(){return _.filter(this.collection,function(a){return a.isBlank()})};this.getTagsToAdd=function(){var a=f(d.custom),b=f(this.noBlanks());
return _.filter(b,function(b,c){return!(a[c]&&a[c].value===b.value)})};this.getTagsToRemove=function(){var a=f(d.custom),b=f(this.noBlanks()),a=_.keys(a),b=_.keys(b);return _.difference(a,b)};this.indexOf=function(a){return _.reduce(this.collection,function(b,c,d){return c.key===a.key?d:b},-1)};this.isValid=function(){var a=this.noBlanks();return _.reduce(a,function(a,b){return b.validate()&&a},!0)};this.keys=function(){return _.map(this.collection,function(a){return a.key})};this.maxedOut=function(){return this.length>=
this.max};this.noBlanks=function(){return _.filter(this.collection,function(a){return!a.isBlank()})};this.remove=function(a){a===this.length-1?this.collection[a].clear():-1<a&&(this.collection.splice(a,1),this.length=this.collection.length,this.addBlankTag());return this};this.validate=function(){g(this.noBlanks());return this.isValid()};this.withTags=function(c){this.collection=[];d=_.groupBy(c,function(a){return _.contains(b,a.key)?"eb":"custom"});this.defaults=_.chain(d.eb).sortBy(e).map(function(b){return new a(b.key,
b.value)}).value();_.chain(d.custom).sortBy(e).map(function(a){return this.add(a.key,a.value)},this);this.addBlankTag();return this}}}])})();(function(){amzn.beanstalk.directives={};amzn.beanstalk.directives=angular.module("beanstalkDirectives",[])})();(function(){amzn.beanstalk.directives.directive("analyticsClick",["AnalyticsService",function(a){return{restrict:"A",replace:!1,link:function(b,c,d){c.on("click",function(){var b={};!c.is(":disabled")&&!c.hasClass("disabled")&&(c.is(":checkbox")&&(b.checked=c.is(":checked")),a.trackClick(d.analyticsClick,b))})}}}])})();(function(){amzn.beanstalk.directives.directive("analyticsInput",["AnalyticsService",function(a){return{require:"ngModel",restrict:"A",replace:!1,link:function(b,c,d,e){c.on("blur",function(){var b={};if(!c.is(":disabled")&&!c.hasClass("disabled")){if((c.is("input[type='date']")||c.is("input[type='number']")||c.is("input[type='text']"))&&_.isDefined(e))b=e.$viewValue;a.trackClick(d.analyticsInput,b)}})}}}])})();(function(){amzn.beanstalk.directives.directive("analyticsSelect",["AnalyticsService",function(a){return{require:"ngModel",restrict:"A",replace:!1,link:function(b,c,d,e){c.on("change",function(){var b=[];if(!c.is(":disabled")&&!c.hasClass("disabled")){if(("select-one"===c.prop("type")||"select-multiple"===c.prop("type"))&&_.isDefined(e))b=e.$viewValue;a.trackClick(d.analyticsSelect,b)}})}}}])})();(function(){amzn.beanstalk.directives.directive("batchSizePicker",function(){var a=amzn.beanstalk.constants.FIXED,b=amzn.beanstalk.constants.PERCENTAGE;return{require:"^form",restrict:"E",templateUrl:"partials/directives/batch-size-picker.html",link:function(c,d,e,f){var g=f.batchSizeFixed,h=f.batchSizePercentage,k=function(a){f.$addControl(a);angular.forEach(a.$error,function(b,c){f.$setValidity(c,!b,a)})},l=function(d){d&&c.batchSizeType&&(c.batchSize.value=c.batchSizeType.value===a&&c.batchSizeFixed?
c.batchSizeFixed.toString():c.batchSizeType.value===b&&c.batchSizePercentage?c.batchSizePercentage.toString():null)};c.batchSizeInvalid=function(a){return c.submitted&&c.batchSizeType&&c.batchSizeType.value===a&&f["batchSize"+a].$invalid};c.$watch("batchSizeFixed",l);c.$watch("batchSizePercentage",l);c.$watch("batchSize",function(d){d&&c.batchSizeType&&(c.batchSizeType.value===a?(c.batchSizeFixed=parseInt(c.batchSize.value,10),c.modal.instances&&(c.batchSizeDisplay=c.batchSizeFixed)):c.batchSizeType.value===
b&&(c.batchSizePercentage=parseInt(c.batchSize.value,10),c.batchSizeDisplay=c.batchSizePercentage,100<c.batchSizeDisplay&&(c.batchSizeDisplay=100),c.batchSizeDisplay+="%"))},!0);c.$watch("batchSizeType",function(b){c.batchSizeType&&(c.batchSizeType.value===a?(k(g),f.$removeControl(h)):(k(h),f.$removeControl(g)),l(b))},!0);c.$watch("deploymentPolicy",function(a){c.disablePicker=a&&!(a.value===amzn.beanstalk.constants.ROLLING||a.value===amzn.beanstalk.constants.ROLLING_WITH_ADDITIONAL_BATCH)},!0)}}})})();(function(){amzn.beanstalk.directives.directive("draggable",function(){return function(a,b,c){a=jQuery("body");var d=!1,e=0,f=0;b.find("[drag-handle]").on("mousedown",function(a){d=!0;e=a.pageX-b.offset().left;f=a.pageY-b.offset().top;b.css("margin",0);b.offset({left:a.pageX-e,top:a.pageY-f});return!1});a.on("mousemove",function(a){d&&b.offset({left:a.pageX-e,top:a.pageY-f})});a.on("mouseup",function(){d=!1})}})})();(function(){amzn.beanstalk.directives.directive("ebControlGroup",function(){return{restrict:"E",scope:{validationMessages:"="},template:"<div class=\"control-group\" ng-class=\"{'input-error':validationMessages.isSeverityError(),'input-warning':validationMessages.isSeverityWarning()}\"><ng-transclude></ng-transclude></div>",transclude:!0}})})();(function(){amzn.beanstalk.directives.directive("ebDocsHref",function(){return{replace:!0,restrict:"A",scope:{},template:'<a href="{{link}}" ng-transclude target="_blank"></a>',transclude:!0,link:function(a,b,c){b.removeAttr("eb-docs-href");a.link=amzn.beanstalk.constants.DOCS_DOMAIN+c.ebDocsHref}}})})();(function(){amzn.beanstalk.directives.directive("ebPopoverX",function(){return{restrict:"A",scope:{onUpdate:"&",content:"="},link:function(a,b,c){var d=function(e){e.preventDefault();var g=jQuery(e.currentTarget),h=jQuery(c.container);e.clientX>g.offset().left&&e.clientX<g.offset().left+g.outerWidth()&&e.clientY>g.offset().top&&e.clientY<g.offset().top+g.outerHeight()||(h.off("mouseleave",d),b.off("mouseleave",d),a.onUpdate({content:null}),h.hide())},e=b.find("[popover-pointer]"),e=e.length?e:b;e.on("mouseover",
function(e){e.preventDefault();if(a.onUpdate({content:a.content})){a.$apply();e=angular.element("body");var g=angular.element(c.container);if("bottom"===(c.placement||"bottom")){var h=b.position().top+b.height()+10,k=b.position().left+b.width()/2-10;e.height()>g.height()+h?(g.removeClass("top"),g.addClass("bottom")):(h=b.position().top-g.height()+10,g.removeClass("bottom"),g.addClass("top"));g.css({top:h,left:k})}g.on("mouseleave",d);b.on("mouseleave",d);g.show()}})}}})})();(function(){amzn.beanstalk.directives.directive("ebRowspanHover",function(){return{restrict:"A",link:function(a,b,c){b.on("mouseenter","td",function(){var a=jQuery(this).parent();a.addClass("hover");0===a.has("td[rowspan]").length&&a.prevAll("tr:has(td[rowspan]):first").find("td[rowspan]").addClass("hover")});b.on("mouseleave","td",function(){jQuery(this).parent().removeClass("hover").prevAll("tr:has(td[rowspan]):first").find("td[rowspan]").removeClass("hover")})}}})})();(function(){amzn.beanstalk.directives.directive("ebSelectButton",function(){return{restrict:"E",scope:{disableMenu:"=",nameFilterExpr:"@",onSelection:"&",options:"=",selection:"="},templateUrl:"partials/directives/eb-select-button.html",replace:!0,link:function(a){a.filter=function(b){return a.$eval("name"+(a.nameFilterExpr||""),{name:b})};a.opened=!1;a.selectOption=function(b){b.disabled||(a.selection=b,a.opened=!1,a.onSelection({option:b}))};a.toggleOpen=function(){a.disableMenu||(a.opened=!a.opened)}}}})})();(function(){amzn.beanstalk.directives.directive("ebValidationMessages",function(){return{restrict:"A",require:"?ngModel",link:function(a,b,c,d){d&&(d.$validators.validationMessages=function(b,d){var g=a.$eval(c.ebValidationMessages);return _.isDefined(g)?!g.isSeverityError():!0},d.$validators.warningMessages=function(b,d){var g=a.$eval(c.ebValidationMessages);return _.isDefined(g)?!g.isSeverityWarning():!0})}}})})();(function(){amzn.beanstalk.directives.directive("enterPress",function(){return function(a,b,c){b.bind("keydown, keypress",function(b){13===b.keyCode&&(a.$apply(c.enterPress),b.preventDefault())})}})})();(function(){amzn.beanstalk.directives.directive("expandingSection",function(){return{restrict:"E",scope:{collapsed:"=",sectionTitle:"@"},templateUrl:"partials/directives/expanding-section.html",transclude:!0,link:function(a,b,c){a.$on("expandingSection:collapse",function(b,c){a.collapsed=c})}}})})();(function(){amzn.beanstalk.directives.directive("preferredWindowLocalTime",["LocalizationService",function(a){return{restrict:"E",scope:{format:"@",message:"@",value:"="},template:'<span ng-bind-html="managementWindow"></span>',link:function(b){b.$watch("value",function(){if(_.isDefined(b.value)){var c=-1,d=b.value.split(":"),e=_.map(moment().locale("en").localeData()._weekdaysShort,function(a){return a.toUpperCase()});_.isString(d[0])&&(c=_.indexOf(e,d[0].toUpperCase()));0>c?b.managementWindow="":
(c=later.parse.recur().on(c+1).dayOfWeek().on(parseInt(d[1],10)).hour().on(parseInt(d[2],10)).minute(),c=later.schedule(c).next(),d=moment()._dateTzOffset(),b.managementWindow=a.localize(b.message,{endTime:moment(c).add(2,"hours").zone(d).format(b.format),startTime:moment(c).zone(d).format(b.format),timeZone:moment().format("ZZ")}))}})}}}])})();(function(){amzn.beanstalk.directives.directive("maxvalue",function(){return{require:"ngModel",link:function(a,b,c,d){var e=function(b){var e=a.$eval(c.maxvalue);if(_.isNumber(b)&&b>e)d.$setValidity("maxvalue",!1);else return d.$setValidity("maxvalue",!0),b};a.$watch(c.maxvalue,function(a){b.attr("max",a);d.$setViewValue(d.$viewValue);d.$validate()});d.$parsers.push(e);d.$formatters.push(e)}}});amzn.beanstalk.directives.directive("minvalue",function(){return{require:"ngModel",link:function(a,b,c,
d){var e=function(b){var e=a.$eval(c.minvalue);if(_.isNumber(b)&&b<e)d.$setValidity("minvalue",!1);else return d.$setValidity("minvalue",!0),b};a.$watch(c.minvalue,function(a){b.attr("min",a);d.$setViewValue(d.$viewValue);d.$validate()});d.$parsers.push(e);d.$formatters.push(e)}}})})();(function(){amzn.beanstalk.directives.directive("showMoreParagraph",[function(){return{restrict:"E",scope:{width:"="},templateUrl:"partials/directives/show-more-paragraph.html",transclude:!0,link:function(a,b,c){a.expanded=!1;a.textIsOverflowed=!1;a.toggleExpanded=function(){a.expanded=!a.expanded};a.getWidth=function(){return b.find("span").width()};a.$watch(a.getWidth,function(b){a.textIsOverflowed=b>a.width},!0)}}}])})();(function(){amzn.beanstalk.directives.directive("solutionStackPicker",["LocalizationService","PlatformsCollection",function(a,b){return{restrict:"E",scope:{change:"&",controlsDisabled:"=",options:"=",tier:"=",useRecommended:"=?",value:"="},templateUrl:"partials/directives/solution-stack-picker.html",link:function(c,d,e){c.hasFeedbackButton=!_.isNull(document.getElementById("feedback"));c.solutionStacks=[];c.useRecommended=!0;c.changeSolutionStack=function(){c.useRecommended=_.isNull(c.value)};c.localizeSpec=
function(b){return a.localize(b.platformDescription?"spec_choice_with_version":"spec_choice_no_version",b)};c.platformChange=function(a){c.useRecommended=!0;c.value=_.isEmpty(a)?null:_.first(a)};c.selectPlatform=function(a){if(!_.isNull(a)){var b=_.find(c.platforms.options,function(b){return _.some(b.specs,function(b){return b.solutionStackName===a.solutionStackName})});b&&(c.solutionStacks=b.specs)}};c.validate=function(){var a=!0;c.value&&(a=_.some(c.platforms.solutionStacks,function(a){return a.solutionStackName===
c.value.solutionStackName}));return a};c.$watch("options",function(){c.platforms=new b(c.options,c.tier)});c.$watch("value",function(a,b){c.selectPlatform(a);c.change({$solutionStack:a})})}}}])})();(function(){amzn.beanstalk.directives.directive("uniqueAmong",function(){return{require:"ngModel",link:function(a,b,c,d){a.$watch(c.ngModel,function(b){var f=_.reduce(a.$eval(c.uniqueAmong),function(a,b){var c=String(b),d=a[c];a[c]=d?d+1:1;return a},{});d.$setValidity("duplicate",2>(f[String(b)]||0))})}}});amzn.beanstalk.directives.directive("uniqueFrom",function(){return{require:"ngModel",link:function(a,b,c,d){a.$watch(c.ngModel,function(b){var f=_.map(a.$eval(c.uniqueFrom),function(a){return _.isString(a)?
a.toLowerCase():a});b=_.isString(b)?b.toLowerCase():b;_.isArray(f)&&d.$setValidity("unique",!_.contains(f,b))})}}})})();(function(){amzn.beanstalk.directives.directive("utcDatePicker",["$window","LocalizationService",function(a,b){return{require:"?ngModel",restrict:"E",scope:{reset:"="},templateUrl:"partials/directives/utc-date-picker.html",link:function(c,d,e,f){if(!a.moment||!a.jQuery||!a.jQuery.fn.daterangepicker)throw Error("jQuery, bootstrap-daterangepicker, and moment.js are all required to use this directive");var g,h=d.find("input"),k={applyClass:"btn-primary",format:"YYYY-MM-DD[T]HH:mm:ss[Z]",locale:{applyLabel:b.localize("default_apply_button_text"),
cancelLabel:b.localize("default_cancel_button_text"),daysOfWeek:moment.weekdaysMin(),firstDay:moment.localeData()._week.dow,monthNames:moment.monthsShort()},singleDatePicker:!0,timePicker:!0,timePickerIncrement:1,timePicker12Hour:!1};h.daterangepicker(k,function(a,b){f&&b.isValid()&&c.$apply(function(){f.$setViewValue(b.format("YYYY-MM-DD[T]HH:mm:ss[Z]"))})});g=h.data("daterangepicker");g.move=function(){jQuery(window).width();var a=this.element.offset().top-this.container.outerHeight()-0;this.container.addClass("dropup");
this.container.css({left:this.element.offset().left-0,right:"auto",top:a});this.container.offset().left+this.container.outerWidth()>jQuery(window).width()&&this.container.css({left:"auto",right:0})};g.renderCalendar=_.wrap(g.renderCalendar,function(a){var c=Array.prototype.slice.call(arguments,1);return a.apply(this,c).replace('<div class="calendar-time">','<div class="calendar-time-label">'+b.localize("time")+'</div><div class="calendar-time">')});g.updateInputText=function(){if(!this.element.is(":focus")){var a=
this.endDate.isValid()?this.endDate.format(this.format):null;this.element.val(a)}};h.off("keyup.daterangepicker");h.on("keyup.daterangepicker",jQuery.proxy(function(){this.element.is("input")&&(this.element.val().length?(this.oldEndDate=this.endDate.clone(),this.endDate=moment(this.element.val(),this.format),this.endDate.isSame(this.oldEndDate)||this.notify(),this.updateCalendars(),c.$apply()):c.$apply(function(){f.$setViewValue(null)}))},g));d.find(".calendar-btn").on("click",function(){h.trigger("click");
h.trigger("focus")});f&&c.$parent.$watch(e.ngModel,function(a,b){a?g.setEndDate(moment(a,"YYYY-MM-DD[T]HH:mm:ss[Z]")):h.val(a)});c.$on("$destroy",function(){g.remove()});c.reset=function(){g.setEndDate(moment.utc().add(1,"hour").startOf("hour"));h.val(null)}}}}])})();(function(){amzn.beanstalk.configuration={};amzn.beanstalk.configuration=angular.module("beanstalkConfiguration",[]);amzn.beanstalk.configuration.constants={CUSTOM_NAMESPACE:"custom"}})();(function(){amzn.beanstalk.configuration.models={};amzn.beanstalk.configuration.models.Cards={};amzn.beanstalk.configuration.factory("Cards",["$filter","LocalizationService","OptionsInputMapper","RegionUtil",function(a,b,c,d){function e(a,d,e,f,h){if(!_.isUndefined(a.displayConfigs)){var r=[],m={},t={};_.each(a.customProperties,function(a,b){var d=a(e,f,t);_.isUndefined(d)||(t[c.calculateKey(g,b)]={name:b,value:d})});var s=function(a,b){return _.some(a,function(a,d){return _.some(a,function(a){var f=
c.calculateKey(d,a);return b(a,e[f]||t[f])})})};_.each(a.displayConfigs,function(a){!s(a.excludes,function(a,b){return!_.isUndefined(b)})&&!s(a.required,function(a,e){if(_.isUndefined(e))return!0;var f=c.cleanOptionName(a),g=e.name,k;k=e.value;k=_.isArray(k)?k.join(","):k;g=b.localizeSafe("card_"+d+"_"+g+"_"+k,null,k);m[f]=g;return!1})&&(a.dynamic?(a=a.dynamic(e,f,t,m,h),_.each(a,function(a){r.push(a)})):r.push({label:b.localize(a.label,m,a.label),value:b.localize(a.value,m,a.value)}))});if(0!==r.length)return a=
amzn.beanstalk.utils.deepClone(a),a.displayedOptions=r,a}}var f="AWS_ACCESS_KEY_ID AWS_SECRET_KEY PARAM1 PARAM2 PARAM3 PARAM4 PARAM5".split(" "),g=amzn.beanstalk.configuration.constants.CUSTOM_NAMESPACE,h={container:{title:b.localize("card_container"),icon:"icon-globe",edit:"container",customProperties:{EnvVariables:function(a){var b=[];_.each(a,function(a){"aws:elasticbeanstalk:application:environment"===a.namespace&&(_.contains(f,a.name)||!0===a.userDefined)&&b.push(a.name)});if(0<b.length)return b.sort().join(", ")}},
displayConfigs:[{required:{custom:["EnvVariables"]},label:"card_container_label_vars",value:"card_container_value_vars"},{dynamic:function(e,f,g,h,q){var r=[];_.each(e,function(a){(_.startsWith(a.namespace,"aws:elasticbeanstalk:container:")||_.startsWith(a.namespace,"aws:elasticbeanstalk:environment:proxy"))&&!/.*:staticfiles$/.test(a.namespace)&&r.push({label:b.localizeSafe("card_container_label_"+a.name,h,a.name+":"),value:b.localizeSafe("card_container_value_"+a.name,h,a.value)})});r=_.sortBy(r,
function(a){return a.label.toLocaleLowerCase()});f=e["aws:elasticbeanstalk:cloudwatch:logs~StreamLogs"];_.isObject(f)&&(g=String(f.value),g={label:b.localize("card_container_label_streamLogs",h),value:b.localizeSafe("card_container_value_xrayenabled_"+g,h,g)},f.value&&(g.href=a("cloudWatchUrl")(d.getCurrentRegion(),q.environmentName)),r.unshift(g));(q=e[c.calculateKey("aws:elasticbeanstalk:hostmanager","LogPublicationControl")])&&(r=[{label:b.localizeSafe("card_container_label_"+q.name,h,q.name+":"),
value:b.localizeSafe("card_container_value_"+q.name+"_"+!!q.value,h,!!q.value),isFirst:!0}].concat(r));e=e["aws:elasticbeanstalk:xray~XRayEnabled"];_.isObject(e)&&(e=String(e.value),r.unshift({label:b.localize("card_container_label_xrayenabled",h),value:b.localizeSafe("card_container_value_xrayenabled_"+e,h,e)}));return r}}]},elb:{title:b.localize("card_elb"),icon:"icon-globe",edit:"elb",customProperties:{PortOff:function(a,b,d){a=a[c.calculateKey("aws:elb:loadbalancer","LoadBalancerHTTPPort")];if(!_.isUndefined(a)&&
_.isString(a.value)&&"off"===a.value.toLowerCase())return!0},SecurePortOff:function(a,b,d){a=a[c.calculateKey("aws:elb:loadbalancer","LoadBalancerHTTPSPort")];if(!_.isUndefined(a)&&_.isString(a.value)&&"off"===a.value.toLowerCase())return!0},UnknownHealth:function(a,b,d){a=a[c.calculateKey("aws:elb:healthcheck","Target")];if(!_.isUndefined(a)&&a.value)if(b=/^((TCP):(\d+)|(HTTP):(\d+)(\/[\-\w+&@#\/%?=~|$!:,.;]*))$/.exec(a.value))d[c.calculateKey(g,"HealthType")]={name:"HealthType",value:b[2]||b[4]},
d[c.calculateKey(g,"HealthPort")]={name:"HealthPort",value:b[3]||b[5]},b[6]&&(d[c.calculateKey(g,"HealthPath")]={name:"HealthPath",value:b[6]});else return a.value},CrossZoneOff:function(a){a=a[c.calculateKey("aws:elb:loadbalancer","CrossZone")];if(!_.isUndefined(a)&&!a.value)return!0},ConnectionDrainingOff:function(a){a=a[c.calculateKey("aws:elb:policies","ConnectionDrainingEnabled")];if(!_.isUndefined(a)&&!a.value)return!0}},displayConfigs:[{required:{"aws:elb:loadbalancer":["LoadBalancerHTTPPort",
"LoadBalancerPortProtocol"]},excludes:{custom:["PortOff"]},label:"card_elb_label_port",value:"card_elb_value_port"},{required:{"aws:elb:loadbalancer":["LoadBalancerHTTPPort"]},excludes:{custom:["PortOff","LoadBalancerPortProtocol"]},label:"card_elb_label_port",value:"card_elb_value_port_legacy"},{required:{custom:["PortOff"]},label:"card_elb_label_port_off",value:"card_elb_value_port_off"},{required:{"aws:elb:loadbalancer":["LoadBalancerHTTPSPort","LoadBalancerSSLPortProtocol"]},excludes:{custom:["SecurePortOff"]},
label:"card_elb_label_sport",value:"card_elb_value_sport"},{required:{"aws:elb:loadbalancer":["LoadBalancerHTTPSPort"]},excludes:{custom:["SecurePortOff","LoadBalancerSSLPortProtocol"]},label:"card_elb_label_sport",value:"card_elb_value_sport_legacy"},{required:{custom:["SecurePortOff"]},label:"card_elb_label_sport_off",value:"card_elb_value_sport_off"},{required:{custom:["HealthType","HealthPort"]},excludes:{custom:["UnknownHealth","HealthPath"]},label:"card_elb_label_health_tcp",value:"card_elb_value_health_tcp"},
{required:{custom:["HealthType","HealthPort","HealthPath"]},excludes:{custom:["UnknownHealth"]},label:"card_elb_label_health_http",value:"card_elb_value_health_http"},{required:{custom:["UnknownHealth"]},label:"card_elb_label_health",value:"card_elb_value_health"},{required:{"aws:elb:loadbalancer":["CrossZone"]},excludes:{custom:["CrossZoneOff"]},label:"card_elb_cross_zone_enabled",value:"card_elb_value_cross_zone_enabled"},{required:{custom:["CrossZoneOff"]},label:"card_elb_cross_zone_enabled",value:"card_elb_value_cross_zone_disabled"},
{required:{"aws:elb:policies":["ConnectionDrainingEnabled","ConnectionDrainingTimeout"]},excludes:{custom:["ConnectionDrainingOff"]},label:"card_elb_connection_draining_enabled",value:"card_elb_value_connection_draining_enabled"},{required:{custom:["ConnectionDrainingOff"]},label:"card_elb_connection_draining_enabled",value:"card_elb_value_connection_draining_disabled"}]},health:{title:b.localize("card_health"),icon:"icon-globe",edit:"health",displayConfigs:[{required:{"aws:elasticbeanstalk:application":["Application Healthcheck URL"]},
label:"card_health_label_healthcheck_url",value:"card_health_value_healthcheck_url"},{required:{"aws:elasticbeanstalk:healthreporting:system":["SystemType"]},label:"card_health_label_health_type",value:"card_health_value_health_type"}]},instances:{title:b.localize("card_instances"),icon:"icon-globe",edit:"server",customProperties:{ShowIops:function(a){if((a=_.find(a,function(a){return"aws:autoscaling:launchconfiguration"===a.namespace&&"RootVolumeType"===a.name}))&&"io1"===a.value)return!0}},displayConfigs:[{required:{"aws:autoscaling:launchconfiguration":["InstanceType"]},
label:"card_instances_label_type",value:"card_instances_value_type"},{required:{"aws:autoscaling:launchconfiguration":["RootVolumeType"]},label:"card_instances_label_root_volume_type",value:"card_instances_value_root_volume_type"},{required:{"aws:autoscaling:launchconfiguration":["RootVolumeSize"]},label:"card_instances_label_root_volume_size",value:"card_instances_value_root_volume_size"},{required:{custom:["ShowIops"],"aws:autoscaling:launchconfiguration":["RootVolumeIOPS"]},label:"card_instances_label_root_volume_iops",
value:"card_instances_value_root_volume_iops"},{required:{"aws:autoscaling:asg":["Availability Zones"]},label:"card_instances_label_zones",value:"card_instances_value_zones"},{required:{"aws:autoscaling:launchconfiguration":["EC2KeyName"]},label:"card_instances_label_key",value:"card_instances_value_key"}]},managed_updates:{title:b.localize("card_managed_updates"),icon:"icon-globe",edit:"managed_updates",customProperties:{IsDisabled:function(a){a=a[c.calculateKey("aws:elasticbeanstalk:managedactions",
"ManagedActionsEnabled")];if(!_.isUndefined(a)&&!a.value)return!0}},displayConfigs:[{required:{"aws:elasticbeanstalk:managedactions":["ManagedActionsEnabled"]},excludes:{custom:["IsDisabled"]},label:"card_managed_updates_enabled",value:"card_managed_updates_value_enabled"},{required:{custom:["IsDisabled"]},label:"card_managed_updates_enabled",value:"card_managed_updates_value_disabled"},{required:{"aws:elasticbeanstalk:managedactions":["PreferredStartTime"]},excludes:{custom:["IsDisabled"]},label:"card_managed_updates_label_window",
value:"card_managed_updates_value_window"}]},rds:{title:b.localize("card_rds"),icon:"icon-globe",edit:"rds",displayConfigs:[{required:{"console:rds:dbinstance":["Endpoint","Port"]},dynamic:function(c,e,f,g,h){e={label:b.localize("card_rds_label_endpoint",g),value:b.localize("card_rds_value_endpoint",g)};c=c["console:rds:dbinstance~DBInstanceId"];_.isObject(c)&&(e.href=a("rdsRedirectUrl")(d.getCurrentRegion(),String(c.value)));return[e]}},{required:{"aws:rds:dbinstance":["DBEngine"]},label:"card_rds_label_engine",
value:"card_rds_value_engine"},{required:{"aws:rds:dbinstance":["DBInstanceClass"]},label:"card_rds_label_instance",value:"card_rds_value_instance"},{required:{"aws:rds:dbinstance":["DBAllocatedStorage"]},label:"card_rds_label_storage",value:"card_rds_value_storage"},{required:{"aws:rds:dbinstance":["MultiAZDatabase"]},label:"card_rds_label_multi",value:"card_rds_value_multi"},{required:{"aws:rds:dbinstance":["DBDeletionPolicy"]},label:"card_rds_label_delete",value:"card_rds_value_delete"}]},scaling:{title:b.localize("card_scaling"),
icon:"icon-globe",edit:"scaling",customProperties:{NumScheduledActions:function(a){a=_.chain(a).where({namespace:"aws:autoscaling:scheduledaction"}).groupBy("resourceName").keys().value().length;if(0<a)return a},HasVpc:function(a){return _.findWhere(a,{name:"Subnets",namespace:"aws:ec2:vpc"})},SingleInstance:function(a){return _.findWhere(a,{name:"EnvironmentType",value:amzn.beanstalk.constants.service.environmentType.SINGLE_INSTANCE})}},displayConfigs:[{required:{"aws:elasticbeanstalk:environment":["EnvironmentType"]},
label:"card_scaling_label_type",value:"card_scaling_value_type"},{required:{custom:["SingleInstance"],"aws:autoscaling:asg":["Custom Availability Zones"]},excludes:{custom:["HasVpc"]},label:"card_scaling_label_czones",value:"card_scaling_value_czones"},{required:{"aws:autoscaling:asg":["MinSize","MaxSize"]},excludes:{custom:["SingleInstance"]},label:"card_scaling_label_instances",value:"card_scaling_value_instances"},{required:{"aws:autoscaling:trigger":["Statistic","MeasureName"]},excludes:{custom:["SingleInstance"]},
label:"card_scaling_label_scale",value:"card_scaling_value_scale"},{required:{"aws:autoscaling:trigger":["UpperThreshold"]},excludes:{custom:["SingleInstance"]},label:"card_scaling_label_add",value:"card_scaling_value_add"},{required:{"aws:autoscaling:trigger":["LowerThreshold"]},excludes:{custom:["SingleInstance"]},label:"card_scaling_label_remove",value:"card_scaling_value_remove"},{required:{custom:["NumScheduledActions"]},label:"card_scaling_label_scheduled_actions",value:"card_scaling_value_scheduled_actions"}]},
sns:{title:b.localize("card_sns"),icon:"icon-globe",edit:"notifications",customProperties:{HasOptions:function(a,b,c){if(!_.isEmpty(a))return!0}},displayConfigs:[{required:{"aws:elasticbeanstalk:sns:topics":["Notification Endpoint"]},label:"card_sns_label_notes_on",value:"card_sns_value_notes_on"},{required:{custom:["HasOptions"]},excludes:{"aws:elasticbeanstalk:sns:topics":["Notification Endpoint"]},label:"card_sns_label_notes_off",value:"card_sns_value_notes_off"},{required:{"aws:elasticbeanstalk:sns:topics":["Notification Endpoint"]},
label:"card_sns_label_endpoint",value:"card_sns_value_endpoint"}]},updates_deployments:{title:b.localize("card_updates_deployments"),icon:"icon-globe",edit:"updates_deployments",customProperties:{IsDisabled:function(a){a=a[c.calculateKey("aws:autoscaling:updatepolicy:rollingupdate","RollingUpdateEnabled")];if(!_.isUndefined(a)&&!a.value)return!0},SingleInstance:function(a){return _.findWhere(a,{name:"EnvironmentType",value:amzn.beanstalk.constants.service.environmentType.SINGLE_INSTANCE})},IsPercentage:function(a){return _.findWhere(a,
{name:"BatchSizeType",value:amzn.beanstalk.constants.PERCENTAGE})},IsHealthBased:function(a){return _.findWhere(a,{name:"RollingUpdateType",value:amzn.beanstalk.constants.HEALTH})},IsImmutableBased:function(a){return _.findWhere(a,{name:"RollingUpdateType",value:amzn.beanstalk.constants.IMMUTABLE})},IsImmutablePolicy:function(a){return _.findWhere(a,{name:"DeploymentPolicy",value:amzn.beanstalk.constants.IMMUTABLE})},IsAllAtOncePolicy:function(a){return _.findWhere(a,{name:"DeploymentPolicy",value:amzn.beanstalk.constants.ALL_AT_ONCE})}},
displayConfigs:[{required:{"aws:elasticbeanstalk:command":["DeploymentPolicy"]},label:"card_updates_deployments_policy_label",value:"card_updates_deployments_policy_value"},{required:{"aws:elasticbeanstalk:command":["BatchSize"]},excludes:{custom:["SingleInstance","IsPercentage","IsImmutablePolicy","IsAllAtOncePolicy"]},label:"card_updates_deployments_label_batch_size",value:"card_updates_deployments_value_batch_size_fixed"},{required:{"aws:elasticbeanstalk:command":["BatchSize"],custom:["IsPercentage"]},
excludes:{custom:["SingleInstance","IsImmutablePolicy","IsAllAtOncePolicy"]},label:"card_updates_deployments_label_batch_size",value:"card_updates_deployments_value_batch_size_percentage"},{required:{"aws:autoscaling:updatepolicy:rollingupdate":["RollingUpdateEnabled"]},excludes:{custom:["IsDisabled"]},label:"card_rolling_update_enabled",value:"card_elb_value_rolling_update_enabled"},{required:{custom:["IsDisabled"]},label:"card_rolling_update_enabled",value:"card_elb_value_rolling_update_disabled"},
{required:{"aws:autoscaling:updatepolicy:rollingupdate":["RollingUpdateType"]},excludes:{custom:["IsDisabled"]},label:"card_rolling_update_label_type",value:"card_rolling_update_value_type"},{required:{"aws:autoscaling:updatepolicy:rollingupdate":["MaxBatchSize"]},excludes:{custom:["IsDisabled","IsImmutableBased"]},label:"card_rolling_update_label_max_batch_size",value:"card_rolling_update_value_max_batch_size"},{required:{"aws:autoscaling:updatepolicy:rollingupdate":["MinInstancesInService"]},excludes:{custom:["IsDisabled",
"IsImmutableBased"]},label:"card_rolling_update_label_min_in_service",value:"card_rolling_update_value_min_in_service"},{required:{"aws:autoscaling:updatepolicy:rollingupdate":["PauseTime"]},excludes:{custom:["IsDisabled","IsHealthBased","IsImmutableBased"]},label:"card_rolling_update_label_pause_time",value:"card_rolling_update_value_pause_time"}]},vpc:{title:b.localize("card_vpc"),icon:"icon-globe",edit:"vpc",displayConfigs:[{required:{"aws:ec2:vpc":["VPCId"]},label:"card_vpc_label_id",value:"card_vpc_value_id"},
{required:{"aws:ec2:vpc":["AssociatePublicIpAddress"]},label:"card_vpc_label_apip",value:"card_vpc_value_apip"},{required:{"aws:ec2:vpc":["Subnets"]},label:"card_vpc_label_isub",value:"card_vpc_value_isub"},{required:{"aws:ec2:vpc":["ELBSubnets"]},label:"card_vpc_label_esub",value:"card_vpc_value_esub"},{required:{"aws:ec2:vpc":["ELBScheme","VPCId"]},label:"card_vpc_label_visibility",value:"card_vpc_value_visibility"},{required:{"aws:ec2:vpc":["DBSubnets"]},label:"card_vpc_label_rsub",value:"card_vpc_value_rsub"}]},
worker:{title:b.localize("card_worker"),icon:"icon-globe",edit:"worker",displayConfigs:[{required:{"aws:elasticbeanstalk:sqsd":["WorkerQueueURL"]},label:"card_worker_label_queue_url",value:"card_worker_value_queue_url"},{required:{"aws:elasticbeanstalk:sqsd":["HttpPath"]},label:"card_worker_label_http_path",value:"card_worker_value_http_path"},{required:{"aws:elasticbeanstalk:sqsd":["MimeType"]},label:"card_worker_label_mime_type",value:"card_worker_value_mime_type"},{required:{"aws:elasticbeanstalk:sqsd":["HttpConnections"]},
label:"card_worker_label_http_connections",value:"card_worker_value_http_connections"},{required:{"aws:elasticbeanstalk:sqsd":["VisibilityTimeout"]},label:"card_worker_label_visibility_timeout",value:"card_worker_value_visibility_timeout"}]}};return{getCardsForOptions:function(a,b,c){var d={};_.each(h,function(f,g){var h=e(f,g,a,b,c);h&&(d[g]=h)});return d}}}])})();(function(){amzn.beanstalk.configuration.directives={};amzn.beanstalk.configuration.directive("awsConfigurationCard",function(){return{restrict:"E",scope:{card:"=",configurable:"=",configureClicked:"&"},templateUrl:"partials/environment/configuration/configuration-card.html",replace:!0}})})();(function(){amzn.beanstalk.configuration.filters={};amzn.beanstalk.configuration.filter("namespace",function(){return function(a,b){return _.sortBy(_.filter(a,function(a){return _.startsWith(a.option.namespace,b)}),function(a){return a.option.name})}});amzn.beanstalk.configuration.filter("defaultText",function(){return function(a,b){return a||b}});amzn.beanstalk.configuration.filter("formatArn",function(){return function(a){return a.substr(a.lastIndexOf("/")+1)}});amzn.beanstalk.configuration.filter("cloudWatchUrl",
["$filter",function(a){return function(b,c){return"/cloudwatch/home?region="+b+"#logs:prefix="+a("cloudWatchLogGroupPrefix")(c)+"/"}}]);amzn.beanstalk.configuration.filter("cloudWatchLogGroupPrefix",function(){return function(a){return"/aws/elasticbeanstalk/"+encodeURIComponent(a)}});amzn.beanstalk.configuration.filter("rdsRedirectUrl",function(){return function(a,b){return"/elasticbeanstalk/service/util/rdsConsoleRedirect/?dbInstanceId="+b+"&region="+a}});amzn.beanstalk.configuration.filter("formatOptionValue",
["$filter",function(a){return function(b){return b.href?a("generateLink")(b.value,b.href,!0):a("blankString")(b.value)}}]);amzn.beanstalk.configuration.filter("generateLink",function(){return function(a,b,c){return'<a href="'+b+'" '+(c?'target="_blank"':"")+">"+a+(c?'<i class="icon-external-link"></i>':"")+"</a>"}})})();(function(){amzn.beanstalk.configuration.controller("ManagedUpdatesEditController",["$scope",function(a){a.convertToOptionSetting=function(){var b=moment.weekdays(),c=_.map(moment().locale("en").localeData()._weekdaysShort,function(a){return a.toUpperCase()});a.input.maintenanceWindow.value=c[_.indexOf(b,a.input.maintenanceWindow.day)]+":"+a.input.maintenanceWindow.hour+":"+a.input.maintenanceWindow.min};a.convertToOptionSetting()}])})();(function(){amzn.beanstalk.configuration.controller("ScalingEditController",["$scope","$timeout","ExternalsService","ScheduledAction","ScheduledActionsCollection",function(a,b,c,d,e){var f=amzn.beanstalk.constants.ASG_CAPACITY_LIMIT;a.autoScalingSectionCollapsed=!0;a.capacityLimit=f;a.currentEdit.scheduledActions=(new e).withConfigurationSettings(a.configurationSettings);a.currentMaxSize="--";a.currentMinSize="--";a.currentTime=moment.utc();a.edit=null;a.lastSavedScheduledAction=null;a.scalingTriggerSectionCollapsed=
!0;a.scheduledAction=null;a.scheduledActionModal={open:!1};a.scheduledActionOccurrence="one-time";a.scheduledActionsSectionCollapsed=!0;a.utc=!0;a.resources.autoScalingGroups.length&&(e=_.first(a.resources.autoScalingGroups),c.describeAutoScalingGroup(e.name).then(function(b){b.length&&(b=_.first(b),a.currentMaxSize=b.additionalInfo.maxSize,a.currentMinSize=b.additionalInfo.minSize)}));var g=function(){var a=new d,b=moment.utc().add(1,"hour").startOf("hour");a.set("startTime",b.format("YYYY-MM-DD[T]HH:mm:ss[Z]"));
return a},h=function(){a.currentTime=moment.utc();b(h,1E3)};a.addScheduledAction=function(){a.scheduledActionModal.open||(a.scheduledAction=g(),a.openModal())};a.clearForm=function(){var b=_.toNumber(a.currentMaxSize),c=_.toNumber(a.currentMinSize);a.lastSavedScheduledAction=a.scheduledAction;a.scheduledAction=g();a.scheduledAction.maxSize=_.isNaN(b)?null:b;a.scheduledAction.minSize=_.isNaN(c)?null:c;a.scheduledActionForm.$setPristine()};a.closeModal=function(){a.edit=null;a.lastSavedScheduledAction=
null;a.scheduledActionModal.open=!1;a.scheduledActionForm.$setPristine()};a.editScheduledAction=function(b){a.scheduledActionModal.open||(a.edit=b,a.scheduledAction=_.clone(b),a.openModal())};a.openModal=function(){_.isNull(a.scheduledAction.startTime)&&a.resetStartTime();_.isNull(a.scheduledAction.endTime)&&a.resetEndTime();a.scheduledAction.errors.reset();a.scheduledActionModal.open=!0;a.scheduledActionOccurrence=_.isNull(a.scheduledAction.recurrence)?"one-time":"recurrent"};a.resetEndTime=function(){};
a.resetStartTime=function(){};a.saveScheduledAction=function(){a.scheduledAction.errors.reset();a.scheduledActionForm.$setSubmitted();b(function(){a.scheduledActionForm.$invalid||("one-time"===a.scheduledActionOccurrence&&(a.scheduledAction.set("endTime",null),a.scheduledAction.set("recurrence",null)),a.edit||a.currentEdit.scheduledActions.add(a.scheduledAction),a.scheduledAction.validate(a.currentEdit.scheduledActions)&&(a.edit?(a.edit.set(a.scheduledAction),a.closeModal()):a.clearForm()))})};a.sortNextOccurrence=
function(a){a=a.getNextOccurrence();return _.isNull(a)?Infinity:a.getTime()};a.$watch("currentEdit.options.EnvironmentType.value",function(b){a.capacityLimit=a.currentEdit.scheduledActions.withEnvironmentType(b).getCapacityLimit()});h()}])})();(function(){amzn.beanstalk.configuration.controller("WorkerEditController",["$scope",function(a){var b=function(b){var c=_.findWhere(a.resources.queues,{name:"WorkerQueue"});this.url=_.result(b,"value")||_.result(c,"url")},c=_.findWhere(a.configurationSettings.optionSettings,{namespace:"aws:elasticbeanstalk:sqsd",optionName:"WorkerQueueURL"});a.advancedOptionsCollapsed=!0;a.currentWorkerQueueResource=new b(c);a.filterQueueName=function(a){a.displayName=_.last(a.displayName.split("/"));return a};a.onWorkerQueueChange=
function(){a.currentWorkerQueueResource=new b(a.currentEdit.options.WorkerQueueURL)}}])})();(function(){amzn.beanstalk.components.directive("environmentActionButton",["LocalizationService",function(a){return{restrict:"E",replace:!0,scope:{actions:"=",disableMenu:"=",onAction:"&"},templateUrl:"partials/environment/environment-action-button.html",link:function(a,c,d){a.opened=!1;a.actionSelected=function(c){c.isDisabled()||(a.opened=!1,a.onAction({action:c.name}))};a.toggleOpen=function(){a.opened=!a.opened}}}}])})();(function(){amzn.beanstalk.environment={};amzn.beanstalk.environment=angular.module("beanstalkEnvironment",[])})();(function(){amzn.beanstalk.environment.directive("solutionStackVersionPicker",["PlatformsCollection","LocalizationService",function(a,b){return{restrict:"E",scope:{value:"=",options:"=",tier:"=",upgrade:"="},templateUrl:"partials/directives/solution-stack-version-picker.html",link:function(c,d,e){d=(new a(c.options,c.tier)).getAvailablePlatformVersions(c.value);c.availableSolutionStacks=_.map(d,function(a){a.group=b.localize("older");return a});c.recommended=_.first(c.availableSolutionStacks);c.recommended.group=
b.localize("latest");c.value=c.upgrade?c.recommended.solutionStackName:c.value}}}])})();(function(){amzn.beanstalk.environment.controller("ApplyManagedActionModalController",["$q","$scope","ApplyManagedActionModal","BeanstalkLocations","LocalizationService","EnvironmentsService",function(a,b,c,d,e,f){b.actionTypes=amzn.beanstalk.constants.ACTION_TYPES;b.applyModal=c;b.errorMessage=null;b.open=null;b.updateStatus=null;var g=function(){b.updateStatus=e.localize("applying_managed_action_status");f.applyManagedAction(b.applyModal.environment.environmentId,{actionId:b.applyModal.managedAction.actionId}).then(function(){b.cancel();
d.goToEnvironmentDashboard(b.applyModal.environment,"managed_update_started")},function(a){_.isObject(a)&&(a=a.message);b.updateStatus=null;b.errorMessage=e.localize("unable_to_apply_action",{message:amzn.beanstalk.utils.htmlEntities(a)})})};b.apply=function(){b.errorMessage=null;b.submitted=!0;g()};b.cancel=function(){b.updateStatus=null;b.errorMessage=null;b.applyModal.open=!1}}])})();(function(){amzn.beanstalk.environment.directive("environmentSidenav",["$route","BeanstalkLocations","Environment","FeaturesService",function(a,b,c,d){return{replace:!0,restrict:"A",scope:{environment:"=",selected:"@"},templateUrl:"partials/environment/sidenav.html",link:function(d){var f={disabled:!0,selected:!1};d.navigation=_.has(a,"current")?a.current.locals.navigation:null;d.getLinkClass=function(a){return!(d.environment instanceof c)?f:{disabled:d.environment.isTerminated()&&"events"!==a,selected:d.selected===
a}};d.$watch("environment",function(a){a instanceof c&&(a.isTerminated()||(d.configurationPath=b.getPathToEnvironmentConfiguration(d.environment),d.dashboardPath=b.getPathToEnvironmentDashboard(d.environment),d.healthPath=b.getPathToEnvironmentHealthDashboard(d.environment),d.logsPath=b.getPathToEnvironmentLogs(d.environment),d.manageAlarmsPath=b.getPathToManageAlarms(d.environment),d.managedActionsPath=b.getPathToEnvironmentManagedActionsDashboard(d.environment),d.monitoringPath=b.getPathToMonitoring(d.environment),
d.tagsPath=b.getPathToTags(d.environment)),d.eventsPath=b.getPathToEnvironmentEvents(d.environment))})}}}])})();(function(){amzn.beanstalk.environment.FixEnvironmentController={};var a={"0000000001":"partials/environment/fix/add-profile-fix.html","0000000002":"partials/environment/fix/add-profile-fix.html"};amzn.beanstalk.environment.controller("FixEnvironmentController",["$scope","EnvironmentHelper","BeanstalkLocations",function(b,c,d){c.injectSelectedApplication(b);c.injectSelectedEnvironment(b);c=d.getAlertId();a[c]||d.goToEnvironmentDashboard(b.environment);b.fixer=a[c]}])})();(function(){amzn.beanstalk.monitoring={};amzn.beanstalk.monitoring=angular.module("beanstalkMonitoring",[]);var a={DEFAULT_PERIOD:300,METRICS_SETTINGS_VERSION:"v3",NUMBER_OF_POINTS:12,statistics:{AVERAGE:"Average",MAXIMUM:"Maximum",MINIMUM:"Minimum",SAMPLE_COUNT:"SampleCount",SUM:"Sum"},units:{BITS:"bits",BYTES:"bytes",COUNT:"count",LABELS:"labels",NONE:"none",PERCENT:"percent",SECONDS:"seconds"}};amzn.beanstalk.monitoring.constants=a;var b=[{namespace:"AWS/ElasticBeanstalk",metricName:"EnvironmentHealth",
defaultStatistic:a.statistics.MAXIMUM,unit:a.units.LABELS,labelType:"AWS/ElasticBeanstalk/Health"},{namespace:"AWS/ElasticBeanstalk",metricName:"InstanceHealth",defaultStatistic:a.statistics.MAXIMUM,unit:a.units.LABELS,labelType:"AWS/ElasticBeanstalk/Health"},{namespace:"AWS/ElasticBeanstalk",metricName:"RootFilesystemUtil",defaultStatistic:a.statistics.MAXIMUM},{namespace:"AWS/ELB",metricName:"RequestCount",defaultStatistic:a.statistics.SUM},{namespace:"AWS/ELB",metricName:"HTTPCode_ELB_5XX",defaultStatistic:a.statistics.SUM},
{namespace:"AWS/ELB",metricName:"HTTPCode_Backend_2XX",defaultStatistic:a.statistics.SUM},{namespace:"AWS/ELB",metricName:"HTTPCode_Backend_3XX",defaultStatistic:a.statistics.SUM},{namespace:"AWS/ELB",metricName:"HTTPCode_Backend_4XX",defaultStatistic:a.statistics.SUM},{namespace:"AWS/ELB",metricName:"HTTPCode_Backend_5XX",defaultStatistic:a.statistics.SUM},{namespace:"AWS/ELB",metricName:"BackendConnectionErrors",defaultStatistic:a.statistics.SUM},{namespace:"AWS/ELB",metricName:"SurgeQueueLength",
defaultStatistic:a.statistics.MAXIMUM},{namespace:"AWS/ELB",metricName:"SpilloverCount",defaultStatistic:a.statistics.SUM}];amzn.beanstalk.monitoring.MetricDefinition=function(a,c,d,e,f,p){var q=_.extend(this,_.findWhere(b,{namespace:a,metricName:c}));q.namespace=a;q.metricName=c;q.logicalId=d;q.statistic=e||q.defaultStatistic||amzn.beanstalk.monitoring.constants.statistics.AVERAGE;q.description=f||q.statistic+" "+q.metricName;q.dimensions=p||{};return q};amzn.beanstalk.monitoring.MetricDefinition.prototype.dimensionsAsString=
function(){return _.isEmpty(this.dimensions)?null:_.chain(this.dimensions).pairs().sortBy(function(a){return a[0]}).map(function(a){return a.join(": ")}).value().join(", ")};amzn.beanstalk.monitoring.MetricDefinition.prototype.toKey=function(){return this.namespace+"|"+this.metricName+"|"+this.logicalId+"|"+this.statistic+"|"+this.dimensionsAsString()};amzn.beanstalk.monitoring.metricDefinitionFromObject=function(a){return new amzn.beanstalk.monitoring.MetricDefinition(a.namespace,a.metricName,a.logicalId,
a.statistic,a.description,a.dimensions)};amzn.beanstalk.monitoring.findResourceForAlarm=function(a,b){var c=[];if(0===a.dimensions.length||"AWS/ElasticBeanstalk"===a.namespace)c=_.filter(b,function(b){b=amzn.beanstalk.monitoring.namespacesFromResource(b);return _.contains(b,a.namespace)});else{var d=_.reduce(a.dimensions,function(a,b){_.contains(amzn.beanstalk.monitoring.PHYS_ID_NAMES,b.name)&&a.push(b.value);return a},[]);if(0===d.length)return null;c=_.filter(b,function(a){return _.contains(d,a.physicalResourceId)})}return 1!==
c.length?null:c[0]};amzn.beanstalk.monitoring.convertAlarmDimensions=function(a){return _.omit(_.reduce(a.dimensions,function(a,b){a[b.name]=b.value;return a},{}),amzn.beanstalk.monitoring.PHYS_ID_NAMES)};amzn.beanstalk.monitoring.metricDefinitionFromAlarm=function(a,b){return new amzn.beanstalk.monitoring.MetricDefinition(a.namespace,a.metricName,b.logicalResourceId,a.statistic,a.statistic+" "+a.metricName,amzn.beanstalk.monitoring.convertAlarmDimensions(a))};amzn.beanstalk.monitoring.OPERATORS=
{GreaterThanOrEqualToThreshold:">=",LessThanOrEqualToThreshold:"<=",GreaterThanThreshold:">",LessThanThreshold:"<"};amzn.beanstalk.monitoring.MAX_DATA_POINTS=1440;amzn.beanstalk.monitoring.TIME_RANGES=[3600,10800,28800,43200,86400,259200,604800,1209600];amzn.beanstalk.monitoring.TIME_PERIODS=[60,300,900,1800,3600,21600,86400];amzn.beanstalk.monitoring.TIME_RANGE_PERIOD_MAPPING={10800:900,28800:1800,43200:3600,86400:3600,259200:21600,604800:21600,1209600:86400};var c={"AWS::DynamoDB::Table":"TableName",
"AWS::ElastiCache::CacheCluster":"CacheClusterId","AWS::EC2::Volume":"VolumeId","AWS::EC2::Instance":"InstanceId","AWS::AutoScaling::AutoScalingGroup":"AutoScalingGroupName","AWS::RDS::DBInstance":"DBInstanceIdentifier","AWS::SNS::Topic":"TopicName","AWS::SQS::Queue":"QueueName","AWS::ElasticLoadBalancing::LoadBalancer":"LoadBalancerName","AWS::ElasticBeanstalk::Environment":"EnvironmentName"},d={"AWS/ElasticBeanstalk/Health":[0,1,5,10,15,20,25]};amzn.beanstalk.monitoring.getMetricLabelValues=function(a){return d[a.labelType]};
amzn.beanstalk.monitoring.PHYS_ID_NAMES=_.values(c);var e={"AWS::SQS::Queue":function(a){return/^https?:\/\/[\-\.\w\d]+\/[\-\w\d]+\/([\-\w\d]+)$/.exec(a.physicalResourceId)[1]},"AWS::SNS::Topic":function(a){return a.physicalResourceId.split(":")[5]},"AWS::ElasticBeanstalk::Environment":function(a){return a.logicalResourceId}},f={"AWS::SQS::Queue":function(a){return{"Fn::GetAtt":[a,"QueueName"]}},"AWS::SNS::Topic":function(a){return{"Fn::GetAtt":[a,"TopicName"]}}};amzn.beanstalk.monitoring.namespacesFromResource=
function(a){var b=a.type;return!_.has(c,b)?[]:_.startsWith(b,"AWS::ElasticLoadBalancing")?["AWS/ELB"]:"AWS::EC2::Volume"===b?["AWS/EBS"]:"AWS::EC2::Instance"===b?["AWS/EC2","System/Linux"]:"AWS::AutoScaling::AutoScalingGroup"===b?["AWS/AutoScaling","AWS/EC2","System/Linux"]:"AWS::ElasticBeanstalk::Environment"===b?["ElasticBeanstalk/"+a.physicalResourceId,"ElasticBeanstalk/"+a.logicalResourceId,"AWS/ElasticBeanstalk"]:[_.strLeftBack(b,"::").replace("::","/")]};amzn.beanstalk.monitoring.addParameterPrefix=
function(a){return _.reduce(a,function(a,b,c){a["dimension."+c]=b;return a},{})};amzn.beanstalk.monitoring.getPhysicalIdDimensionName=function(a){return c[a.type]};amzn.beanstalk.monitoring.dimensionsFromResourceForSnippet=function(a,b){var d={};if(_.has(c,a.type)){var e=c[a.type];null!==e&&(_.has(f,a.type)?d[e]=f[a.type](a.logicalResourceId):b==="ElasticBeanstalk/"+a.logicalResourceId||b==="ElasticBeanstalk/"+a.physicalResourceId||(d[e]="AWS/ElasticBeanstalk"===b?"EnvironmentName"===e?{Ref:"AWSEBEnvironmentName"}:
a.logicalResourceId:{Ref:a.logicalResourceId}))}return d};amzn.beanstalk.monitoring.dimensionsFromResource=function(a,b){var d={};_.has(c,a.type)&&!("AWS::ElasticBeanstalk::Environment"===a.type&&"AWS/ElasticBeanstalk"!==b)&&(d[c[a.type]]=_.has(e,a.type)?e[a.type](a):a.physicalResourceId);return d};amzn.beanstalk.monitoring.resolveAlarms=["Alarms","$q","BeanstalkLocations","loaderStatusService",function(a,b,c,d){c=c.getEnvironmentId();return!_.has(a.byEnvironmentId,c)?(a=a.refreshEnvironment(c),d.setStatus("alarms-resolve",
"resolving_alarms_status",{},a),a):amzn.beanstalk.utils.getSuccessfulPromise(b,a.byEnvironmentId[c])}];amzn.beanstalk.monitoring.resolveSettings=["SettingsService","$q","BeanstalkLocations","loaderStatusService",function(a,b,c,d){var e=b.defer(),f={settings:{},versionTag:0};a=a.getSettings([c.getApplicationName(),c.getEnvironmentId(),"metrics",amzn.beanstalk.monitoring.constants.METRICS_SETTINGS_VERSION]);d.setStatus("settings-resolve","resolving_settings_status",{},a);a.then(function(a){a?e.resolve(a):
e.resolve(f)},function(a){e.resolve(f)});return e.promise}]})();(function(){amzn.beanstalk.monitoring.filters={};amzn.beanstalk.monitoring.filter("percent",["LocalizationService",function(a){return function(b,e){return!_.isNumber(b)?b:b.toFixed(e)+a.localize("percent_sign").replace("&nbsp;"," ")}}]);var a=amzn.beanstalk.monitoring.constants.units,b=amzn.beanstalk.monitoring.constants.statistics;amzn.beanstalk.monitoring.filter("scalePeriod",["LocalizationService",function(a){var b=[{key:"seconds",next:60},{key:"minutes",next:60},{key:"hours",next:24},{key:"days",
next:7},{key:"weeks"}];return function(e){if(!e)return"";var f,g;for(f=0;f<b.length;f+=1)if(g=b[f],g.next&&0===e%g.next)e/=g.next;else break;return a.localize(1===e?"single_"+g.key:"multiple_"+g.key,{num:e})}}]);amzn.beanstalk.monitoring.filter("prettifyTopics",[function(){var a=/^arn:aws:sns:[\-a-zA-Z0-9]+:[a-zA-Z0-9]+:([_\-a-zA-Z0-9]{1,256})$/;return function(b){return _.map(b,function(b){var d=a.exec(b);return d?d[1]:b}).join(", ")}}]);amzn.beanstalk.monitoring.filter("scaleTime",["ScaleService",
function(a){return function(b,e,f){return!_.isNumber(b)?b:a.time(b,e)[f]}}]);amzn.beanstalk.monitoring.filter("scaleBytes",["LocalizationService","ScaleService",function(a,b){return function(e,f,g){if(!_.isNumber(e))return e;e=b.bytes(e,f);return a.localize(e[1],{num:e[0].toFixed(g||0)})}}]);amzn.beanstalk.monitoring.filter("labels",["LocalizationService",function(a){return function(b,e){return a.localizeSafe(e.labelType+"_"+b,null,"")}}]);amzn.beanstalk.monitoring.filter("prettifyComparison",function(){return function(a){return!a?
"":amzn.beanstalk.monitoring.OPERATORS[a]}});amzn.beanstalk.monitoring.filter("prettifyUnit",["LocalizationService",function(c){return function(d,e){if(!d)return d;d=e&&e.unit?e.unit:d.toLowerCase();if(a.NONE===d)return null;if(a.LABELS===d)return c.localizeSafe(e.labelType+"_by");var f=e?e.statistic.toLowerCase():"";return a.COUNT===d||b.SAMPLE_COUNT.toLowerCase()===f?c.localize("byCount"):c.localize("in_unit_"+d)}}]);amzn.beanstalk.monitoring.filter("optionalNumber",["numberFilter",function(a){return function(b,
e){return!_.isNumber(b)?b:a(b,e)}}]);amzn.beanstalk.monitoring.filter("scaleNumber",["LocalizationService","ScaleService",function(a,b){return function(e,f){if(!_.isNumber(e))return e;var g=b.number(e);return a.localize(g[1],{num:g[0].toFixed(f||0)})}}]);amzn.beanstalk.monitoring.filter("metricable",function(){return function(a){return _.isEmpty(a)?[]:_.filter(a,function(a){return 0<amzn.beanstalk.monitoring.namespacesFromResource(a).length})}})})();(function(){amzn.beanstalk.monitoring.models={};amzn.beanstalk.monitoring.models={};amzn.beanstalk.monitoring.models.AlarmsModel=function(a){this.byEnvironmentId=a||{};this.findByPhysicalId=function(a,c){return!_.has(this.byEnvironmentId,a)?null:_.findWhere(this.byEnvironmentId[a],{alarmName:c})};this.refreshEnvironment=function(a){throw Error("Should be implemented.");}};amzn.beanstalk.monitoring.models.EnvironmentView=function(a,b){this.alarms=_.has(b.byEnvironmentId,a)?b.byEnvironmentId[a].slice():
[];this.refresh=_.bind(b.refreshEnvironment,b,a);this.findByPhysicalId=_.bind(b.findByPhysicalId,b,a)};amzn.beanstalk.monitoring.factory("Alarms",["MetricsService","Resources","$q","$log","$rootScope",function(a,b,c,d,e){var f=new amzn.beanstalk.monitoring.models.AlarmsModel,g={};f.getEnvironmentView=function(a){if(!_.has(g,a)){var b=new amzn.beanstalk.monitoring.models.EnvironmentView(a,f);g[a]=b;e.$on(amzn.beanstalk.constants.ALARMS_CHANGED,function(c,d,e){a===d&&(b.alarms=e?e.slice():[])})}return g[a]};
f.refreshEnvironment=function(d){function g(b,l,q){return a.listAlarms(b,null,l||null).then(function(a){var c=q?q.concat(a.metricAlarms):a.metricAlarms;if(a.nextToken)return g(b,a.nextToken,c);a=d;var l=f.byEnvironmentId[a];f.byEnvironmentId[a]=c;_.isEqual(l,c)||e.$broadcast(amzn.beanstalk.constants.ALARMS_CHANGED,a,c);return f.byEnvironmentId[d]=c},c.reject)}function l(a){a=_.chain(a.resources).where({type:"AWS::CloudWatch::Alarm"}).reject(function(a){return"AWSEBCloudwatchAlarmHigh"===a.logicalResourceId||
"AWSEBCloudwatchAlarmLow"===a.logicalResourceId}).pluck("physicalResourceId").value();return _.isEmpty(a)?(f.byEnvironmentId[d]=[],amzn.beanstalk.utils.getSuccessfulPromise(c,[])):g(a)}return _.has(b.resourcesByEnvironmentId,d)?l(b.resourcesByEnvironmentId[d]):b.refreshEnvironment(d).then(l,c.reject)};e.$on(amzn.beanstalk.constants.RESOURCES_CHANGED,function(a,b,c,d){if(a=_.has(f.byEnvironmentId,b))c=_.sortBy(_.where(c.resources,{type:"AWS::CloudWatch::Alarm"}),"logicalResourceId"),d=_.sortBy(_.where(d.resources,
{type:"AWS::CloudWatch::Alarm"}),"logicalResourceId"),a=!_.isEqual(c,d);a&&f.refreshEnvironment(b)});return f}]);amzn.beanstalk.monitoring.factory("AvailableMetrics",["MetricsService","$q",function(a,b){function c(d,e,f,l){return a.listMetrics(d,e,f||null).then(function(a){var b=l?l.concat(a.metrics):a.metrics;return a.nextToken?c(d,e,a.nextToken,b):b},b.reject)}function d(a){return _.values(_.reduce(_.flatten(a,!0),function(a,b){var c=b.namespace+"/"+b.metricName;a[c]?a[c].dimensionOptions=(a[c].dimensionOptions||
[]).concat(b.dimensionOptions||[]):a[c]=b;return a},{}))}function e(a,b){_.isArray(b)&&("AWS::ElasticBeanstalk::Environment"===a.type?(_.each(b,function(a){a.namespacePriority=_.startsWith(a.namespace,"ElasticBeanstalk")?-1:0;a.metricPriority="EnvironmentHealth"===a.metricName?-2:"RootFilesystemUtil"===a.metricName?-1:0}),b.sort(function(a,b){return a.namespace!==b.namespace?a.namespacePriority>b.namespacePriority?1:-1:a.metricPriority!==b.metricPriority?a.metricPriority>b.metricPriority?1:-1:a.metricName>
b.metricName?1:-1})):b.sort(function(a,b){return a.metricName>b.metricName?1:-1}))}var f={byEnvironmentId:{},expectEnvironment:function(a){_.has(f.byEnvironmentId,a)||(f.byEnvironmentId[a]={});return f.byEnvironmentId[a]},getState:function(a,b){return!_.has(f.byEnvironmentId,a)||!_.has(f.byEnvironmentId[a],b.logicalResourceId)?"loading":f.byEnvironmentId[a][b.logicalResourceId].state},refresh:function(a,h){f.expectEnvironment(a)[h.logicalResourceId]={state:"loading"};var k=[];_.each(amzn.beanstalk.monitoring.namespacesFromResource(h),
function(a){var b=amzn.beanstalk.monitoring.addParameterPrefix(amzn.beanstalk.monitoring.dimensionsFromResource(h,a));k.push(c(a,b))});return b.all(k).then(function(b){b=d(b);e(h,b);f.byEnvironmentId[a][h.logicalResourceId]={state:"ready",data:b};return b},function(c){f.byEnvironmentId[a][h.logicalResourceId]={state:"error",error:c};return b.reject(c)})}};return f}])})();(function(){amzn.beanstalk.monitoring.services={};var a=amzn.beanstalk.constants.ISO_8601;amzn.beanstalk.monitoring.factory("MetricsService",["RegionUtil","HttpHelper",function(b,c){return{getMetricStatistics:function(d,e,f,g,h){return c.httpFactory({method:"GET",url:_.sprintf("/elasticbeanstalk/service/cloudwatch/stats/%s/%s",f.format(a),g.format(a)),params:_.extendCopy(h||{},{region:b.getCurrentRegion(),namespace:d,metricName:e})})},listMetrics:function(a,e,f){return c.httpFactory({method:"GET",
url:"/elasticbeanstalk/service/cloudwatch/metrics",params:_.extendCopy(e||{},{region:b.getCurrentRegion(),namespace:a,nextToken:f})})},listAlarms:function(a,e,f){return c.httpFactory({method:"GET",url:"/elasticbeanstalk/service/cloudwatch/alarms",params:{region:b.getCurrentRegion(),alarmNames:a,stateValue:e,nextToken:f}})}}}]);amzn.beanstalk.monitoring.factory("ScaleService",function(){var a=["bytes","kilobytes","megabytes","gigabytes","terabytes"],c=["bits","kilobits","megabits","gigabits","terabits"],
d=["ones","thousands","millions","billions","trillions"],e={Microseconds:{},Milliseconds:{prev_scale:"Microseconds",scale_down:function(a){return 1E3*a}},Seconds:{prev_scale:"Milliseconds",scale_down:function(a){return 1E3*a}}};return{bytes:function(d,e){e=e?e.toLocaleLowerCase():"bytes";var h=_.endsWith(e,"bits")?c:a,k,l=d;for(k=_.indexOf(h,e);k<h.length-1&&!(1024>l);k+=1)l/=1024;return[l,h[k]]},time:function(a,b){for(;1>a&&e[b].prev_scale;)a=e[b].scale_down(a),b=e[b].prev_scale;return[a,b]},number:function(a){var b=
a;for(a=0;a<d.length-1&&!(1E3>b);a+=1)b/=1E3;return[b,d[a]]}}})})();(function(){amzn.beanstalk.environment.service("OptionsInputMapper",["OptionSetting","RegionUtil","$log",function(a,b,c){var d=amzn.beanstalk.constants.RDS_SNIPPET_URL,e=[{namespace:"aws:elasticbeanstalk:application",optionName:"Application Healthcheck URL",inputKey:"healthCheckUrl"},{namespace:"aws:elasticbeanstalk:command",optionName:"BatchSize",inputKey:"deploymentBatchSize"},{namespace:"aws:elasticbeanstalk:command",optionName:"BatchSizeType",inputKey:"deploymentBatchSizeType"},{namespace:"aws:elasticbeanstalk:command",
optionName:"DeploymentPolicy",inputKey:"deploymentPolicy"},{namespace:"aws:elasticbeanstalk:command",optionName:"IgnoreHealthCheck",inputKey:"ignoreHealthCheck"},{namespace:"aws:elb:loadbalancer",optionName:"CrossZone",inputKey:"crossZoneEnabled"},{namespace:"aws:elb:policies",optionName:"ConnectionDrainingEnabled",inputKey:"connectionDrainingEnabled"},{namespace:"aws:elb:policies",optionName:"ConnectionDrainingTimeout",inputKey:"connectionDrainingTimeout"},{namespace:"aws:elasticbeanstalk:environment",
optionName:"EnvironmentType",inputKey:"environmentType"},{namespace:"aws:elasticbeanstalk:environment",optionName:"ServiceRole",inputKey:"serviceRole"},{namespace:"aws:elasticbeanstalk:healthreporting:system",optionName:"SystemType",inputKey:"healthReportingSystemType"},{namespace:"aws:elasticbeanstalk:healthreporting:system",optionName:"HealthCheckSuccessThreshold",inputKey:"healthCheckSuccessThreshold"},{namespace:"aws:autoscaling:launchconfiguration",optionName:"EC2KeyName",inputKey:"keyPair"},
{namespace:"aws:autoscaling:launchconfiguration",optionName:"IamInstanceProfile",inputKey:"instanceProfile"},{namespace:"aws:autoscaling:launchconfiguration",optionName:"InstanceType",inputKey:"instanceType"},{namespace:"aws:autoscaling:launchconfiguration",optionName:"RootVolumeIOPS",inputKey:"rootVolumeIops"},{namespace:"aws:autoscaling:launchconfiguration",optionName:"RootVolumeSize",inputKey:"rootVolumeSize"},{namespace:"aws:autoscaling:launchconfiguration",optionName:"RootVolumeType",inputKey:"rootVolumeType"},
{namespace:"aws:autoscaling:launchconfiguration",optionName:"SecurityGroups",inputKey:"vpcSecurityGroup"},{namespace:"aws:elasticbeanstalk:managedactions",optionName:"ManagedActionsEnabled",inputKey:"managedActionsEnabled"},{namespace:"aws:elasticbeanstalk:managedactions",optionName:"PreferredStartTime",inputKey:"preferredStartTime"},{namespace:"aws:elasticbeanstalk:managedactions:platformupdate",optionName:"UpdateLevel",inputKey:"updateLevel"},{namespace:"aws:elasticbeanstalk:managedactions:platformupdate",
optionName:"InstanceRefreshEnabled",inputKey:"instanceRefreshEnabled"},{namespace:"aws:rds:dbinstance",optionName:"DBAllocatedStorage",inputKey:"rdsAllocatedStorage"},{namespace:"aws:rds:dbinstance",optionName:"DBDeletionPolicy",inputKey:"rdsDeletionPolicy"},{namespace:"aws:rds:dbinstance",optionName:"DBEngine",inputKey:"rdsEngine"},{namespace:"aws:rds:dbinstance",optionName:"DBEngineVersion",inputKey:"rdsEngineVersion"},{namespace:"aws:rds:dbinstance",optionName:"DBInstanceClass",inputKey:"rdsInstanceClass"},
{namespace:"aws:rds:dbinstance",optionName:"DBPassword",inputKey:"rdsPassword",noEchoValue:!0},{namespace:"aws:rds:dbinstance",optionName:"DBSnapshotIdentifier",inputKey:"rdsSnapshot"},{namespace:"aws:rds:dbinstance",optionName:"DBUser",inputKey:"rdsUsername"},{namespace:"aws:rds:dbinstance",optionName:"MultiAZDatabase",inputKey:"rdsMultiAz"},{namespace:"aws:autoscaling:updatepolicy:rollingupdate",optionName:"RollingUpdateEnabled",inputKey:"rollingUpdatesEnabled"},{namespace:"aws:autoscaling:updatepolicy:rollingupdate",
optionName:"RollingUpdateType",inputKey:"rollingUpdateType"},{namespace:"aws:autoscaling:scheduledaction",optionName:"DesiredCapacity",inputKey:"scheduledActionDesiredCapacity"},{namespace:"aws:autoscaling:scheduledaction",optionName:"EndTime",inputKey:"scheduledActionEndTime"},{namespace:"aws:autoscaling:scheduledaction",optionName:"MaxSize",inputKey:"scheduledActionMaxSize"},{namespace:"aws:autoscaling:scheduledaction",optionName:"MinSize",inputKey:"scheduledActionMinSize"},{namespace:"aws:autoscaling:scheduledaction",
optionName:"Recurrence",inputKey:"scheduledActionRecurrence"},{namespace:"aws:autoscaling:scheduledaction",optionName:"StartTime",inputKey:"scheduledActionStartTime"},{namespace:"aws:autoscaling:scheduledaction",optionName:"Suspend",inputKey:"scheduledActionSuspend"},{namespace:"aws:elasticbeanstalk:sns:topics",optionName:"Notification Endpoint",inputKey:"email"},{namespace:"aws:elasticbeanstalk:sqsd",optionName:"ErrorVisibilityTimeout",inputKey:"errorVisibilityTimeout"},{namespace:"aws:elasticbeanstalk:sqsd",
optionName:"HttpConnections",inputKey:"httpConnections"},{namespace:"aws:elasticbeanstalk:sqsd",optionName:"HttpPath",inputKey:"workerHttpPath"},{namespace:"aws:elasticbeanstalk:sqsd",optionName:"InactivityTimeout",inputKey:"inactivityTimeout"},{namespace:"aws:elasticbeanstalk:sqsd",optionName:"MimeType",inputKey:"workerMimeType"},{namespace:"aws:elasticbeanstalk:sqsd",optionName:"VisibilityTimeout",inputKey:"visibilityTimeout"},{namespace:"aws:elasticbeanstalk:sqsd",optionName:"WorkerQueueURL",inputKey:"workerQueueUrl"},
{namespace:"aws:ec2:vpc",optionName:"AssociatePublicIpAddress",inputKey:"vpcAssociatePublicIpAddress"},{namespace:"aws:ec2:vpc",optionName:"DBSubnets",inputKey:"vpcRdsSubnets",csvValue:!0},{namespace:"aws:ec2:vpc",optionName:"ELBScheme",inputKey:"internal"},{namespace:"aws:ec2:vpc",optionName:"ELBSubnets",inputKey:"vpcElbSubnets",csvValue:!0},{namespace:"aws:ec2:vpc",optionName:"Subnets",inputKey:"vpcEc2Subnets",csvValue:!0},{namespace:"aws:ec2:vpc",optionName:"VPCId",inputKey:"vpcId"}],f=function(a,
b){this.snippetName=a;this.sourceUrl=b},g=function(c,e,g){g.rdsSnapshot&&e.push(new a("aws:rds:dbinstance","DBSnapshotIdentifier",g.rdsSnapshot));e.push(new a("aws:rds:dbinstance","DBAllocatedStorage",g.rdsAllocatedStorage));e.push(new a("aws:rds:dbinstance","DBDeletionPolicy",g.rdsDeletionPolicy));e.push(new a("aws:rds:dbinstance","DBEngine",g.rdsEngine));e.push(new a("aws:rds:dbinstance","DBEngineVersion",g.rdsEngineVersion));e.push(new a("aws:rds:dbinstance","DBInstanceClass",g.rdsInstanceClass));
e.push(new a("aws:rds:dbinstance","DBPassword",g.rdsPassword));e.push(new a("aws:rds:dbinstance","DBUser",g.rdsUsername));e.push(new a("aws:rds:dbinstance","MultiAZDatabase","true"===g.rdsMultiAz));e=new f("RDS"+amzn.beanstalk.constants.SNIPPET_SUFFIX,d.replace("{{region}}",b.getCurrentRegion()));c.templateSnippets.push(e)},h=function(b,c){b.push(new a("aws:ec2:vpc","DBSubnets",c.vpcRdsSubnets.join(",")))},k=function(b,c){b.push(new a("aws:ec2:vpc","Subnets",c.vpcEc2Subnets.join(",")));c.environmentType!==
amzn.beanstalk.constants.service.environmentType.SINGLE_INSTANCE&&(b.push(new a("aws:ec2:vpc","ELBSubnets",c.vpcElbSubnets.join(","))),("internal"===c.vpcInternalLoadBalancer||"public"===c.vpcInternalLoadBalancer)&&b.push(new a("aws:ec2:vpc","ELBScheme",c.vpcInternalLoadBalancer)));_.has(c,"vpcAssociatePublicIpAddress")&&b.push(new a("aws:ec2:vpc","AssociatePublicIpAddress",c.vpcAssociatePublicIpAddress))},l=function(a,b,c){var d=Array.prototype.slice.call(arguments);return _.compact(d).join("~")};
return{addRdsOptions:g,addRdsVpcOptions:h,addVpcOptions:k,calculateKey:l,cleanOptionName:function(a){return a.replace(/[^a-z0-9]/ig,"")},convertValidationToCreateMessage:function(a,b){delete b.templateName;b.description=a.environmentDescription;b.environmentName=a.environmentName;b.versionLabel=a.applicationVersionLabel;_.isUndefined(a.tags)||(b.tags=a.tags.getTagsToAdd());a.tier&&(b.tier=a.tier.serialize());if(_.isNull(a.tier)||a.tier.isWebServer())b.cnameprefix=a.environmentUrl;return b},getCreateInputsFromConfiguration:function(a){var b=
_.keyedOn(e,"optionName"),d={},f=!1,g=!1;_.each(a,function(a){var e=a.name||a.optionName,l=b[e],k=a.value||a.defaultValue;if(_.has(b,e)){if(!l.noEchoValue){l.csvValue&&k&&(k=k.split(","));"CrossZone"===e&&(k=_.isString(k)?"true"===k.toLowerCase():k);"ConnectionDrainingEnabled"===e&&(k=_.isString(k)?"true"===k.toLowerCase():k);"ConnectionDrainingTimeout"===e&&(k=_.isString(k)?parseInt(k,10):k);"BatchSize"===e&&"aws:elasticbeanstalk:command"===a.namespace&&(k=_.isString(k)?parseInt(k,10):k);"AssociatePublicIpAddress"===
e&&(k=_.isString(k)?"true"===k.toLowerCase():k);"DBAllocatedStorage"===e&&(k=_.isString(k)?parseInt(k,10):k);"RollingUpdateEnabled"===e&&(k=_.isString(k)?"true"===k.toLowerCase():k);if("RootVolumeSize"===e||"RootVolumeIOPS"===e)k=_.isString(k)?parseInt(k,10):k;"ManagedActionsEnabled"===e&&(k=_.isString(k)?"true"===k.toLowerCase():k);"IgnoreHealthCheck"===e&&(k=_.isString(k)?"true"===k.toLowerCase():k);d[l.inputKey]=k;"aws:rds:dbinstance"===a.namespace&&k&&(f=!0);"aws:ec2:vpc"===a.namespace&&(k&&"ELBScheme"!==
e)&&(g=!0)}}else c.warn("Unrecognized option: ",e,a)});f?(d.forceRds=!0,d.includeRds=!0):(d.forceRds=!1,d.includeRds=!1);d.includeVpc=g?!0:!1;_.has(d,"healthReportingSystemType")||(d.healthReportingSystemType=null);return d},getOptionKey:function(a){return l(a.namespace,a.name||a.optionName,a.resourceName)},getValidationMessageFromInputs:function(b){var c=b.configurationSource===amzn.beanstalk.constants.CONFIG_SOURCE_SAVED_CONFIG,d=b.healthType===amzn.beanstalk.constants.ENHANCED,e=b.solutionStack.isLegacy,
f=b.environmentType===amzn.beanstalk.constants.service.environmentType.LOAD_BALANCED,l=b.environmentType===amzn.beanstalk.constants.service.environmentType.SINGLE_INSTANCE,s=b.configurationSource===amzn.beanstalk.constants.CONFIG_SOURCE_SOLUTION_STACK,v=b.tier&&b.tier.isWorker(),w=!l&&!e&&!v,x=!l&&!e,l=!l&&!e,d=d&&!e,u=[],y=[],B={applicationName:b.applicationName,templateSpecification:{templateSnippets:[]},tier:b.tier};if(s)B.templateSpecification.templateSource={solutionStackName:b.solutionStack.solutionStackName};
else if(c)B.templateName=b.savedConfiguration,B.templateSpecification.templateSource={configurationTemplate:{applicationName:b.applicationName,templateName:b.savedConfiguration}};else throw Error("Unsupported Configuration Source");u.push(new a("aws:autoscaling:launchconfiguration","EC2KeyName",b.keyPair||""));u.push(new a("aws:autoscaling:launchconfiguration","IamInstanceProfile",b.instanceProfile||""));u.push(new a("aws:autoscaling:launchconfiguration","InstanceType",b.instanceType));u.push(new a("aws:elasticbeanstalk:sns:topics",
"Notification Endpoint",b.email||""));if(e||f)u.push(new a("aws:elasticbeanstalk:application","Application Healthcheck URL",b.healthCheckUrl||""));if(!e){u.push(new a("aws:elasticbeanstalk:environment","EnvironmentType",b.environmentType));b.serviceRole&&u.push(new a("aws:elasticbeanstalk:environment","ServiceRole",b.serviceRole));b.rootVolumeType&&b.rootVolumeType.length?u.push(new a("aws:autoscaling:launchconfiguration","RootVolumeType",b.rootVolumeType)):c&&y.push({namespace:"aws:autoscaling:launchconfiguration",
optionName:"RootVolumeType"});b.rootVolumeSize?u.push(new a("aws:autoscaling:launchconfiguration","RootVolumeSize",b.rootVolumeSize)):c&&y.push({namespace:"aws:autoscaling:launchconfiguration",optionName:"RootVolumeSize"});b.rootVolumeIops?u.push(new a("aws:autoscaling:launchconfiguration","RootVolumeIOPS",b.rootVolumeIops)):c&&y.push({namespace:"aws:autoscaling:launchconfiguration",optionName:"RootVolumeIOPS"});w&&(u.push(new a("aws:elb:loadbalancer","CrossZone",b.crossZoneEnabled)),u.push(new a("aws:elb:policies",
"ConnectionDrainingEnabled",b.connectionDrainingEnabled)),b.connectionDrainingEnabled&&u.push(new a("aws:elb:policies","ConnectionDrainingTimeout",b.connectionDrainingTimeout)));if(x&&(u.push(new a("aws:elasticbeanstalk:command","DeploymentPolicy",b.deploymentPolicy)),b.deploymentPolicy===amzn.beanstalk.constants.ROLLING||b.deploymentPolicy===amzn.beanstalk.constants.ROLLING_WITH_ADDITIONAL_BATCH))u.push(new a("aws:elasticbeanstalk:command","BatchSize",b.deploymentBatchSize)),u.push(new a("aws:elasticbeanstalk:command",
"BatchSizeType",b.deploymentBatchSizeType));l&&(u.push(new a("aws:autoscaling:updatepolicy:rollingupdate","RollingUpdateEnabled",!!b.rollingUpdatesEnabled)),b.rollingUpdatesEnabled&&u.push(new a("aws:autoscaling:updatepolicy:rollingupdate","RollingUpdateType",b.rollingUpdateType)));d&&(u.push(new a("aws:elasticbeanstalk:managedactions","ManagedActionsEnabled",b.managedActionsEnabled)),u.push(new a("aws:elasticbeanstalk:managedactions","PreferredStartTime",b.preferredStartTime)),u.push(new a("aws:elasticbeanstalk:managedactions:platformupdate",
"UpdateLevel",b.updateLevel)),u.push(new a("aws:elasticbeanstalk:managedactions:platformupdate","InstanceRefreshEnabled",b.instanceRefreshEnabled)));b.healthReportingSystemType&&u.push(new a("aws:elasticbeanstalk:healthreporting:system","SystemType",b.healthReportingSystemType));b.ignoreHealthCheck&&u.push(new a("aws:elasticbeanstalk:command","IgnoreHealthCheck",b.ignoreHealthCheck));_.contains(["Ok","Warning","Degraded","Severe"],b.healthCheckSuccessThreshold)&&u.push(new a("aws:elasticbeanstalk:healthreporting:system",
"HealthCheckSuccessThreshold",b.healthCheckSuccessThreshold));b.includeRds&&g(B.templateSpecification,u,b);b.includeVpc&&(u.push(new a("aws:ec2:vpc","VPCId",b.vpcId)),u.push(new a("aws:autoscaling:launchconfiguration","SecurityGroups",b.vpcSecurityGroup)),k(u,b));b.includeVpc&&b.includeRds&&h(u,b);v&&(u.push(new a("aws:elasticbeanstalk:sqsd","HttpPath",b.workerHttpPath)),u.push(new a("aws:elasticbeanstalk:sqsd","MimeType","custom"===b.workerMimeType?b.workerCustomMimeType:b.workerMimeType)),u.push(new a("aws:elasticbeanstalk:sqsd",
"WorkerQueueURL",b.workerQueueUrl)),u.push(new a("aws:elasticbeanstalk:sqsd","HttpConnections",b.httpConnections)),u.push(new a("aws:elasticbeanstalk:sqsd","VisibilityTimeout",b.visibilityTimeout)),u.push(new a("aws:elasticbeanstalk:sqsd","InactivityTimeout",b.inactivityTimeout)),_.isUndefined(b.errorVisibilityTimeout)||u.push(new a("aws:elasticbeanstalk:sqsd","ErrorVisibilityTimeout",b.errorVisibilityTimeout)))}B.optionSettings=_.invoke(u,"serialize");y.length&&(B.optionsToRemove=y);return B},OPTION_NAME_MAPPINGS:e}}])})();(function(){amzn.beanstalk.environment.controller("TagsController",["$scope","Alerts","AnalyticsService","BeanstalkLocations","environment","TagsService","TagsCollection",function(a,b,c,d,e,f,g){a.environment=e;a.tags=new g;var h=function(){f.listTagsForResource({resourceArn:a.environment.environmentArn}).then(function(b){_.has(b,"resourceTags")&&a.tags.withTags(b.resourceTags)})};a.cancel=function(){d.goBack()};a.save=function(){if(a.tags.validate()){b.removeAlert("update_settings_alert");a.savingTags=
!0;var e={resourceArn:a.environment.environmentArn,tagsToAdd:a.tags.getTagsToAdd(),tagsToRemove:a.tags.getTagsToRemove()};f.updateTagsForResource(e).then(function(){c.trackClick("tags_apply",{added:e.tagsToAdd.length,removed:e.tagsToRemove.length});d.goToEnvironmentDashboard(a.environment)},function(a){b.error("update_settings_alert",{message:amzn.beanstalk.utils.htmlEntities(a.message)})})["finally"](function(){a.savingTags=!1})}};h();a.$on(amzn.beanstalk.constants.ENVIRONMENT_CHANGED,function(b,
c){c.environmentId===e.environmentId&&(a.environment=c,h())})}])})();(function(){amzn.beanstalk.environment.service("UpdatePlatformVersionModal",["ebDialog",function(a){this.open=function(b){return a.open("partials/environment/update-platform-version-modal.html",{environment:b},{display:"modalOversized"})}}]);amzn.beanstalk.environment.controller("UpdatePlatformVersionModalController",["$scope","Platforms","UpdateEnvironment","LocalizationService","ebStatusIndicator",function(a,b,c,d,e){a.environment=a.dialog.context.environment;a.request=new c(a.environment);var f=
function(b){a.errorMessage=b.message;a.errorTitle=d.localize(_.underscored(b.code))};a.showAlertMessages=function(){return!e.isActive()};a.showApplicationUnavailabilityWarning=function(){return a.request.configurationOptions.isSingleInstance()||!a.request.configurationOptions.isRollingUpdateEnabled()};a.updatePlatformVersion=function(){e.setMessage("updating_environment");a.request.exec().then(function(b){a.dialog.resolve(b)})["catch"](f)["finally"](e.clear)};b.fetchCustomPlatforms().then(function(b){a.group=
b.getGroupForPlatform(a.environment.platform)}).then(function(){e.setMessage("describing_configuration_options_status");return a.request.getDescribeConfigurationOptionsRequest().exec().then(function(b){a.request.configurationOptions.withOptions(b.options)})}).then(function(){e.setMessage("describing_configuration_settings_status");return a.request.getDescribeConfigurationSettingsRequest().exec().then(function(b){return a.request.configurationOptions.deserialize(b.optionSettings)})}).then(function(){a.request.configurationTemplate.setCustomPlatform(a.environment.platform)})["finally"](e.clear)}])})();(function(){amzn.beanstalk.environment.controller("UpdateSolutionStackModalController",["$q","$scope","Environments","Externals","LocalizationService","UpdateSolutionStackModal",function(a,b,c,d,e,f){function g(a){f.serviceRoleOption?b.serviceRole.value=f.serviceRoleOption.value:_.find(a,function(a){return a.value===amzn.beanstalk.constants.DEFAULT_SERVICE_ROLE})&&(b.serviceRole.value=amzn.beanstalk.constants.DEFAULT_SERVICE_ROLE)}b.updateModal=f;b.isLoadBalancedEnvironment=null;b.isRollingUpdateEnabled=
null;b.errorMessage=null;b.solutionStacks=null;b.environment=null;b.open=null;b.upgrade=!0;b.updateStatus=null;b.solutionStackName=null;b.data={};b.serviceRole={};var h=function(c){var d=a.defer();_.isObject(c)&&(c=c.message);b.updateStatus=null;b.errorMessage=c;return d.promise},k=function(c){return function(d){var e=a.defer();b.updateStatus=null;b.error(c,d);return e.promise}},l=function(){var a={solutionStackName:b.solutionStackName};b.serviceRole.value&&(a.optionSettings=[{namespace:"aws:elasticbeanstalk:environment",
optionName:"ServiceRole",value:b.serviceRole.value}]);b.updateStatus=e.localize("changing_platform_status");return c.update(b.updateModal.environment.environmentId,a)};b.update=function(){b.errorMessage=null;b.submitted=!0;var c=a.defer();b.solutionStackName===b.environment.solutionStackName?c.reject(e.localize("platform_not_changed")):c.resolve(!0);c.promise.then(l,h).then(b.cancel,k("unable_to_change_platform"))};b.cancel=function(){b.updateStatus=null;b.errorMessage=null;b.updateModal.open=!1};
b.error=function(a,c){b.errorMessage=e.localize(a,{message:amzn.beanstalk.utils.htmlEntities(c.message||"")})};b.isPlatformUnchanged=function(){return b.solutionStackName&&(b.environment&&b.environment.solutionStackName)&&b.solutionStackName===b.environment.solutionStackName?!0:!1};b.refreshServiceRoles=d.lookupForSelect(b.data,d.constants.IAM_ROLES,function(a){_.find(a,function(a){return""===a.displayName})||a.unshift({displayName:""});d.getSelectSuccessCallback(b.data,d.constants.IAM_ROLES)(a);
g(a)},null,!0).refresh;b.$watch("updateModal",function(a){b.environment=f.environment;b.isLoadBalancedEnvironment=f.isLoadBalancedEnvironment;b.isRollingUpdateEnabled=f.isRollingUpdateEnabled;b.solutionStacks=f.solutionStacks;f.environment&&(b.solutionStackName=f.environment.solutionStackName);b.open=f.open;g(b.data.iamRoles&&b.data.iamRoles.options)},!0)}])})();(function(){amzn.beanstalk.application.directive("environmentsList",["BeanstalkLocations","CreateNewEnvironmentModal",function(a,b){return{restrict:"A",scope:{environments:"=",application:"="},templateUrl:"partials/experimental/application/directives/environments-list.html",link:function(c){c.goToEnvironmentDashboard=function(b){return b.isTerminated()?a.goToEnvironmentEvents(b):a.goToEnvironmentDashboard(b)};c.openCreateEnvironmentModal=function(a){return b.open(a)}}}}])})();(function(){amzn.beanstalk.collections.factory("AlbListenerRulesCollection",["ConfigurationResource","ConfigurationResourcesCollection",function(a,b){var c=function(b){if(!(this instanceof c))return new c(b);a.call(this,b)};_.extend(c,a);c.prototype=Object.create(a.prototype);c.prototype.constructor=c;var d=function(){b.call(this)};_.extend(d,b);d.Model=c;d.MODEL_NAME="AlbListenerRule";d.NAMESPACE="aws:elbv2:listenerrule";d.prototype=Object.create(b.prototype);return d.prototype.constructor=d}])})();(function(){amzn.beanstalk.collections.factory("AlbListenersCollection",["AlbListener","ConfigurationResourcesCollection",function(a,b){var c=function(){b.call(this)};_.extend(c,b);c.Model=a;c.MODEL_NAME="AlbListener";c.NAMESPACE="aws:elbv2:listener";c.prototype=Object.create(b.prototype);return c.prototype.constructor=c}])})();(function(){amzn.beanstalk.collections.factory("ConfigurationOptionsCollection",["ConfigurationOptionsFactory",function(a){var b=function(){this.collections={};this.options={};this.optionsFactory=new a;this.optionsToDescribe=[]};b.prototype.backfill=function(a){if(!_.has(this.options,a))return this.overwrite(this.optionsFactory.createFromDescription(a)),_.result(this.options[a],"initialize")};b.prototype.describe=function(a){this.optionsToDescribe=_.reduce(a,function(a,b){_.has(b,"namespace")&&_.has(b,
"optionName")&&a.push(_.pick(b,"namespace","optionName"));return a},[])};b.prototype.deserialize=function(a){return this.optionsFactory.create(a).then(_.bind(function(a){return this.optionsFactory.populate(this,a,!0)},this))};b.prototype.find=function(a,b){var e=_.isObject(a)?_.pick(a,"namespace","optionName"):{namespace:a,optionName:b},f=_.findWhere(this.options,e);return _.isDefined(f)?f:_.reduce(this.collections,function(a,b){return b.constructor.collects(e)?b.findOptionSetting(e):a},void 0,this)};
b.prototype.getOptions=function(){return _.isBlank(this.optionsToDescribe)?null:this.optionsToDescribe};b.prototype.getOptionsForSection=function(a){return _.reduce(this.options,function(b,e,f){e.section===a&&(b[f]=e);return b},{})};b.prototype.getOptionSettings=function(){var a=_.reduce(this.collections,function(a,b){return a.concat(b.getOptionSettings())},[],this);return _.reduce(_.keys(this.options).sort(),function(a,b){var c=this.options[b];return c.included()?a.concat(c.serialize()):a},a,this)};
b.prototype.getOptionsToRemove=function(){var a=_.reduce(this.collections,function(a,b){return a.concat(b.getOptionsToRemove())},[],this);return _.reduce(_.keys(this.options).sort(),function(a,b){var c=this.options[b];return c.remove?a.concat(c.getSpecification()):a},a,this)};b.prototype.getProxyServerOption=function(){return _.findWhere(this.options,{optionName:"ProxyServer"})};b.prototype.getStaticFilesCollection=function(){return _.find(this.collections,function(a,b){return _.str.contains(b.toLowerCase(),
"staticfiles")})};b.prototype.hasAutoScalingTriggerOptions=function(){return _.chain(this.options).findWhere({namespace:"aws:autoscaling:trigger"}).isDefined().value()};b.prototype.hasHealthReportingSystemType=function(){return _.has(this.options,"elasticbeanstalkHealthreportingSystemSystemType")};b.prototype.hasManagedActions=function(){return _.chain(this.options).findWhere({namespace:"aws:elasticbeanstalk:managedactions"}).isDefined().value()};b.prototype.hasRdsOptions=function(){return _.chain(this.options).findWhere({namespace:"aws:rds:dbinstance"}).isDefined().value()};
b.prototype.hasScheduledActions=function(){return _.has(this.collections,"autoscalingScheduledaction")};b.prototype.hasSqsdOptions=function(){return _.chain(this.options).findWhere({namespace:"aws:elasticbeanstalk:sqsd"}).isDefined().value()};b.prototype.hasStaticFiles=function(){return _.isDefined(this.getStaticFilesCollection())};b.prototype.hasVpcDbSubnets=function(){return _.chain(this.options).findWhere({namespace:"aws:ec2:vpc",optionName:"DBSubnets"}).isDefined().value()};b.prototype.include=
function(a){_.isArray(a)&&_.each(a,function(a){(a=this.find(a))&&a.include()},this)};b.prototype.isApplicationLoadBalancer=function(){return _.has(this.options,"elasticbeanstalkEnvironmentLoadBalancerType")?this.options.elasticbeanstalkEnvironmentLoadBalancerType.isApplication():!1};b.prototype.isClassicLoadBalancer=function(){return _.has(this.options,"elasticbeanstalkEnvironmentLoadBalancerType")?this.options.elasticbeanstalkEnvironmentLoadBalancerType.isClassic():!0};b.prototype.isEnhancedHealth=
function(){return this.hasHealthReportingSystemType()?this.options.elasticbeanstalkHealthreportingSystemSystemType.isEnhanced():!1};b.prototype.isLoadBalanced=function(){return _.has(this.options,"elasticbeanstalkEnvironmentEnvironmentType")?"LoadBalanced"===this.options.elasticbeanstalkEnvironmentEnvironmentType.value:!0};b.prototype.isLogStreamingEnabled=function(){return _.has(this.options,"elasticbeanstalkCloudwatchLogsStreamLogs")?this.options.elasticbeanstalkCloudwatchLogsStreamLogs.value:!1};
b.prototype.isManagedActionsEnabled=function(){return _.has(this.options,"elasticbeanstalkManagedactionsManagedActionsEnabled")?this.options.elasticbeanstalkManagedactionsManagedActionsEnabled.value:!1};b.prototype.isProxyServerDisabled=function(){var a=this.getProxyServerOption();return _.isDefined(a)&&a.isProxyServerDisabled()};b.prototype.isRollingUpdateEnabled=function(){return _.has(this.options,"autoscalingUpdatepolicyRollingupdateRollingUpdateEnabled")?this.options.autoscalingUpdatepolicyRollingupdateRollingUpdateEnabled.value:
!1};b.prototype.isSingleInstance=function(){return _.has(this.options,"elasticbeanstalkEnvironmentEnvironmentType")?"SingleInstance"===this.options.elasticbeanstalkEnvironmentEnvironmentType.value:!1};b.prototype.isVpcEnabled=function(){return _.has(this.options,"ec2VpcVpcId")?!_.isNull(this.options.ec2VpcVpcId.value):!1};b.prototype.overwrite=function(a){_.each([].concat(a),function(a){a.collectable||(a.parent=this,this.options[a.id]=a)},this)};b.prototype.setValues=function(a){_.isArray(a)?_.each(a,
function(a){var b=this.find(a);b&&b.set(a.value)},this):_.isObject(a)&&_.each(a,function(a,b){_.has(this.options,b)&&this.options[b].set(a)},this)};b.prototype.setValidationMessages=function(a,b){b&&(_.invoke(this.collections,"resetValidationMessages"),_.invoke(this.options,"resetValidationMessages"));_.each(a,function(a){var b=this.find(a);_.isUndefined(b)||b.validationMessages.set(a)},this)};b.prototype.updateOptions=function(a){return this.optionsFactory.createFromOptions(a).then(_.bind(function(a){_.each(a,
function(a){var b=this.find(a.namespace,a.optionName);_.isDefined(b)&&b.included()&&a.set(b.serialize().value);this.overwrite(a)},this);return this},this))};b.prototype.withOptions=function(b){this.optionsFactory=new a(b);return this};return b}])})();(function(){var a=function(){this.collection=[]};a.collects=function(a){return a.namespace===this.NAMESPACE?!0:_.startsWith(a.namespace,this.NAMESPACE+":")};a.identify=function(a){return a.namespace.replace(this.NAMESPACE+":","")};a.useDescription=function(a){_.isEmpty(this.Model.DESCRIPTIONS)&&(this.Model.DESCRIPTIONS=[]);-1!==this.Model.DESCRIPTIONS.indexOf(a)&&this.Model.DESCRIPTIONS.push(a)};a.prototype.add=function(a){_.each(_.concat([],a),function(a){if(a instanceof this.constructor.Model){var b=
a.identifier;this.find(b)||(a.isDefault()||_.each(a.options,function(a){a.namespace=this.constructor.NAMESPACE+":"+b},this),this.collection.push(a),a.parent=this)}},this);return this};a.prototype.create=function(a){return new this.constructor.Model(a)};a.prototype.find=function(a){a=this.indexOf(a);return-1<a?this.collection[a]:void 0};a.prototype.findOptionSetting=function(a){var c=this.find(this.constructor.identify(a));if(_.isDefined(c))return _.findWhere(c.options,a)};a.prototype.getDefault=function(){return _.find(this.collection,
function(a){return a.isDefault()})};a.prototype.getIdentifiers=function(){return _.reduce(this.collection,function(a,c){c.remove||a.push(c.identifier);return a},[],this)};a.prototype.getOptionSettings=function(){return _.reduce(this.collection,function(a,c){return a.concat(c.getOptionSettings())},[])};a.prototype.getOptionsToRemove=function(){return _.reduce(this.collection,function(a,c){return a.concat(c.getOptionsToRemove())},[])};a.prototype.indexOf=function(a){var c=a instanceof this.constructor.Model?
a.identifier:a;return _.reduce(this.collection,function(a,b,f){return b.identifier===c?f:a},-1)};a.prototype.remove=function(a){a=this.indexOf(a);-1<a&&this.collection.splice(a,1)};a.prototype.resetValidationMessages=function(){_.invoke(this.collection,"resetValidationMessages")};a.prototype.validate=function(){return _.reduce(this.collection,function(a,c){return c.validate(this)&&a},!0,this)};a.prototype.withFactory=function(a){this.constructor.Model.FACTORY=a;return this};a.prototype.withOptionSettings=
function(a){return!_.isArray(a)?this:this.add(_.toArray(_.reduce(a,function(a,b){var e=String(this.constructor.identify(b));if(_.isBlank(e))return a;_.has(a,e)||(a[e]=this.create(e),a[e].synced=!0);a[e].deserialize(b);return a},{},this)))};amzn.beanstalk.collections.constant("ConfigurationResourcesCollection",a)})();(function(){amzn.beanstalk.collections.factory("ElbListenersCollection",["ConfigurationResourcesCollection","ElbListener",function(a,b){var c=function(){a.call(this)};_.extend(c,a);c.Model=b;c.MODEL_NAME="ElbListener";c.NAMESPACE="aws:elb:listener";c.prototype=Object.create(a.prototype);return c.prototype.constructor=c}])})();(function(){amzn.beanstalk.collections.factory("ElbPoliciesCollection",["ConfigurationResourcesCollection","ElbPolicy",function(a,b){var c=["ConnectionDrainingEnabled","ConnectionDrainingTimeout","ConnectionSettingIdleTimeout"],d=function(){a.call(this)};_.extend(d,a);d.Model=b;d.MODEL_NAME="ElbPolicy";d.NAMESPACE="aws:elb:policies";d.collects=function(a){return _.contains(c,a.name)||_.contains(c,a.optionName)?!1:_.startsWith(a.namespace,this.NAMESPACE)};d.prototype=Object.create(a.prototype);return d.prototype.constructor=
d}])})();(function(){amzn.beanstalk.collections.factory("EnvironmentProcessesCollection",["ConfigurationResource","ConfigurationResourcesCollection",function(a,b){var c=function(b){if(!(this instanceof c))return new c(b);a.call(this,b)};_.extend(c,a);c.prototype=Object.create(a.prototype);c.prototype.constructor=c;var d=function(){b.call(this)};_.extend(d,b);d.Model=c;d.MODEL_NAME="EnvironmentProcess";d.NAMESPACE="aws:elasticbeanstalk:environment:process";d.prototype=Object.create(b.prototype);return d.prototype.constructor=
d}])})();(function(){amzn.beanstalk.collections.factory("EnvironmentVariablesCollection",["KeyValueOptionsCollection",function(a){var b=function(){a.call(this)};_.extend(b,a);b.NAMESPACE="aws:elasticbeanstalk:application:environment";b.collects=function(a){return a.namespace===this.NAMESPACE};b.prototype=Object.create(a.prototype);return b.prototype.constructor=b}])})();(function(){amzn.beanstalk.collections.factory("JvmOptionsCollection",["KeyValueOptionsCollection",function(a){var b=["JVM Options","Xms","Xmx","XX:MaxPermSize"],c=function(){a.call(this)};_.extend(c,a);c.NAMESPACE="aws:elasticbeanstalk:container:tomcat:jvmoptions";c.collects=function(a){return _.contains(b,a.name)||_.contains(b,a.optionName)?!1:_.startsWith(a.namespace,this.NAMESPACE)};c.prototype=Object.create(a.prototype);return c.prototype.constructor=c}])})();(function(){amzn.beanstalk.collections.factory("ScheduledActionsCollection2",["ConfigurationResourcesCollection","ScheduledAction2",function(a,b){var c=amzn.beanstalk.constants.ASG_CAPACITY_LIMIT,d=function(){a.call(this)};_.extend(d,a);d.Model=b;d.MODEL_NAME="ScheduledAction";d.NAMESPACE="aws:autoscaling:scheduledaction";d.collects=function(a){return a.namespace===this.NAMESPACE};d.identify=function(a){return a.resourceName||null};d.prototype=Object.create(a.prototype);d.prototype.constructor=d;
d.prototype.add=function(a){_.each(_.concat([],a),function(a){if(a instanceof b){var c=a.identifier;this.find(c)||(_.each(a.options,function(a){a.resourceName=c},this),a.parent=this,this.collection.push(a))}},this);return this};d.prototype.getCapacityLimit=function(){return this.parent.isSingleInstance()?1:c};return d}])})();(function(){amzn.beanstalk.collections.factory("StaticFilesCollection",["KeyValueOptionsCollection",function(a){var b=function(){a.call(this);this.withOptionSettings=_.wrap(this.withOptionSettings,function(a,b){var e=a.call(this,b),f=_.first(this.collection);this.constructor.NAMESPACE=f.namespace;this.constructor.VALIDATION_RE=RegExp(_.isDefined(f.regex)?f.regex.pattern:"^\\S*$","g");return e})};_.extend(b,a);b.NAMESPACE="aws:elasticbeanstalk:environment:proxy:staticfiles";b.NAMESPACE_RE=/aws:elasticbeanstalk:(?:environment:proxy|container:(?:nodejs|python|java|golang)):staticfiles/;
b.collects=function(a){return this.NAMESPACE_RE.test(a.namespace)};b.prototype=Object.create(a.prototype);b.prototype.constructor=b;b.prototype.isDisabled=function(){return!_.has(this,"parent")?!0:this.parent.isProxyServerDisabled()};return b}])})();(function(){amzn.beanstalk.components.directive("learnMore",function(){return{restrict:"E",scope:{},templateUrl:"partials/experimental/components/learn-more.html",replace:!0}})})();(function(){amzn.beanstalk.components.controller("ApplicationHeaderController",["$scope","$timeout","Alerts","Applications","ApplicationsService","BeanstalkLocations","CreateNewEnvironmentModal","Environments","LocalizationService","ebDialog",function(a,b,c,d,e,f,g,h,k,l){c=f.getApplicationName();a.actions=[{display:"create_env_action",name:"createEnv"},{display:"restore_terminated_env_action",name:"restoreTerminatedEnv"},{display:"swap_cnames_action",name:"swapCnames"},{display:"delete_app_action",
name:"delete"}];a.environments=h.environmentsByApplication[c];a.pathToAllApplications=f.getPathToAllApplications();a.showActions=_.isDefined(a.showActions)?a.showActions:!0;a.actionSelected=function(c){"delete"===c?l.open("partials/application/delete-application-modal.html",{application:a.application},{display:"modal"}).then(function(c){b(function(){a.refresh();f.goToAllApplications()},amzn.beanstalk.constants.DELETE_APPLICATION_REFRESH_DELAY)}):"restoreTerminatedEnv"===c?f.goToRestoreEnvironment(a.application):
"createEnv"===c?g.open(a.application):"swapCnames"===c&&f.goToSwapCnames(a.application)};a.refresh=function(){d.refresh();h.refresh()}}])})();(function(){amzn.beanstalk.components.controller("CreateNewApplicationModalController",["$scope","CreateApplication","LocalizationService","ebDialog",function(a,b,c,d){a.errorMessage=null;a.request=new b;a.status=null;var e=function(b){a.request.validate()&&(a.errorMessage="TooManyApplicationsException"===b.code?c.localize("too_many_applications_exception"):b.message)},f=function(a){return d.resolve(a)};a.cancel=function(){d.close()};a.submit=function(){a.status=c.localize("creating_application_status");
var b=a.request.exec().then(f);b["catch"](e);b["finally"](function(){a.status=""})}}])})();(function(){amzn.beanstalk.components.controller("EnvironmentHeaderController",["$scope","$window","Alerts","BeanstalkLocations","Environment","Environments","LocalizationService","Modal","PlatformsCollection","RegionUtil","Tier","Util","ebDialog",function(a,b,c,d,e,f,g,h,k,l,n,p,q){a.environment instanceof e&&(a.actions=[{display:"load_config_action",name:"loadConfig",isDisabled:function(){return!a.environment.isActionable()}},{display:"save_config_action",name:"saveConfig",isDisabled:function(){return!a.environment.isActionable()}},
{display:"swap_env_cnames_action",name:"swapCnames",isDisabled:function(){return!a.environment.isActionable()}},{display:"clone_environment_action",name:"clone",isDisabled:function(){return!a.environment.isActionable()}},{display:"clone_with_update_environment_action",name:"cloneWithUpdate",isDisabled:function(){var b=!1;!_.isNull(p.solutionStacks)&&(a.environment&&a.environment.solutionStackName)&&(b=new k(p.solutionStacks,a.environment.tier),b=b.isMoreRecentSolutionStackAvailable(a.environment.solutionStackName));
return!a.environment.isActionable()||!b}},{display:"abort_environment_update_action",name:"abortUpdate",isDisabled:function(){return!a.environment.isAbortable()}},{display:"restart_app_servers_action",name:"restart",isDisabled:function(){return!a.environment.isActionable()}},{display:"rebuild_environment_action",name:"rebuild",isDisabled:function(){return!a.environment.isActionable()}},{display:"terminate_environment_action",name:"terminate",isDisabled:function(){return!a.environment.isActionable()}}],
a.environment.isTerminated()&&a.actions.push({display:"restore_environment_action",name:"restore",isDisabled:function(){return!1}}),a.displayCname=!1,a.pathToAllApplications=d.getPathToAllApplications(),a.pathToApplicationOverview=d.getPathToApplicationOverview(a.environment.applicationName),a.pathToSqsConsoleRedirect="/elasticbeanstalk/service/util/sqsConsoleRedirect/?environmentId="+a.environment.environmentId+"&region="+l.getCurrentRegion(),a.port="",a.protocol="http",a.actionButtonIsDisabled=
function(){return _.every(a.actions,function(a){return a.isDisabled()})},a.actionSelected=function(e){var k={abortUpdate:function(){var b=g.localize("abort_environment_update_confirm"),e=g.localize("abort_environment_update_question"),k=g.localize("abort_environment_update_title"),l=g.localize("abort_environment_update_warning",{domain:amzn.beanstalk.constants.DOCS_DOMAIN});h.alert(e,k,l,null,b).then(function(b){b&&f.abortUpdate(a.environment.environmentId).then(function(){d.goToEnvironmentDashboard(a.environment)},
function(b){c.error("unable_to_abort_environment_update",{environmentName:amzn.beanstalk.utils.htmlEntities(a.environment.environmentName),message:amzn.beanstalk.utils.htmlEntities(b.message)})})})},clone:function(){d.goToCloneEnvironment(a.environment,!1)},cloneWithUpdate:function(){d.goToCloneEnvironment(a.environment,!0)},loadConfig:function(){d.goToApplicationConfigurations(a.environment.applicationName,a.environment.environmentId)},rebuild:function(){var b=g.localize("rebuild_environment_confirm"),
e=g.localize("rebuild_environment_question",{environmentName:amzn.beanstalk.utils.htmlEntities(a.environment.environmentName)}),k=g.localize("rebuild_environment_title"),l=g.localize("rebuild_environment_warning",{domain:amzn.beanstalk.constants.DOCS_DOMAIN});h.alert(e,k,l,null,b).then(function(b){b&&f.rebuild(a.environment.environmentId).then(function(){d.goToEnvironmentDashboard(a.environment)},function(b){c.error("unable_to_rebuild_environment",{environmentName:amzn.beanstalk.utils.htmlEntities(a.environment.environmentName),
message:amzn.beanstalk.utils.htmlEntities(b.message)})})})},restart:function(){var b=g.localize("restart_app_servers_confirm"),e=g.localize("restart_app_servers_question",{environmentName:amzn.beanstalk.utils.htmlEntities(a.environment.environmentName)}),k=g.localize("restart_app_servers_title"),l=g.localize("restart_app_servers_warning");h.alert(e,k,l,null,b).then(function(b){b&&f.restart(a.environment.environmentId).then(function(){d.goToEnvironmentDashboard(a.environment)},function(b){c.error("unable_to_restart_app_servers",
{environmentName:amzn.beanstalk.utils.htmlEntities(a.environment.environmentName),message:amzn.beanstalk.utils.htmlEntities(b.message)})})})},saveConfig:function(){d.goToSaveConfig(a.environment)},swapCnames:function(){d.goToSwapCNAMEs(a.environment)},terminate:function(){return q.open("partials/environment/terminate-environment-modal.html",{environment:a.environment},{display:"modal"}).then(function(a){d.goToEnvironmentDashboard(a)})},restore:function(){f.restore(a.environment).then(function(){d.goToEnvironmentDashboard(a.environment)},
function(b){c.error("unable_to_restore_environment",{environmentName:amzn.beanstalk.utils.htmlEntities(a.environment.environmentName),message:amzn.beanstalk.utils.htmlEntities(b.message)})})}};_.has(k,e)||b.clientReporting.assert("environmentHeader:actionSelected",{unknownAction:e});return k[e]()},a.hasHeaderLink=function(){return a.environment.isTerminated()?!1:a.environment.tier.isWebServer()?a.environment.hasCname():a.environment.tier.isWorker()},a.$watch("environment",function(b){if(a.environment.hasCname())f.getHttpsPort(a.environment).then(function(b){b&&
"OFF"!==b&&(a.protocol="https","443"!==b&&(a.port=":"+b))})["finally"](function(){a.displayCname=!0})}))}])})();(function(){amzn.beanstalk.components.controller("TopBarController",["$scope","Applications","BeanstalkLocations","CreateNewEnvironmentModal","Environments","ebDialog",function(a,b,c,d,e,f){a.applications=b;a.displayCreateLink=!0;a.environmentsByApplication=e.environmentsByApplication;a.open=null;a.closeDropdown=function(){a.open=null};a.getPathToEnvironment=function(a){return a.status!==amzn.beanstalk.constants.TERMINATED?c.getPathToEnvironmentDashboard(a):c.getPathToEnvironmentEvents(a)};a.getSelectedApplication=
function(){return b.applicationsByName[c.getApplicationName()]};a.isApplicationSelected=function(a){return c.getApplicationName()===a.applicationName};a.isDropdownOpen=function(b){return a.open===b.applicationName};a.openCreateApplicationModal=function(){return f.open("partials/experimental/getting-started/create-new-application-modal.html",null,{display:"modal"}).then(function(a){b.refresh().then(function(){c.goToApplicationOverview(a.applicationName)})})};a.openCreateEnvironmentModal=function(b){a.open=
null;return d.open(b)};a.toggleOpen=function(b){b=b.applicationName;a.open=a.open===b?null:b};a.getPathToApplicationOverview=c.getPathToApplicationOverview;a.getPathToApplicationVersions=c.getPathToApplicationVersions;a.getPathToApplicationConfigurations=c.getPathToApplicationConfigurations;a.getPathToNewApplication=c.getPathToNewApplication}])})();(function(){amzn.beanstalk.components.service("ebDialog",["$q",function(a){var b=["config-panel","modal","modal-oversized"],c={display:"modal"},d,e={context:null,options:c,partial:""},f=!1;e.close=function(){f=!1;this.context=null;this.options=c;this.partial=""};e.getDisplayType=function(){var a=_.dasherize(this.options.display);return _.contains(b,a)?a:"modal"};e.isOpen=function(){return f};e.open=function(b,e,k){this.context=e||{};this.options=_.defaults(k||{},c);this.partial=_.isString(b)?b:this.partial||
"";if(_.isBlank(this.partial))return a.reject("Cannot open dialog without a partial.");d=a.defer();f=!0;return d.promise};e.resolve=function(a){d.resolve(a);this.close()};return e}]);amzn.beanstalk.components.directive("dialogDir",["ebDialog",function(a){return{restrict:"A",templateUrl:"partials/experimental/components/eb-dialog.html",link:function(b,c,d){b.dialog=a;b.$watch(a.isOpen,function(a){angular.element("body").css("overflow",a?"hidden":"auto")})}}}])})();(function(){amzn.beanstalk.components.directive("environmentHeader",[function(){return{restrict:"EA",replace:!0,controller:"EnvironmentHeaderController",scope:{environment:"="},templateUrl:"partials/experimental/components/environment-header.html"}}])})();(function(){amzn.beanstalk.directives.directive("ebAnimatedEllipsis",["$interval",function(a){return{replace:!0,restrict:"E",template:'<span class="animated-ellipsis"></span>',link:function(b,c,d){var e=1;a(function(){e+=1;c.html("...".substring(0,e%4))},1E3,!1)}}}])})();(function(){amzn.beanstalk.directives.directive("ebDayTimeSelector",function(){return{restrict:"E",require:"ngModel",scope:{ngDisabled:"=?"},templateUrl:"partials/experimental/directives/eb-day-time-selector.html",link:function(a,b,c,d){var e=_.map(moment().locale("en").localeData()._weekdaysShort,function(a,b){return{name:moment.weekdays(b),value:a.toUpperCase()}});d.$formatters.push(function(a){var b={};_.isNull(a)?b={day:e[Math.floor(6*Math.random())].value,hour:("00"+Math.floor(23*Math.random())).substr(-2,
2),min:("00"+Math.floor(59*Math.random())).substr(-2,2)}:(a=a.split(":"),b={day:a[0].toUpperCase(),hour:a[1],min:a[2]});return b});d.$parsers.push(function(a){return a.day+":"+a.hour+":"+a.min});d.$render=function(){a.day=d.$viewValue.day;a.hour=d.$viewValue.hour;a.min=d.$viewValue.min};a.ngDisabled=_.isBoolean(a.ngDisabled)?a.ngDisabled:!1;a.getWeekdays=function(){return e};a.$watch("day + hour + min",function(){d.$setViewValue({day:a.day,hour:a.hour,min:a.min})})}}})})();(function(){amzn.beanstalk.directives.directive("ebInlineEditor",[function(){return{scope:{model:"="},restrict:"E",templateUrl:"partials/experimental/directives/eb-inline-editor.html",transclude:!0,link:function(a,b,c){a.temp={};a.cancel=function(){a.showEditor=!1};a.confirm=function(){a.temp.validate()&&(angular.copy(a.temp,a.model),a.showEditor=!1)};a.edit=function(){a.temp=angular.copy(a.model);a.temp.errors.reset();a.showEditor=!0}}}}])})();(function(){amzn.beanstalk.directives.directive("ebManagedUpdateWindowMessage",function(){return{restrict:"E",scope:{format:"@",message:"@",value:"="},template:'<span ng-bind-html="message | localize: { startTime: startTime, endTime: endTime, timeZone: timeZone}"></span>',link:function(a){var b=moment()._dateTzOffset(),c=_.map(moment().locale("en").localeData()._weekdaysShort,function(a,b){return{name:moment.weekdays(b),value:a.toUpperCase()}}),d=function(a){var b=-1;_.each(c,function(c,d){c.value===
a.day&&(b=d)});var d=later.parse.recur().on(b+1).dayOfWeek().on(parseInt(a.hour,10)).hour().on(parseInt(a.min,10)).minute();return later.schedule(d).next()},e=function(a){return moment(a).zone(b)};a.timeZone=moment().format("ZZ");a.$watch("value",function(){if(!_.isNull(a.value)){var b=a.value.split(":"),b={day:b[0].toUpperCase(),hour:b[1],min:b[2]},b=d(b),b=e(moment(b)),c=e(moment(b).add(2,"hours"));a.startTime=moment(b).format(a.format);a.endTime=moment(c).format(a.format)}})}}})})();(function(){amzn.beanstalk.directives.directive("ebTopBar",function(){return{controller:"TopBarController",replace:!0,restrict:"A",scope:{},templateUrl:"partials/experimental/directives/eb-top-bar.html",link:function(a,b,c,d){var e=b.find(".create-link").outerWidth()+8,f=b.find(".service-name").outerWidth(),g=jQuery('<li class="navigation-width-checker"><a><span class="name-check-field-value"></span><i class="icon-caret-down"></i></a></li>'),h=g.find(".name-check-field-value"),k=_.memoize(function(a){h.text(" "+
a+" ");return g.outerWidth()});b.find(".nav").append(g);b.resize(function(){a.$apply()});a.getNavApplications=function(c){if(!_.isObject(c))return c;var d=c.applications,g=b.width()-f;c=a.getSelectedApplication();var h=!1,r=null;a.displayCreateLink=!1;_.isDefined(c)&&(r=c.applicationName,g-=k(r));e<g&&(a.displayCreateLink=!0,g-=e);d=_.reduce(d,function(a,b){var c=k(b.applicationName);if(b.applicationName===r)h=!0;else{if(0>g-c)return a;g-=c}a.push(b);return a},[]);r&&!h&&d.unshift(c);return d}}}})})();(function(){amzn.beanstalk.directives.directive("platformPicker",["PlatformsCollection","Util",function(a,b){return{restrict:"E",scope:{change:"&",controlsDisabled:"=?",value:"="},templateUrl:"partials/experimental/directives/platform-picker.html",link:function(c,d,e){c.controlsDisabled=angular.isDefined(c.controlsDisabled)?c.controlsDisabled:!1;c.selectedPlatform=null;c.platforms=new a(b.solutionStacks);c.platforms.options=_.filter(c.platforms.options,function(a){return!a.isLegacy()});_.isObject(c.value)&&
(c.selectedPlatform=c.platforms.getPlatformForSolutionStack(c.value));c.selectPlatform=function(a){_.isNull(a)||(c.change({platformName:a.name}),c.value=c.selectedPlatform.recommended)}}}}])})();(function(){amzn.beanstalk.configuration.provider("Card",[function(){var a=function(a,c,d){d=_.extend({visible:!0},d);this.options={};this.section=a;this.title=c;this.visible=d.visible};a.prototype.hasErrors=function(){return _.reduce(this.options,function(a,c){return a||c.validationMessages.isSeverityError()},!1)};a.prototype.isDirty=function(){return _.reduce(this.options,function(a,c){return a||c.isDirty()},!1)};a.prototype.isEmpty=function(){return _.isEmpty(this.options)};a.prototype.isVisible=
function(){return _.result(this,"visible")};a.prototype.set=function(a){if(!_.has(a,"configurationOptions"))return this;this.options=a.configurationOptions.getOptionsForSection(this.section);return this};this.$get=[function(){return a}]}]);amzn.beanstalk.configuration.directive("configurationCards",function(){return{restrict:"E",link:function(a,b,c){b.addClass("configuration-cards");a.$watch(function(){var a=b.find(".row-fluid");_.each(a,function(a){a=jQuery(a).find(".card");var b=_.reduce(a,function(a,
b){var c=jQuery(b).height();return c>a?c:a},0);a.css({minHeight:b+"px"})})})}}})})();(function(){amzn.beanstalk.configuration.controller("ConfigurationController",["$scope","AnalyticsService","Card","ebContext",function(a,b,c,d){a.card=function(b,d,g){d=(new c(b,d,g)).set(a.request);return a.cards[b]=d};a.modify=function(c){b.trackClick("card_"+c.section);a.overwriteEnvironmentRequest(a.request);var f=angular.copy(a.request);d.set({card:angular.copy(c).set(f),request:f});a.loadView("partials/experimental/environment/configuration/panels/"+c.section+"-panel.html")};a.$on(amzn.beanstalk.constants.REQUEST_CHANGED,
function(){_.invoke(a.cards,"set",a.request)});a.cards={};d.clear()}])})();(function(){amzn.beanstalk.configuration.controller("ConfigurationDashboardController",["$scope","ebStatusIndicator","Applications","ExternalLocations","UpdateEnvironment","environment","resources",function(a,b,c,d,e,f,g){a.environment=f;a.application=c.find(a.environment.applicationName);a.initialized=!1;a.request=new e(a.environment);b.setMessage("describing_configuration_options_status");a.request.getDescribeConfigurationOptionsRequest().exec().then(function(b){a.request.configurationOptions.withOptions(b.options)}).then(function(){b.setMessage("describing_configuration_settings_status");
return a.request.getDescribeConfigurationSettingsRequest().exec().then(function(b){return a.request.configurationOptions.deserialize(b.optionSettings)})}).then(function(){a.$broadcast(amzn.beanstalk.constants.REQUEST_CHANGED);a.initialized=!0;a.cloudwatchEndpoint=d.cloudwatch.getLogGroupEndpoint(a.environment)})["finally"](b.clear);a.$on(amzn.beanstalk.constants.SAVE_MODIFICATIONS,function(b,c){angular.copy(c,a.request);a.$broadcast(amzn.beanstalk.constants.REQUEST_CHANGED)});a.dbEndpoint=_.chain(g.resources).findWhere({logicalResourceId:"AWSEBRDSDatabase"}).result("getEndpoint").value()}])})();(function(){amzn.beanstalk.configuration.controller("ConfigurationPanelController",["$scope","ebAlert","ebContext","ebDialog","LocalizationService",function(a,b,c,d,e){var f=function(a){b.setMessage(a)},g=function(b){b&&a.$emit(amzn.beanstalk.constants.SAVE_MODIFICATIONS,a.request)},h=function(b){a.request.configurationOptions.setValidationMessages(b,!0);return a.validateForm()&&!a.card.hasErrors()};a.cancel=function(){_.isNull(a.status)&&(b.clear(),a.$emit(amzn.beanstalk.constants.CANCEL_MODIFICATIONS))};
a.save=function(){b.clear();a.request.configurationOptions.setValidationMessages(null,!0);if(a.validateForm()){a.status=e.localize("validating_settings_status");var c=a.request.getValidateConfigurationSettingsRequest().exec().then(h).then(g);c["catch"](f);c["finally"](function(){a.status=null})}};a.validateForm=function(){return a.configurationPanelForm?(_.each(a.configurationPanelForm,function(a,b){!_.startsWith(b,"$")&&_.isFunction(a.$validate)&&a.$validate()}),a.configurationPanelForm.$valid):
!0};a.card=c.get("card");a.request=c.get("request");a.options=a.request.configurationOptions.options;a.status=null}])})();(function(){amzn.beanstalk.configuration.controller("RdsConfigurationController",["$q","$scope","LocalizationService","RegionUtil","ebStatusIndicator",function(a,b,c,d,e){var f=amzn.beanstalk.constants.RDS_ALLOCATED_STORAGE_MAP,g=[{namespace:"aws:rds:dbinstance",optionName:"DBAllocatedStorage"},{namespace:"aws:rds:dbinstance",optionName:"DBDeletionPolicy"},{namespace:"aws:rds:dbinstance",optionName:"DBEngine"},{namespace:"aws:rds:dbinstance",optionName:"DBEngineVersion"},{namespace:"aws:rds:dbinstance",
optionName:"DBInstanceClass"},{namespace:"aws:rds:dbinstance",optionName:"DBPassword"},{namespace:"aws:rds:dbinstance",optionName:"DBSnapshotIdentifier"},{namespace:"aws:rds:dbinstance",optionName:"DBUser"},{namespace:"aws:rds:dbinstance",optionName:"MultiAZDatabase"},{namespace:"aws:ec2:vpc",optionName:"DBSubnets"}],h="RDS"+amzn.beanstalk.constants.SNIPPET_SUFFIX,k=amzn.beanstalk.constants.RDS_SNIPPET_URL.replace("{{region}}",d.getCurrentRegion()),l=b.request.getDescribeConfigurationOptionsRequest(),
n=l.configurationOptions,p=function(a){n.describe(a);a=l.exec().then(function(a){var b=a.options,c=n.find("aws:rds:dbinstance","DBEngine"),b=_.findWhere(b,{namespace:"aws:rds:dbinstance",name:"DBAllocatedStorage"});c&&b&&(b.minValue=f[c.value].minValue);return n.updateOptions(a.options)});return e.setMessage("fetching_rds_configuration_options",null,a)};b.addRdsTemplateExtension=function(){if(b.request.configurationTemplate.hasTemplateSnippet(h,k))return a.when();b.request.configurationTemplate.addTemplateSnippet(h,
k);return p(g).then(function(){_.has(n.options,"ec2VpcDbSubnets")||(n.optionsFactory.add({changeSeverity:"RestartEnvironment",defaultValue:null,description:"The EC2 Subnet IDs for the DB Subnet Group.",maxLength:null,maxValue:null,minValue:null,name:"DBSubnets",namespace:"aws:ec2:vpc",regex:null,userDefined:!1,valueOptions:null,valueType:"CommaSeparatedList"}),b.request.configurationOptions.backfill("ec2VpcDbSubnets"));var a=n.options;a.rdsDbinstanceDbDeletionPolicy.set("Snapshot");a.rdsDbinstanceDbUser.set("");
a.rdsDbinstanceMultiAzDatabase.set("false")})};b.updateDbEngineVersion=function(){n.options.rdsDbinstanceDbEngineVersion.remove=!0;n.options.rdsDbinstanceDbInstanceClass.remove=!0;n.options.rdsDbinstanceDbAllocatedStorage.remove=!0;n.hasVpcDbSubnets()&&(n.options.ec2VpcDbSubnets.remove=!0);return p([{namespace:"aws:rds:dbinstance",optionName:"DBEngineVersion"},{namespace:"aws:rds:dbinstance",optionName:"DBInstanceClass"},{namespace:"aws:rds:dbinstance",optionName:"DBAllocatedStorage"},{namespace:"aws:ec2:vpc",
optionName:"DBSubnets"}])};b.updateDbInstanceClass=function(){n.options.rdsDbinstanceDbInstanceClass.remove=!0;n.hasVpcDbSubnets()&&(n.options.ec2VpcDbSubnets.remove=!0);return p([{namespace:"aws:rds:dbinstance",optionName:"DBInstanceClass"},{namespace:"aws:ec2:vpc",optionName:"DBSubnets"}])}}]);amzn.beanstalk.configuration.controller("RdsPanelController",["$controller","$scope","ebContext",function(a,b,c){a("ConfigurationPanelController",{$scope:b});a("RdsConfigurationController",{$scope:b});var d=
function(){b.card.set(b.request)};b.engineChange=function(){b.updateDbEngineVersion().then(d)};b.engineVersionChange=function(){b.updateDbInstanceClass().then(d)};b.addRdsTemplateExtension().then(d)}])})();(function(){amzn.beanstalk.configuration.controller("SoftwarePanelController",["$controller","$scope",function(a,b){a("ConfigurationPanelController",{$scope:b});b.showProxyServerWarning=function(){var a=b.request.configurationOptions.getProxyServerOption();return _.isDefined(a)&&a.proxyCanBeDisabled()}}])})();(function(){amzn.beanstalk.configuration.controller("TagsPanelController",["$controller","$scope","ebDialog",function(a,b,c){a("ConfigurationPanelController",{$scope:b});b.save=function(){b.request.validate()&&b.presets.customize(b.request).then(function(){b.overwriteEnvironmentRequest(b.request);b.loadAdvancedView()})}}])})();(function(){amzn.beanstalk.configuration.controller("VpcPanelController",["$controller","$scope","ebStatusIndicator","ExternalLocations",function(a,b,c,d){a("ConfigurationPanelController",{$scope:b});var e=[b.options.ec2VpcVpcId,b.options.ec2VpcSubnets,b.options.ec2VpcElbSubnets,b.options.ec2VpcDbSubnets,b.options.autoscalingLaunchconfigurationSecurityGroups];b.refresh=function(){var a=_.reduce(e,function(a,b){_.isDefined(b)&&_.isFunction(b.refresh)&&a.push(b.refresh());return a},[]);c.setMessage("fetching_vpc_configuration_options",
null,a)};b.createDefaultVpcUrl=d.vpc.getCreateDefaultPath();b.vpcDashboardUrl=d.vpc.getDashboardPath()}])})();(function(){amzn.beanstalk.configuration.service("ConfigurationOptionDecorator",["LocalizationService",function(a){var b=function(){return this.isDisabled()?"--":this.value?a.localize("enabled_value"):a.localize("disabled_value")},c=function(a){this.value=_.isString(a)?"true"===a:_.isBoolean(a)?a:null},d=function(a){this.value=_.isString(a)?parseInt(a,10):_.isNumber(a)?a:null},e=function(){this.set(this.value)},f=function(){return{namespace:this.namespace,optionName:this.optionName,value:!_.isNull(this.value)?
String(this.value):null}},g=function(a){_.isObject(a)||(a={});if(!(this instanceof g))return new g(a);this.optionSetting=a};g.prototype.binary=function(){this.optionSetting.initialize=e;this.optionSetting.serialize=f;this.optionSetting.render=b;this.optionSetting.set=c;return this};g.prototype.commaSeparatedList=function(){this.optionSetting.isDirty=function(){var a=function(a){return _.isString(a)&&!_.isEmpty(a)?a.split(","):[]},b=a(this.getInitial()),a=a(this.serialize().value);return b.length!==
a.length?!0:!_.isEqual(b.sort(),a.sort())};return this};g.prototype.numeric=function(){this.optionSetting.initialize=e;this.optionSetting.serialize=f;this.optionSetting.set=d;return this};return g}])})();(function(){amzn.beanstalk.configuration.factory("ConfigurationOptionDefinitions",["$injector","$q","OptionSetting",function(a,b,c){var d={changeSeverity:"NoInterruption",defaultValue:null,description:"",maxLength:null,maxValue:null,minValue:null,regex:null,section:"unknown",userDefined:!1,valueOptions:null,valueType:"Scalar"},e=["aws:elb:listener","aws:elb:policies"],f=["aws:elasticbeanstalk:application:environment","aws:elasticbeanstalk:container:golang:staticfiles","aws:elasticbeanstalk:container:java:staticfiles",
"aws:elasticbeanstalk:container:nodejs:staticfiles","aws:elasticbeanstalk:container:python:staticfiles"],g=function(a,b,c,d,e,f){return[b,c.toLowerCase(),d].join("")},h=function(a){var b=_.reduce(e,function(b,c){return b||(_.startsWith(a,c)?c:null)},null);return _.isNull(b)?a:b},k=function(){};k.prototype.add=function(b){_.each(_.concat([],b),function(b){if(!_.contains(f,b.namespace)){var c={},d=this.getProviderName(b);try{c=a.get(d)}catch(e){console.log("Unknown option: "+d)}this[d]=_.extend({id:d},
b,c)}},this);return this};k.prototype.create=function(a){return b.all(_.reduce(_.concat([],a),function(a,d){var e=this.getDefinition(d),e=(new c(d)).withDescription(e);_.contains(f,e.namespace)&&(e.collectable=!0);a.push(b.when(_.result(e,"initialize")||e));return a},[],this))};k.prototype.createFromDefinition=function(a,b){var d=this.getDefinition(a);b=_.isUndefined(b)?d.defaultValue:b;return(new c(d.namespace,d.name,b)).withDescription(d)};k.prototype.createFromOptions=function(a){var b=_.map(_.concat([],
a),function(a){return{namespace:a.namespace,optionName:a.name,value:a.defaultValue}},this);return this.add(a).create(b)};k.prototype.getDefinition=function(a){a=_.isObject(a)?this.getProviderName(a):a;_.has(this,a)?a=this[a]:(console.log("Unknown option setting: "+a),a=_.extend({id:a},d));return a};k.prototype.getProviderName=function(a,b){var c=a;_.isObject(c)&&(a=c.namespace,b=c.optionName||c.name);a=h(a);b=b.replace(/\s/g,"");/[a-z]/.test(b)&&(b=b.replace(/([A-Z])([A-Z]+)([A-Z].)/g,g));a=_.rest(a.toLowerCase().split(":"));
return _.camelize([a.join("_"),_.underscored(b)].join("_"))};return k}])})();(function(){amzn.beanstalk.configuration.factory("ConfigurationOptionsFactory",["$injector","$q","ElbListenersCollection","ElbPoliciesCollection","EnvironmentVariablesCollection","JvmOptionsCollection","OptionSetting","ScheduledActionsCollection2","StaticFilesCollection",function(a,b,c,d,e,f,g,h,k){var l={changeSeverity:"NoInterruption",defaultValue:null,description:"",maxLength:null,maxValue:null,minValue:null,regex:null,section:"unknown",userDefined:!1,valueOptions:null,valueType:"Scalar"};c=[c,
d,h];var n=_.reduce(c,function(a,b){_.has(b,"NAMESPACE")&&(a=_.concat(a,b.NAMESPACE));return a},[]),p=[e,f,k],q=[].concat(c,p),r=function(a){return _.some(q,function(b){return b.collects(a)})},m=function(a,b,c,d,e,f){return[b,c.toLowerCase(),d].join("")},t=function(a){return _.reduce(n,function(b,c){return _.startsWith(a,c+":")?c:b},a)};e=function(a){a=a||[];a.push(_.extend({name:"",namespace:"aws:elasticbeanstalk:application:environment"},l));this.collections={};this.descriptions={};this.add(a)};
e.prototype.add=function(b){_.each(_.concat([],b),function(b){b.namespace=b.namespace.replace(/:(default|80)$/,"");var c={},d=this.getProviderName(b);try{c=a.get(d)}catch(e){console.log("Unknown option: "+d)}this.descriptions[d]=_.extend(b,c,{id:d});r(this.descriptions[d])&&this.addDescriptionToCollection(this.descriptions[d])},this);return this};e.prototype.addDescriptionToCollection=function(a){var b=_.find(q,function(b){return b.collects(a)});if(!_.isUndefined(b)){var c=_.camelize(_.rest(b.NAMESPACE.toLowerCase().split(":")).join("_"));
_.has(this.collections,c)||(this.collections[c]=b,this.collections[c].id=c);this.collections[c].useDescription(a.id);a.collectable=!0}};e.prototype.create=function(a){return b.all(_.reduce(_.concat([],a),function(a,c){var d=this.getDescription(c),d=(new g(c)).withDescription(d);a.push(b.when(_.result(d,"initialize")||d));return a},[],this))};e.prototype.createFromDescription=function(a,b){var c=this.getDescription(a);b=_.isUndefined(b)?c.defaultValue:b;return(new g(c.namespace,c.name,b)).withDescription(c)};
e.prototype.createFromOptions=function(a){var b=_.map(_.concat([],a),function(a){return{namespace:a.namespace,optionName:a.name,value:a.defaultValue}},this);return this.add(a).create(b)};e.prototype.getDescription=function(a){a=_.isObject(a)?this.getProviderName(a):a;_.has(this.descriptions,a)?a=this.descriptions[a]:(console.log("Unknown option setting: "+a),a=_.extend({id:a},l));return a};e.prototype.getProviderName=function(a){var b=t(a.namespace),b=_.rest(b.toLowerCase().split(":"));if(_.some(p,
function(b){return b.collects(a)}))return _.camelize(b.join("_"));var c=(a.name||a.optionName).replace(/[\s:]/g,"");/[a-z]/.test(c)&&(c=c.replace(/([A-Z])([A-Z]+)([A-Z].)/g,m));return _.camelize([b.join("_"),_.underscored(c)].join("_"))};e.prototype.populate=function(a,b,c){var d={};c&&(a.collections={},a.options={});_.each([].concat(b),function(b){b.collectable?_.each(this.collections,function(a,c){a.collects(b)&&(_.has(d,c)||(d[c]=[]),d[c].push(b))},this):(b.parent=a,a.options[b.id]=b)},this);_.each(this.collections,
function(b,c){a.collections[c]=(new b).withFactory(this).withOptionSettings(d[c]||[]);a.collections[c].parent=a},this);return a};return e}])})();(function(){var a={custom:{defaultSettings:{}},high:{defaultSettings:{autoscalingAsgMaxSize:4,autoscalingAsgMinSize:1,elasticbeanstalkCommandBatchSize:30,elasticbeanstalkCommandBatchSizeType:"Percentage",elasticbeanstalkEnvironmentEnvironmentType:"LoadBalanced",elasticbeanstalkHealthreportingSystemSystemType:"enhanced",elbLoadbalancerCrossZone:!0,elbPoliciesConnectionDrainingEnabled:!0}},low:{defaultSettings:{autoscalingAsgMaxSize:1,autoscalingAsgMinSize:1,elasticbeanstalkCommandBatchSize:100,elasticbeanstalkCommandBatchSizeType:"Percentage",
elasticbeanstalkEnvironmentEnvironmentType:"SingleInstance",elasticbeanstalkHealthreportingSystemSystemType:"enhanced"}}},b=function(c,d){if(_.isUndefined(d))throw Error("Missing parameter: {EnvironmentRequest} request");if(!(this instanceof b))return new b(c,d);var e=angular.copy(d),f=function(a){var b=angular.copy(e);b.configurationOptions.setValues(a.defaultSettings);return b},g=f(a.custom);this.value="low";this.customize=function(a){g=a;return this.useCustom()};this.getInitial=function(){return c.when(angular.copy(e))};
this.load=function(b){g=f(a.custom).withParams(b);return this};this.use=function(b){var d=a[b];d?this.value=b:d=a[this.value];return c.when(this.isCustom()?g:f(d))}};b.prototype.getRequest=function(){return this.use()};b.prototype.isCustom=function(){return"custom"===this.value};b.prototype.isLowCost=function(){return"low"===this.value};b.prototype.isHighAvailability=function(){return"high"===this.value};b.prototype.useCustom=function(){return this.use("custom")};amzn.beanstalk.configuration.factory("ConfigurationPresets",
["$q",function(a){a=b.bind(null,a);a.CUSTOM="custom";a.HIGH_AVAILABLITY="high";a.LOW_COST="low";return a}])})();(function(){var a=function(a,c,d){this.errors=new a;this.identifier=c||null;this.options={};this.synced=this.remove=!1;_.each(d||_.map(this.getOptionDescriptions(),function(a){return this.constructor.FACTORY.createFromDescription(a)},this),function(a){return this.deserialize(a)},this)};a.prototype.deserialize=function(a){a.initialize&&a.initialize();a.parent=this;this.options[a.id]=a;return this};a.prototype.errorMessages=function(){return this.errors.fullMessages(this)};a.prototype.getOptionDescriptions=
function(){return!_.has(this.constructor,"DESCRIPTIONS")?[]:this.constructor.DESCRIPTIONS};a.prototype.getOptionSettings=function(){return this.remove?[]:_.reduce(this.options,function(a,c){if(c.included()||!this.synced){var d=c.serialize();return a.concat(d)}return a},[],this)};a.prototype.getOptionsToRemove=function(){return!this.remove?[]:_.reduce(this.options,function(a,c){return a.concat(c.getSpecification())},[],this)};a.prototype.isDefault=function(){return!_.has(this.constructor,"DEFAULT_IDENTIFIER")?
!1:this.identifier===this.constructor.DEFAULT_IDENTIFIER};a.prototype.isDirty=function(){return _.reduce(this.options,function(a,c){return a||c.isDirty()},!1,this)};a.prototype.isValid=function(){return _.reduce(this.options,function(a,c){return a&&!c.validationMessages.isSeverityError()},!0)&&this.errors.isEmpty()};a.prototype.resetValidationMessages=function(){_.invoke(this.options,"resetValidationMessages")};a.prototype.validate=function(a){return this.isValid()};amzn.beanstalk.configuration.factory("ConfigurationResource",
["ValidationErrors",function(b){var c=function(c,e){a.call(this,b,c,e)};c.DEFAULT_IDENTIFIER="default";c.prototype=a.prototype;c.constructor=c;c.createDefault=function(){return this(this.DEFAULT_IDENTIFIER)};return c}])})();(function(){amzn.beanstalk.configuration.service("autoscalingAsgAvailabilityZones",["LocalizationService",function(a){this.section="auto-scaling";this.isDisabled=function(){var a=!_.isEmpty(this.parent.options.ec2VpcSubnets.serialize().value);return this.parent.options.elasticbeanstalkEnvironmentEnvironmentType.isSingleInstance()||a};this.render=function(){return _.isNull(this.value)?null:a.localizeSafe("card_instances_availability_zones_"+this.value,null,this.value)}}]);amzn.beanstalk.configuration.service("autoscalingAsgCooldown",
["ConfigurationOptionDecorator",function(a){this.section="auto-scaling";this.isDisabled=function(){return this.parent.options.elasticbeanstalkEnvironmentEnvironmentType.isSingleInstance()};a(this).numeric()}]);amzn.beanstalk.configuration.service("autoscalingAsgCustomAvailabilityZones",function(){this.section="auto-scaling";this.initialize=function(){this.value=_.isString(this.value)?this.value.split(","):[]};this.isDisabled=function(){var a=!_.isEmpty(this.parent.options.ec2VpcSubnets.serialize().value);
return this.parent.options.elasticbeanstalkEnvironmentEnvironmentType.isSingleInstance()||a};this.serialize=function(){return{namespace:this.namespace,optionName:this.optionName,value:this.value.join(",")}}});amzn.beanstalk.configuration.service("autoscalingAsgMaxSize",function(){this.section="auto-scaling";this.initialize=function(){var a=parseInt(this.value,10);this.value=_.isFinite(a)?a:null};this.isDisabled=function(){return this.parent.options.elasticbeanstalkEnvironmentEnvironmentType.isSingleInstance()};
this.serialize=function(){return{namespace:this.namespace,optionName:this.optionName,value:String(this.value)}};this.set=function(a){this.value=parseInt(a,10)}});amzn.beanstalk.configuration.service("autoscalingAsgMinSize",function(){this.section="auto-scaling";this.initialize=function(){var a=parseInt(this.value,10);this.value=_.isFinite(a)?a:null};this.isDisabled=function(){return this.parent.options.elasticbeanstalkEnvironmentEnvironmentType.isSingleInstance()};this.serialize=function(){return{namespace:this.namespace,
optionName:this.optionName,value:String(this.value)}};this.set=function(a){this.value=parseInt(a,10)}});amzn.beanstalk.configuration.service("autoscalingScheduledactionDesiredCapacity",["ConfigurationOptionDecorator",function(a){this.section="auto-scaling";this.included=function(){return!this.parent.synced||this.isDirty()&&!this.isDisabled()};a(this).numeric()}]);amzn.beanstalk.configuration.service("autoscalingScheduledactionEndTime",function(){this.section="auto-scaling"});amzn.beanstalk.configuration.service("autoscalingScheduledactionMaxSize",
["ConfigurationOptionDecorator",function(a){this.section="auto-scaling";a(this).numeric()}]);amzn.beanstalk.configuration.service("autoscalingScheduledactionMinSize",["ConfigurationOptionDecorator",function(a){this.section="auto-scaling";a(this).numeric()}]);amzn.beanstalk.configuration.service("autoscalingScheduledactionRecurrence",function(){this.section="auto-scaling"});amzn.beanstalk.configuration.service("autoscalingScheduledactionStartTime",function(){this.section="auto-scaling"});amzn.beanstalk.configuration.service("autoscalingScheduledactionSuspend",
["ConfigurationOptionDecorator",function(a){this.section="auto-scaling";a(this).binary()}]);amzn.beanstalk.configuration.service("autoscalingTriggerBreachDuration",function(){this.section="auto-scaling";this.initialize=function(){var a=parseInt(this.value,10);this.value=_.isFinite(a)?a:null};this.isDisabled=function(){return this.parent.options.elasticbeanstalkEnvironmentEnvironmentType.isSingleInstance()};this.serialize=function(){return{namespace:this.namespace,optionName:this.optionName,value:String(this.value)}};
this.set=function(a){this.value=parseInt(a,10)}});amzn.beanstalk.configuration.service("autoscalingTriggerEvaluationPeriods",function(){this.section="auto-scaling";this.isDisabled=function(){return this.parent.options.elasticbeanstalkEnvironmentEnvironmentType.isSingleInstance()}});amzn.beanstalk.configuration.service("autoscalingTriggerLowerBreachScaleIncrement",function(){this.section="auto-scaling";this.isDisabled=function(){return this.parent.options.elasticbeanstalkEnvironmentEnvironmentType.isSingleInstance()}});
amzn.beanstalk.configuration.service("autoscalingTriggerLowerThreshold",function(){this.section="auto-scaling";this.initialize=function(){var a=parseInt(this.value,10);this.value=_.isFinite(a)?a:null};this.isDisabled=function(){return this.parent.options.elasticbeanstalkEnvironmentEnvironmentType.isSingleInstance()};this.serialize=function(){return{namespace:this.namespace,optionName:this.optionName,value:String(this.value)}};this.set=function(a){this.value=parseInt(a,10)}});amzn.beanstalk.configuration.service("autoscalingTriggerMeasureName",
function(){this.section="auto-scaling";this.isDisabled=function(){return this.parent.options.elasticbeanstalkEnvironmentEnvironmentType.isSingleInstance()}});amzn.beanstalk.configuration.service("autoscalingTriggerPeriod",function(){this.section="auto-scaling";this.initialize=function(){var a=parseInt(this.value,10);this.value=_.isFinite(a)?a:null};this.isDisabled=function(){return this.parent.options.elasticbeanstalkEnvironmentEnvironmentType.isSingleInstance()};this.serialize=function(){return{namespace:this.namespace,
optionName:this.optionName,value:String(this.value)}};this.set=function(a){this.value=parseInt(a,10)}});amzn.beanstalk.configuration.service("autoscalingTriggerStatistic",function(){this.section="auto-scaling";this.isDisabled=function(){return this.parent.options.elasticbeanstalkEnvironmentEnvironmentType.isSingleInstance()}});amzn.beanstalk.configuration.service("autoscalingTriggerUnit",function(){this.section="auto-scaling";this.isDisabled=function(){return this.parent.options.elasticbeanstalkEnvironmentEnvironmentType.isSingleInstance()};
this.isNone=function(){return _.isString(this.value)?"none"===this.value.toLowerCase():!1}});amzn.beanstalk.configuration.service("autoscalingTriggerUpperBreachScaleIncrement",function(){this.section="auto-scaling";this.isDisabled=function(){return this.parent.options.elasticbeanstalkEnvironmentEnvironmentType.isSingleInstance()}});amzn.beanstalk.configuration.service("autoscalingTriggerUpperThreshold",function(){this.section="auto-scaling";this.initialize=function(){var a=parseInt(this.value,10);
this.value=_.isFinite(a)?a:null};this.isDisabled=function(){return this.parent.options.elasticbeanstalkEnvironmentEnvironmentType.isSingleInstance()};this.serialize=function(){return{namespace:this.namespace,optionName:this.optionName,value:String(this.value)}};this.set=function(a){this.value=parseInt(a,10)}});amzn.beanstalk.configuration.service("elasticbeanstalkEnvironmentEnvironmentType",["LocalizationService",function(a){this.section="auto-scaling";this.isLoadBalanced=function(){return this.value===
amzn.beanstalk.constants.service.environmentType.LOAD_BALANCED};this.isSingleInstance=function(){return this.value===amzn.beanstalk.constants.service.environmentType.SINGLE_INSTANCE};this.render=function(){return _.decapitalize(a.localize(this.value))}}])})();(function(){var a=amzn.beanstalk.constants.ALL_AT_ONCE,b=amzn.beanstalk.constants.FIXED,c=amzn.beanstalk.constants.HEALTH,d=amzn.beanstalk.constants.IMMUTABLE,e=amzn.beanstalk.constants.PERCENTAGE,f=amzn.beanstalk.constants.ROLLING,g=amzn.beanstalk.constants.TIME;amzn.beanstalk.configuration.service("autoscalingUpdatepolicyRollingupdateMaxBatchSize",["ConfigurationOptionDecorator",function(a){this.section="deployment";this.isDisabled=function(){var a=this.parent.options.autoscalingUpdatepolicyRollingupdateRollingUpdateType.isRolling();
return!this.parent.isRollingUpdateEnabled()||!a};a(this).numeric()}]);amzn.beanstalk.configuration.service("autoscalingUpdatepolicyRollingupdateMinInstancesInService",["ConfigurationOptionDecorator",function(a){this.section="deployment";this.getMaxValue=function(){var a=this.parent.options.autoscalingAsgMaxSize.value;return _.isNumber(a)?a-1||1:this.maxValue};this.isDisabled=function(){var a=this.parent.options.autoscalingUpdatepolicyRollingupdateRollingUpdateType.isRolling();return!this.parent.isRollingUpdateEnabled()||
!a};a(this).numeric()}]);amzn.beanstalk.configuration.service("autoscalingUpdatepolicyRollingupdatePauseTime",function(){this.section="deployment";this.isDisabled=function(){var a=this.parent.options.autoscalingUpdatepolicyRollingupdateRollingUpdateType.isTime();return!this.parent.isRollingUpdateEnabled()||!a}});amzn.beanstalk.configuration.service("autoscalingUpdatepolicyRollingupdateRollingUpdateEnabled",["ConfigurationOptionDecorator",function(a){this.section="deployment";a(this).binary()}]);amzn.beanstalk.configuration.service("autoscalingUpdatepolicyRollingupdateRollingUpdateType",
["LocalizationService",function(a){this.section="deployment";this.healthBasedUpdatesSupported=function(){var a=this.parent.hasSqsdOptions();return this.parent.isLoadBalanced()&&(!a||this.parent.isEnhancedHealth())};this.immutableSupported=function(){return _.contains(this.valueOptions,d)&&this.parent.isEnhancedHealth()};this.isDisabled=function(){return!this.parent.isRollingUpdateEnabled()};this.isHealth=function(){return this.value===c};this.isRolling=function(){return this.isTime()||this.isHealth()};
this.isTime=function(){return this.value===g};this.render=function(){return _.isNull(this.value)||this.isDisabled()?null:a.localizeSafe("card_updates_deployments_rollingupdatetype_"+_.underscored(this.value),null,this.value)}}]);amzn.beanstalk.configuration.service("autoscalingUpdatepolicyRollingupdateTimeout",function(){this.section="deployment"});amzn.beanstalk.configuration.service("elasticbeanstalkCommandBatchSize",["ConfigurationOptionDecorator",function(a){this.section="deployment";this.isDisabled=
function(){var a;return _.has(this.parent.options,"elasticbeanstalkCommandDeploymentPolicy")?(a=this.parent.options.elasticbeanstalkCommandDeploymentPolicy,!a.isRolling()):this.parent.isSingleInstance()};a(this).numeric()}]);amzn.beanstalk.configuration.service("elasticbeanstalkCommandBatchSizeType",function(){this.section="deployment";this.isDisabled=function(){var a;return _.has(this.parent.options,"elasticbeanstalkCommandDeploymentPolicy")?(a=this.parent.options.elasticbeanstalkCommandDeploymentPolicy,
!a.isRolling()):this.parent.isSingleInstance()};this.isFixed=function(){return this.value===b};this.isPercentage=function(){return this.value===e}});amzn.beanstalk.configuration.service("elasticbeanstalkCommandDeploymentPolicy",["LocalizationService",function(b){this.section="deployment";this.immutableSupported=function(){return _.contains(this.valueOptions,d)&&this.parent.isEnhancedHealth()};this.isAllAtOnce=function(){return this.value===a};this.isImmutable=function(){return this.value===d};this.isRolling=
function(){return!this.isImmutable()&&!this.isAllAtOnce()};this.render=function(){return b.localize(_.underscored(this.value))};this.serialize=function(){var b=this.value;this.isImmutable()&&!this.immutableSupported()&&(b=this.parent.isLoadBalanced()?f:a);return{namespace:this.namespace,optionName:this.optionName,value:b}}}]);amzn.beanstalk.configuration.service("elasticbeanstalkCommandIgnoreHealthCheck",["ConfigurationOptionDecorator",function(a){this.section="deployment";a(this).binary()}]);amzn.beanstalk.configuration.service("elasticbeanstalkCommandTimeout",
["ConfigurationOptionDecorator",function(a){this.section="deployment";a(this).numeric()}]);amzn.beanstalk.configuration.service("elasticbeanstalkControlDefaultSshPort",function(){this.section="deployment"});amzn.beanstalk.configuration.service("elasticbeanstalkControlLaunchTimeout",function(){this.section="deployment"});amzn.beanstalk.configuration.service("elasticbeanstalkControlLaunchType",function(){this.section="deployment"});amzn.beanstalk.configuration.service("elasticbeanstalkControlRollbackLaunchOnFailure",
["ConfigurationOptionDecorator",function(a){this.section="deployment";a(this).binary()}]);amzn.beanstalk.configuration.service("elasticbeanstalkHealthreportingSystemHealthCheckSuccessThreshold",function(){this.isDisabled=function(){var a=!1;_.has(this.parent.options,"elasticbeanstalkCommandIgnoreHealthCheck")&&(a=this.parent.options.elasticbeanstalkCommandIgnoreHealthCheck.value);return!this.parent.isEnhancedHealth()||a}})})();(function(){amzn.beanstalk.configuration.service("elasticbeanstalkApplicationApplicationHealthcheckUrl",function(){this.section="health";this.initialize=function(){this.regex&&(this.regex.pattern=RegExp("^"+String(this.regex.pattern)+"$"))}});amzn.beanstalk.configuration.service("elasticbeanstalkHealthreportingSystemConfigDocument",function(){this.section="health";this.render=function(){return"<pre><code>"+amzn.beanstalk.utils.stableJsonStringify(JSON.parse(this.value),{tab:4})+"</code></pre>"}});
amzn.beanstalk.configuration.service("elasticbeanstalkHealthreportingSystemSystemType",["LocalizationService",function(a){this.section="health";this.isBasic=function(){return"basic"===this.value};this.isEnhanced=function(){return"enhanced"===this.value};this.render=function(){return _.isNull(this.value)?null:a.localizeSafe("health_reporting_"+this.value,null,this.value)}}]);amzn.beanstalk.configuration.service("elasticbeanstalkMonitoringAutomaticallyTerminateUnhealthyInstances",function(){this.section=
"health"});amzn.beanstalk.configuration.service("elbHealthcheckHealthyThreshold",function(){this.section="health"});amzn.beanstalk.configuration.service("elbHealthcheckInterval",function(){this.section="health"});amzn.beanstalk.configuration.service("elbHealthcheckTarget",function(){this.section="health"});amzn.beanstalk.configuration.service("elbHealthcheckTimeout",function(){this.section="health"});amzn.beanstalk.configuration.service("elbHealthcheckUnhealthyThreshold",function(){this.section="health"})})();(function(){amzn.beanstalk.configuration.service("autoscalingLaunchconfigurationBlockDeviceMappings",function(){this.section="instances"});amzn.beanstalk.configuration.service("autoscalingLaunchconfigurationImageId",function(){this.section="instances"});amzn.beanstalk.configuration.service("autoscalingLaunchconfigurationInstanceType",function(){this.section="instances"});amzn.beanstalk.configuration.service("autoscalingLaunchconfigurationMonitoringInterval",function(){this.section="instances"});amzn.beanstalk.configuration.service("autoscalingLaunchconfigurationRootVolumeIoPs",
["LocalizationService",function(a){this.section="instances";this.included=function(){return this.isDirty()&&!this.isDisabled()&&!this.remove&&!_.isNull(this.value)};this.initialize=function(){this.value=_.isNull(this.value)?this.minValue:parseInt(this.value,10)};this.isDisabled=function(){return"io1"!==this.parent.options.autoscalingLaunchconfigurationRootVolumeType.value};this.render=function(){return _.isNull(this.value)||this.isDisabled()?a.localize("container_default_value"):this.value};this.serialize=
function(){return{namespace:this.namespace,optionName:this.optionName,value:_.isNull(this.value)?this.value:String(this.value)}}}]);amzn.beanstalk.configuration.service("autoscalingLaunchconfigurationRootVolumeSize",["LocalizationService",function(a){this.section="instances";this.included=function(){return this.isDirty()&&!this.isDisabled()&&!this.remove&&!_.isNull(this.value)};this.initialize=function(){this.set(this.value)};this.isDisabled=function(){return this.parent.options.autoscalingLaunchconfigurationRootVolumeType.isDefault()};
this.render=function(){return _.isNull(this.value)||this.isDisabled()?a.localize("container_default_value"):this.value};this.getMaxValue=function(){var a=this.parent.options.autoscalingLaunchconfigurationRootVolumeType.value;return"io1"===a||"gp2"===a?this.maxValue:1024};this.serialize=function(){return{namespace:this.namespace,optionName:this.optionName,value:_.isNull(this.value)?this.value:String(this.value)}};this.set=function(a){this.value=_.isString(a)?parseInt(a,10):_.isNumber(a)?a:null}}]);
amzn.beanstalk.configuration.service("autoscalingLaunchconfigurationRootVolumeType",["LocalizationService",function(a){this.section="instances";this.included=function(){return this.isDirty()&&!this.isDisabled()&&!this.remove&&!_.isNull(this.value)};this.render=function(){return this.isDefault()?a.localize("container_default_value"):a.localize(this.value)}}]);amzn.beanstalk.configuration.service("autoscalingLaunchconfigurationSshSourceRestriction",function(){this.section="instances"})})();(function(){var a=function(a,b){this.refreshing=!0;return a.then(_.bind(b,this))["finally"](_.bind(function(){this.refreshing=!1},this))},b=function(a){this.valueObjects=_.map(a,function(a){return{displayName:a.displayName,value:a.value}},this);this.valueOptions=_.pluck(a,"value");this.value=_.contains(this.valueOptions,this.value)?this.value:null;return this};amzn.beanstalk.configuration.service("elasticbeanstalkEnvironmentLoadBalancerType",["LocalizationService",function(a){this.section="load-balancing";
this.isApplication=function(){return"application"===this.value};this.isClassic=function(){return"classic"===this.value};this.isDisabled=function(){return!this.parent.isLoadBalanced()};this.render=function(){return a.localize(_.underscored(this.value))}}]);amzn.beanstalk.configuration.service("elasticbeanstalkEnvironmentProcessDeregistrationDelay",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elasticbeanstalkEnvironmentProcessHealthCheckInterval",function(){this.section=
"load-balancing"});amzn.beanstalk.configuration.service("elasticbeanstalkEnvironmentProcessHealthCheckPath",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elasticbeanstalkEnvironmentProcessHealthCheckTimeout",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elasticbeanstalkEnvironmentProcessHealthyThresholdCount",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elasticbeanstalkEnvironmentProcessMatcherHttpCode",
function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elasticbeanstalkEnvironmentProcessPort",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elasticbeanstalkEnvironmentProcessProtocol",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elasticbeanstalkEnvironmentProcessStickinessEnabled",["ConfigurationOptionDecorator",function(a){this.section="load-balancing";a(this).binary()}]);amzn.beanstalk.configuration.service("elasticbeanstalkEnvironmentProcessStickinessLbCookieDuration",
function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elasticbeanstalkEnvironmentProcessStickinessType",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elasticbeanstalkEnvironmentProcessUnhealthyThresholdCount",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elbLoadbalancerCrossZone",["ConfigurationOptionDecorator",function(a){this.section="load-balancing";this.isDisabled=function(){return!this.parent.isLoadBalanced()};
a(this).binary()}]);amzn.beanstalk.configuration.service("elbLoadbalancerLoadBalancerHttpPort",["LocalizationService",function(a){this.section="load-balancing";this.isDisabled=function(){return!this.parent.isLoadBalanced()};this.isOff=function(){return"OFF"===this.value};this.renderPortNumber=function(){return this.isOff()?"--":this.value}}]);amzn.beanstalk.configuration.service("elbLoadbalancerLoadBalancerHttpsPort",["LocalizationService",function(a){this.section="load-balancing";this.isDisabled=
function(){return!this.parent.isLoadBalanced()};this.isOff=function(){return"OFF"===this.value};this.renderEnabled=function(){return this.isOff()?a.localize("disabled_value"):a.localize("enabled_value")};this.renderPortNumber=function(){return this.isOff()?"--":this.value}}]);amzn.beanstalk.configuration.service("elbLoadbalancerLoadBalancerPortProtocol",function(){this.section="load-balancing";this.isDisabled=function(){return!this.parent.isLoadBalanced()}});amzn.beanstalk.configuration.service("elbLoadbalancerLoadBalancerSslPortProtocol",
function(){this.section="load-balancing";this.isDisabled=function(){return!this.parent.isLoadBalanced()}});amzn.beanstalk.configuration.service("elbLoadbalancerManagedSecurityGroup",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elbLoadbalancerSecurityGroups",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elbLoadbalancerSslCertificateId",["Externals",function(c){var d=c.constants.CERTIFICATES;this.section="load-balancing";this.initialize=
function(){return a.call(this,c.refresh(d),b)};this.isDisabled=function(){return!this.parent.isLoadBalanced()};this.refresh=function(){return a.call(this,c.refresh(d),b)}}]);amzn.beanstalk.configuration.service("elbListenerInstancePort",["ConfigurationOptionDecorator",function(a){this.section="load-balancing";this.isDisabled=function(){return this.parent.isDisabled()};a(this).numeric()}]);amzn.beanstalk.configuration.service("elbListenerInstanceProtocol",function(){this.defaultValue="HTTP";this.section=
"load-balancing";this.isDisabled=function(){return this.parent.isDisabled()}});amzn.beanstalk.configuration.service("elbListenerListenerEnabled",["ConfigurationOptionDecorator",function(a){this.section="load-balancing";a(this).binary()}]);amzn.beanstalk.configuration.service("elbListenerListenerProtocol",function(){this.section="load-balancing";this.isDisabled=function(){return this.parent.isDisabled()}});amzn.beanstalk.configuration.service("elbListenerPolicyNames",function(){this.section="load-balancing";
this.isDisabled=function(){return this.parent.isDisabled()}});amzn.beanstalk.configuration.service("elbListenerSslCertificateId",["Externals",function(c){var d=c.constants.CERTIFICATES;this.section="load-balancing";this.initialize=function(){return a.call(this,c.refresh(d),b)};this.isDisabled=function(){return _.isNull(this.value)};this.refresh=function(){return a.call(this,c.refresh(d),b)}}]);amzn.beanstalk.configuration.service("elbPoliciesConnectionDrainingEnabled",["ConfigurationOptionDecorator",
function(a){this.section="load-balancing";this.isDisabled=function(){return!this.parent.isLoadBalanced()};a(this).binary()}]);amzn.beanstalk.configuration.service("elbPoliciesConnectionDrainingTimeout",["ConfigurationOptionDecorator",function(a){this.section="load-balancing";this.isDisabled=function(){return!this.parent.options.elbPoliciesConnectionDrainingEnabled.value};a(this).numeric()}]);amzn.beanstalk.configuration.service("elbPoliciesConnectionSettingIdleTimeout",function(){this.section="load-balancing"});
amzn.beanstalk.configuration.service("elbPoliciesCookieName",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elbPoliciesInstancePorts",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elbPoliciesLoadBalancerPorts",function(){this.section="load-balancing";this.initialize=function(){this.value=_.isBlank(this.value)?[]:_.isArray(this.value)?this.value:String(this.value).split(",")};this.serialize=function(){return{namespace:this.namespace,
optionName:this.optionName,value:_.isBlank(this.value)?null:this.value.join(",")}}});amzn.beanstalk.configuration.service("elbPoliciesProxyProtocol",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elbPoliciesPublicKey",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elbPoliciesPublicKeyPolicyNames",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elbPoliciesSslProtocols",function(){this.section="load-balancing"});
amzn.beanstalk.configuration.service("elbPoliciesSslReferencePolicy",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elbPoliciesStickinessCookieExpiration",["ConfigurationOptionDecorator",function(a){this.defaultValue=0;this.section="load-balancing";a(this).numeric();this.initialize=function(){this.set(this.value||this.defaultValue)};this.isDisabled=function(){return!this.parent.stickinessPolicy()}}]);amzn.beanstalk.configuration.service("elbPoliciesStickinessPolicy",
["ConfigurationOptionDecorator",function(a){this.section="load-balancing";a(this).binary()}]);amzn.beanstalk.configuration.service("elbv2LoadbalancerAccessLogsS3Bucket",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elbv2LoadbalancerAccessLogsS3Enabled",["ConfigurationOptionDecorator",function(a){this.section="load-balancing";a(this).binary()}]);amzn.beanstalk.configuration.service("elbv2LoadbalancerAccessLogsS3Prefix",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elbv2LoadbalancerIdleTimeout",
function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elbv2LoadbalancerManagedSecurityGroup",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elbv2LoadbalancerSecurityGroups",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elbv2ListenerDefaultProcess",function(){this.section="load-balancing";this.isDisabled=function(){return this.parent.isDisabled()}});amzn.beanstalk.configuration.service("elbv2ListenerListenerEnabled",
["ConfigurationOptionDecorator",function(a){this.section="load-balancing";a(this).binary()}]);amzn.beanstalk.configuration.service("elbv2ListenerProtocol",function(){this.section="load-balancing";this.isDisabled=function(){return this.parent.isDisabled()}});amzn.beanstalk.configuration.service("elbv2ListenerRules",function(){this.section="load-balancing";this.initialize=function(){this.value=_.isString(this.value)?this.value.split(","):[]};this.isDisabled=function(){return this.parent.isDisabled()};
this.serialize=function(){return{namespace:this.namespace,optionName:this.optionName,value:this.value.join(",")}}});amzn.beanstalk.configuration.service("elbv2ListenerSslCertificateArns",["Externals",function(c){var d=c.constants.CERTIFICATES;this.section="load-balancing";this.initialize=function(){return a.call(this,c.refresh(d),b)};this.isDisabled=function(){return this.parent.isDisabled()||_.isNull(this.value)};this.refresh=function(){return a.call(this,c.refresh(d),b)}}]);amzn.beanstalk.configuration.service("elbv2ListenerSslPolicy",
function(){this.section="load-balancing";this.isDisabled=function(){return this.parent.isDisabled()}});amzn.beanstalk.configuration.service("elbv2ListenerrulePathPatterns",function(){this.section="load-balancing"});amzn.beanstalk.configuration.service("elbv2ListenerrulePriority",["ConfigurationOptionDecorator",function(a){this.section="load-balancing";a(this).numeric()}]);amzn.beanstalk.configuration.service("elbv2ListenerruleProcess",function(){this.section="load-balancing"})})();(function(){amzn.beanstalk.configuration.service("elasticbeanstalkManagedactionsManagedActionsEnabled",["ConfigurationOptionDecorator",function(a){this.section="managed";a(this).binary()}]);amzn.beanstalk.configuration.service("elasticbeanstalkManagedactionsPlatformupdateInstanceRefreshEnabled",["ConfigurationOptionDecorator",function(a){this.section="managed";this.isDisabled=function(){return!this.parent.isManagedActionsEnabled()};a(this).binary()}]);amzn.beanstalk.configuration.service("elasticbeanstalkManagedactionsPlatformupdateUpdateLevel",
function(){this.section="managed";this.initialize=function(){this.value=_.isNull(this.value)?amzn.beanstalk.constants.UPDATE_LEVEL_MINOR:this.value};this.isDisabled=function(){return!this.parent.isManagedActionsEnabled()}});amzn.beanstalk.configuration.service("elasticbeanstalkManagedactionsPreferredStartTime",function(){this.section="managed";this.getUnit=function(){return"UTC"};this.isDisabled=function(){return!this.parent.isManagedActionsEnabled()};this.render=function(){return _.isNull(this.value)||
this.isDisabled()?"--":this.value+" "+this.getUnit()}})})();(function(){amzn.beanstalk.configuration.service("elasticbeanstalkSnsTopicsNotificationEndpoint",function(){this.section="notifications"});amzn.beanstalk.configuration.service("elasticbeanstalkSnsTopicsNotificationProtocol",function(){this.section="notifications"});amzn.beanstalk.configuration.service("elasticbeanstalkSnsTopicsNotificationTopicArn",function(){this.section="notifications"});amzn.beanstalk.configuration.service("elasticbeanstalkSnsTopicsNotificationTopicName",function(){this.section=
"notifications"})})();(function(){var a=function(a,c){this.refreshing=!0;return a.then(_.bind(c,this))["finally"](_.bind(function(){this.refreshing=!1},this))};amzn.beanstalk.configuration.service("autoscalingLaunchconfigurationEc2KeyName",["Externals",function(b){var c=b.constants.KEY_PAIRS,d=function(){return a.call(this,b.refresh(c),function(a){this.valueOptions=_.pluck(a,"value");return this})};this.section="permissions";this.initialize=function(){return d.call(this)};this.refresh=function(){return d.call(this)}}]);
amzn.beanstalk.configuration.service("autoscalingLaunchconfigurationIamInstanceProfile",["Externals","LocalizationService",function(b,c){var d=b.constants.INSTANCE_PROFILES,e=function(){return a.call(this,b.refresh(d),function(a){var b=[this.value,amzn.beanstalk.constants.DEFAULT_INSTANCE_PROFILE];this.valueOptions=_.pluck(a,"value");this.value=_.chain(b).intersection(this.valueOptions).first().value()||amzn.beanstalk.constants.CREATE_DEFAULT_ROLE;return this})};this.section="permissions";this.initialize=
function(){return e.call(this)};this.hasDefaultRole=function(){return _.contains(this.valueOptions,amzn.beanstalk.constants.DEFAULT_INSTANCE_PROFILE)};this.isAutogenerated=function(){return this.value===amzn.beanstalk.constants.CREATE_DEFAULT_ROLE};this.refresh=function(){return e.call(this)};this.render=function(){return this.isAutogenerated()?'<span class="empty-value">'+c.localize("autogenerated_value")+"</span>":this.value};this.serialize=function(){return{namespace:this.namespace,optionName:this.optionName,
value:this.isAutogenerated()?amzn.beanstalk.constants.DEFAULT_INSTANCE_PROFILE:this.value}};this.withInstanceProfile=function(a){if(!_.isString(a))return this;_.contains(this.valueOptions,a)||this.valueOptions.push(a);this.value=a;return this}}]);amzn.beanstalk.configuration.service("autoscalingLaunchconfigurationSshSourceRestriction",function(){this.section="permissions"});amzn.beanstalk.configuration.service("elasticbeanstalkEnvironmentServiceRole",["Externals","LocalizationService",function(b,
c){var d=b.constants.IAM_ROLES,e=function(){return a.call(this,b.refresh(d),function(a){var b=[this.value,amzn.beanstalk.constants.DEFAULT_SERVICE_ROLE];this.valueOptions=_.pluck(a,"value");this.value=_.chain(b).intersection(this.valueOptions).first().value()||amzn.beanstalk.constants.CREATE_DEFAULT_ROLE;return this})};this.section="permissions";this.initialize=function(){return e.call(this)};this.hasDefaultRole=function(){return _.contains(this.valueOptions,amzn.beanstalk.constants.DEFAULT_SERVICE_ROLE)};
this.isAutogenerated=function(){return this.value===amzn.beanstalk.constants.CREATE_DEFAULT_ROLE};this.refresh=function(){return e.call(this)};this.render=function(){return this.isAutogenerated()?'<span class="empty-value">'+c.localize("autogenerated_value")+"</span>":this.value};this.serialize=function(){return{namespace:this.namespace,optionName:this.optionName,value:this.isAutogenerated()?amzn.beanstalk.constants.DEFAULT_SERVICE_ROLE:this.value}};this.withServiceRole=function(a){if(!_.isString(a))return this;
_.contains(this.valueOptions,a)||this.valueOptions.push(a);this.value=a;return this}}])})();(function(){amzn.beanstalk.configuration.service("rdsDbinstanceDbAllocatedStorage",["ConfigurationOptionDecorator",function(a){this.section="rds";this.initialize=function(){this.set(this.value)};this.set=function(a){var c=parseInt(this.maxValue,10),d=parseInt(this.minValue,10);a=parseInt(a,10);this.value=a>=d&&a<=c?_.isString(a)?parseInt(a,10):_.isNumber(a)?a:null:_.isString(d)?parseInt(d,10):_.isNumber(d)?d:null}}]);amzn.beanstalk.configuration.service("rdsDbinstanceDbDeletionPolicy",function(){this.section=
"rds";this.isDelete=function(){return"Delete"===this.value};this.isSnapshot=function(){return"Snapshot"===this.value}});amzn.beanstalk.configuration.service("rdsDbinstanceDbEngine",function(){this.defaultValue="mysql";this.section="rds";this.initialize=function(){_.contains(this.valueOptions,this.serialize().value)||this.set(this.defaultValue)}});amzn.beanstalk.configuration.service("rdsDbinstanceDbEngineVersion",function(){this.section="rds"});amzn.beanstalk.configuration.service("rdsDbinstanceDbInstanceClass",
function(){this.section="rds"});amzn.beanstalk.configuration.service("rdsDbinstanceDbPassword",function(){this.section="rds"});amzn.beanstalk.configuration.service("rdsDbinstanceDbSnapshotIdentifier",function(){this.section="rds"});amzn.beanstalk.configuration.service("rdsDbinstanceDbUser",function(){this.section="rds"});amzn.beanstalk.configuration.service("rdsDbinstanceMultiAzDatabase",["ConfigurationOptionDecorator",function(a){this.section="rds";a(this).binary()}])})();(function(){amzn.beanstalk.configuration.service("cloudformationTemplateParameterAppSource",function(){this.isDisabled=function(){return!0}});amzn.beanstalk.configuration.service("cloudformationTemplateParameterEnvironmentVariables",function(){this.isDisabled=function(){return!0}});amzn.beanstalk.configuration.service("cloudformationTemplateParameterHooksPkgUrl",function(){this.isDisabled=function(){return!0}});amzn.beanstalk.configuration.service("cloudformationTemplateParameterInstancePort",function(){this.isDisabled=
function(){return!0}});amzn.beanstalk.configuration.service("elasticbeanstalkApplicationEnvironment",function(){this.section="software"});amzn.beanstalk.configuration.service("elasticbeanstalkCloudwatchLogsDeleteOnTerminate",["ConfigurationOptionDecorator",function(a){this.section="software";this.isDisabled=function(){return!this.parent.isLogStreamingEnabled()};a(this).binary()}]);amzn.beanstalk.configuration.service("elasticbeanstalkCloudwatchLogsRetentionInDays",function(){this.section="software";
this.isDisabled=function(){return!this.parent.isLogStreamingEnabled()}});amzn.beanstalk.configuration.service("elasticbeanstalkCloudwatchLogsStreamLogs",["ConfigurationOptionDecorator",function(a){this.section="software";a(this).binary()}]);amzn.beanstalk.configuration.service("elasticbeanstalkContainerNodejsGzipCompression",["ConfigurationOptionDecorator",function(a){this.section="software";this.isDisabled=function(){this.parent.isProxyServerDisabled()};a(this).binary()}]);amzn.beanstalk.configuration.service("elasticbeanstalkContainerNodejsNodeCommand",
function(){this.section="software"});amzn.beanstalk.configuration.service("elasticbeanstalkContainerNodejsNodeVersion",function(){this.section="software";this.isEnum=function(){return!_.isEmpty(this.valueOptions)}});amzn.beanstalk.configuration.service("elasticbeanstalkContainerNodejsProxyServer",function(){this.section="software";this.isProxyServerDisabled=function(){return"none"===this.value};this.proxyCanBeDisabled=function(){return _.contains(this.valueOptions,"none")}});amzn.beanstalk.configuration.service("elasticbeanstalkContainerPythonNumProcesses",
["ConfigurationOptionDecorator",function(a){this.section="software";a(this).numeric()}]);amzn.beanstalk.configuration.service("elasticbeanstalkContainerPythonNumThreads",["ConfigurationOptionDecorator",function(a){this.section="software";a(this).numeric()}]);amzn.beanstalk.configuration.service("elasticbeanstalkContainerPythonStaticfiles",function(){this.section="software";this.isBlank=function(){return""===this.optionName&&""===this.value};this.isDisabled=function(){return this.parent.isDisabled()}});
amzn.beanstalk.configuration.service("elasticbeanstalkContainerPythonStaticFiles",function(){this.section="software";this.collection=[];this.add=function(a,b){var c={directory:b,path:a};_.findWhere(this.collection,c)||this.collection.push(c)};this.count=function(){return _.size(this.collection)};this.initialize=function(){_.isString(this.value)&&(this.collection=_.reduce(this.value.split(","),function(a,b){_.string.contains(b,"=")&&a.push(_.object(["directory","path"],b.split("=")));return a},[]))};
this.removeStatic=function(a,b){this.collection=_.reject(this.collection,function(c){return c.path===a&&c.directory===b})};this.serialize=function(){var a=_.map(this.collection,function(a){return a.directory+"="+a.path}).join(",");return{namespace:this.namespace,optionName:this.optionName,value:a}}});amzn.beanstalk.configuration.service("elasticbeanstalkContainerPythonWsgiPath",function(){this.section="software"});amzn.beanstalk.configuration.service("elasticbeanstalkContainerTomcatJvmoptionsJvmOptions",
function(){this.section="software"});amzn.beanstalk.configuration.service("elasticbeanstalkContainerTomcatJvmoptionsXms",function(){this.section="software"});amzn.beanstalk.configuration.service("elasticbeanstalkContainerTomcatJvmoptionsXmx",function(){this.section="software"});amzn.beanstalk.configuration.service("elasticbeanstalkContainerTomcatJvmoptionsXxMaxPermSize",function(){this.section="software"});amzn.beanstalk.configuration.service("elasticbeanstalkEnvironmentProxyGzipCompression",["ConfigurationOptionDecorator",
function(a){this.section="software";this.isDisabled=function(){return this.parent.isProxyServerDisabled()};a(this).binary()}]);amzn.beanstalk.configuration.service("elasticbeanstalkEnvironmentProxyProxyServer",function(){this.section="software";this.isProxyServerDisabled=function(){return"none"===this.value};this.proxyCanBeDisabled=function(){return _.contains(this.valueOptions,"none")}});amzn.beanstalk.configuration.service("elasticbeanstalkHostmanagerLogPublicationControl",["ConfigurationOptionDecorator",
function(a){this.section="software";a(this).binary()}]);amzn.beanstalk.configuration.service("elasticbeanstalkXrayXrayEnabled",["ConfigurationOptionDecorator",function(a){this.section="software";a(this).binary()}])})();(function(){var a=function(a,b){this.refreshing=!0;return a.then(_.bind(b,this))["finally"](_.bind(function(){this.refreshing=!1},this))},b=function(a){this.subnets=_.reduce(a,function(a,b){var c=b.additionalInfo.vpcId;_.has(a,c)||(a[c]=[]);a[c].push(b.value);return a},{});this.valueObjects=_.reduce(a,function(a,b){var c=_.findWhere(b.additionalInfo.tags,{key:"Name"})||{},g,h=b.additionalInfo.vpcId;_.has(a,h)||(a[h]=[]);g=_.findWhere(a[h],{label:b.additionalInfo.az});_.isUndefined(g)&&(g={label:b.additionalInfo.az,
subnets:[]},a[h].push(g));g.subnets.push({az:b.additionalInfo.az,cidr:b.additionalInfo.cidr,name:c.value||null,value:b.value,vpcId:h});return a},{},this);this.valueOptions=_.pluck(a,"value");return this};amzn.beanstalk.configuration.service("autoscalingLaunchconfigurationSecurityGroups",["ConfigurationOptionDecorator","Externals","LocalizationService",function(b,d,e){var f=d.constants.SECURITY_GROUPS,g=function(){return a.call(this,d.refresh(f),function(a){this.securityGroups={};this.valueObjects=
{};_.each(a,function(a){if(_.has(a.additionalInfo,"vpcId")){var b=_.findWhere(a.additionalInfo.tags,{key:"Name"})||{},c=a.additionalInfo.vpcId;_.has(this.securityGroups,c)||(this.securityGroups[c]=[]);this.securityGroups[c].push(a.value);_.has(this.valueObjects,c)||(this.valueObjects[c]=[]);this.valueObjects[c].push({groupName:a.displayName,groupId:a.value,name:b.value||null,vpcId:c})}},this);this.valueOptions=_.pluck(a,"value");this.value=_.isString(this.value)?this.value.split(","):_.isArray(this.value)?
this.value:[];return this})};this.section="vpc";this.initialize=function(){return g.call(this)};this.isAutogenerated=function(){return _.string.contains(this.serialize().value,'{"Ref":"AWSEBSecurityGroup"}')};this.isDisabled=function(){return!this.parent.isVpcEnabled()};this.refresh=function(){return g.call(this)};this.render=function(){var a=this.serialize().value;return this.isAutogenerated()?'<span class="empty-value">'+e.localize("autogenerated_value")+"</span>":_.isBlank(a)?'<span class="empty-value">'+
e.localize("none_value")+"</span>":a};this.serialize=function(){var a=this.parent.options.ec2VpcVpcId.value,a=_.isBlank(a)?[]:_.intersection(this.securityGroups[a],this.value);return{namespace:this.namespace,optionName:this.optionName,value:a.join(",")}};this.toggleSelection=function(a){if(!this.isDisabled()){var b=this.value.indexOf(a);-1<b?this.value.splice(b,1):this.value.push(a)}};b(this).commaSeparatedList()}]);amzn.beanstalk.configuration.service("ec2VpcAssociatePublicIpAddress",["ConfigurationOptionDecorator",
function(a){this.section="vpc";this.isDisabled=function(){return!this.parent.isVpcEnabled()};a(this).binary()}]);amzn.beanstalk.configuration.service("ec2VpcDbSubnets",["ConfigurationOptionDecorator","Externals","LocalizationService",function(c,d,e){var f=d.constants.SUBNETS;this.section="vpc";this.initialize=function(){this.value=_.isString(this.value)?this.value.split(","):_.isArray(this.value)?this.value:[];return a.call(this,d.refresh(f),b)};this.getByVpc=function(a){return this.valueObjects[a]};
this.isDisabled=function(){return!this.parent.isVpcEnabled()||!this.parent.hasRdsOptions()};this.refresh=function(){return a.call(this,d.refresh(f),b)};this.render=function(){var a=this.serialize().value;return _.isBlank(a)?'<span class="empty-value">'+e.localize("none_value")+"</span>":a};this.serialize=function(){var a=this.parent.options.ec2VpcVpcId.value,a=_.isBlank(a)?[]:_.intersection(this.subnets[a],this.value);return{namespace:this.namespace,optionName:this.optionName,value:a.join(",")}};
this.toggleSelection=function(a){var b=this.value.indexOf(a);-1<b?this.value.splice(b,1):this.value.push(a)};c(this).commaSeparatedList()}]);amzn.beanstalk.configuration.service("ec2VpcElbScheme",["LocalizationService",function(a){this.section="vpc";this.isDisabled=function(){return!this.parent.isVpcEnabled()};this.render=function(){return _.isNull(this.value)?null:a.localizeSafe("card_vpc_value_id_scheme_"+_.underscored(this.value),null,this.value)}}]);amzn.beanstalk.configuration.service("ec2VpcElbSubnets",
["ConfigurationOptionDecorator","Externals","LocalizationService",function(c,d,e){var f=d.constants.SUBNETS;this.section="vpc";this.initialize=function(){this.value=_.isString(this.value)?this.value.split(","):_.isArray(this.value)?this.value:[];return a.call(this,d.refresh(f),b)};this.getByVpc=function(a){return this.valueObjects[a]};this.isDisabled=function(){return!this.parent.isVpcEnabled()||this.parent.isSingleInstance()};this.refresh=function(){return a.call(this,d.refresh(f),b)};this.render=
function(){var a=this.serialize().value;return _.isBlank(a)?'<span class="empty-value">'+e.localize("none_value")+"</span>":a};this.serialize=function(){var a=this.parent.options.ec2VpcVpcId.value,a=_.isBlank(a)?[]:_.intersection(this.subnets[a],this.value);return{namespace:this.namespace,optionName:this.optionName,value:a.join(",")}};this.toggleSelection=function(a){if(!this.isDisabled()){var b=this.value.indexOf(a);-1<b?this.value.splice(b,1):this.value.push(a)}};c(this).commaSeparatedList()}]);
amzn.beanstalk.configuration.service("ec2VpcSubnets",["ConfigurationOptionDecorator","Externals","LocalizationService",function(c,d,e){var f=d.constants.SUBNETS;this.section="vpc";this.initialize=function(){this.value=_.isString(this.value)?this.value.split(","):_.isArray(this.value)?this.value:[];return a.call(this,d.refresh(f),b)};this.getByVpc=function(a){return this.valueObjects[a]};this.isDisabled=function(){return!this.parent.isVpcEnabled()};this.refresh=function(){return a.call(this,d.refresh(f),
b)};this.render=function(){var a=this.serialize().value;return _.isBlank(a)?'<span class="empty-value">'+e.localize("none_value")+"</span>":a};this.serialize=function(){var a=this.parent.options.ec2VpcVpcId.value,a=_.isBlank(a)?[]:_.intersection(this.subnets[a],this.value);return{namespace:this.namespace,optionName:this.optionName,value:a.join(",")}};this.toggleSelection=function(a){if(!this.isDisabled()){var b=this.value.indexOf(a);-1<b?this.value.splice(b,1):this.value.push(a)}};c(this).commaSeparatedList()}]);
amzn.beanstalk.configuration.service("ec2VpcVpcId",["Externals",function(b){var d=b.constants.VPCS,e,f=function(){return a.call(this,b.refresh(d),function(a){this.valueObjects=_.map(a,function(a){var b=_.findWhere(a.additionalInfo.tags,{key:"Name"})||{},b=a.displayName+(_.has(b,"value")?" | "+b.value:"");return{isDefault:a.additionalInfo["default"]||!1,label:b,value:a.value}},this);e=_.findWhere(this.valueObjects,{isDefault:!0});this.valueOptions=_.pluck(a,"value");this.value=_.contains(this.valueOptions,
this.value)?this.value:this.hasDefaultVpc()?this.getDefaultVpc().value:null;return this})};this.section="vpc";this.initialize=function(){return f.call(this)};this.getDefaultVpc=function(){return e};this.hasDefaultVpc=function(){return!_.isUndefined(this.getDefaultVpc())};this.isDefaultVpc=function(){return!this.hasDefaultVpc()?!1:_.isNull(this.value)||this.value===this.getDefaultVpc().value};this.isDirty=function(){return this.serialize().value!==this.getInitial()&&!this.isDefaultVpc()};this.refresh=
function(){return f.call(this)}}])})();(function(){var a=function(a,c){this.refreshing=!0;return a.then(_.bind(c,this))["finally"](_.bind(function(){this.refreshing=!1},this))};amzn.beanstalk.configuration.service("elasticbeanstalkSqsdConnectTimeout",function(){this.section="worker"});amzn.beanstalk.configuration.service("elasticbeanstalkSqsdErrorVisibilityTimeout",function(){this.section="worker";this.initialize=function(){this.value=_.isNull(this.value)?null:parseInt(this.value,10)};this.serialize=function(){return{namespace:this.namespace,
optionName:this.optionName,value:_.isNull(this.value)?this.value:String(this.value)}}});amzn.beanstalk.configuration.service("elasticbeanstalkSqsdHttpConnections",function(){this.section="worker";this.initialize=function(){this.value=_.isNull(this.value)?null:parseInt(this.value,10)};this.serialize=function(){return{namespace:this.namespace,optionName:this.optionName,value:_.isNull(this.value)?this.value:String(this.value)}}});amzn.beanstalk.configuration.service("elasticbeanstalkSqsdHttpPath",function(){this.section=
"worker"});amzn.beanstalk.configuration.service("elasticbeanstalkSqsdInactivityTimeout",function(){this.section="worker"});amzn.beanstalk.configuration.service("elasticbeanstalkSqsdMaxRetries",function(){this.section="worker"});amzn.beanstalk.configuration.service("elasticbeanstalkSqsdMimeType",function(){var a=["application/json","application/x-www-form-urlencoded","application/xml","text/plain"];this.section="worker";this.getTypeOptions=function(){return a};this.initialize=function(){_.contains(a,
this.value)?this.customType="":(this.customType=this.value,this.value="%CUSTOM%")};this.isCustom=function(){return"%CUSTOM%"===this.value};this.render=function(){return this.isCustom()?this.customType:this.value};this.serialize=function(){return{namespace:this.namespace,optionName:this.optionName,value:this.render()}}});amzn.beanstalk.configuration.service("elasticbeanstalkSqsdRetentionPeriod",function(){this.section="worker"});amzn.beanstalk.configuration.service("elasticbeanstalkSqsdVisibilityTimeout",
function(){this.section="worker";this.initialize=function(){this.value=_.isNull(this.value)?null:parseInt(this.value,10)};this.serialize=function(){return{namespace:this.namespace,optionName:this.optionName,value:_.isNull(this.value)?this.value:String(this.value)}}});amzn.beanstalk.configuration.service("elasticbeanstalkSqsdWorkerQueueUrl",["Externals","LocalizationService",function(b,c){var d=b.constants.SQS_QUEUES,e=function(){return a.call(this,b.refresh(d),function(a){this.valueOptions=_.pluck(a,
"value");this.value=_.contains(this.valueOptions,this.value)?this.value:null;return this})};this.section="worker";this.initialize=function(){return e.call(this)};this.isAutogenerated=function(){return _.isNull(this.value)};this.refresh=function(){return e.call(this)};this.render=function(){return this.isAutogenerated()?'<span class="empty-value">'+c.localize("autogenerated_value")+"</span>":_.last(this.value.split("/"))}}])})();(function(){amzn.beanstalk.launchEnvironment={};amzn.beanstalk.DEPENDENT_MODULES.push("beanstalkLaunchEnvironment");amzn.beanstalk.launchEnvironment=angular.module("beanstalkLaunchEnvironment",[]);amzn.beanstalk.launchEnvironment.controller("LaunchEnvironmentController",["$scope","AutoRefresher","BeanstalkLocations","EnvironmentHelper","Events","EventSeverities",function(a,b,c,d,e,f){d.injectSelectedEnvironment(a);d=moment.utc().valueOf();var g=_.first(f.severityLevels);f=moment.utc().subtract(1,
"days").valueOf();e.refreshEnvironment(a.environment.environmentId,100,f,d,g).then(function(c){b.autoRefresh(function(){e.loadLatestEvents(a.environment.environmentId,g)},amzn.beanstalk.constants.EVENTS_REFRESH_DELAY/10)});a.events=e;a.$watch("environment",function(a){amzn.beanstalk.utils.isEnvironmentUpdating(a)||c.goToEnvironmentDashboard(a)},!0)}]);amzn.beanstalk.launchEnvironment.filter("eventMessageFormat",function(){return function(a){_.string.contains(a," named: ")&&(a=a.replace(" named: ",
' named:<br><span class="resource-name">')+"</span>");return a}})})();(function(){amzn.beanstalk.filters={};var a=amzn.beanstalk.filters=angular.module("beanstalkFilters",[]);a.filter("localizeHealthStatus",["LocalizationService",function(a){var c={};_.each(amzn.beanstalk.constants.HEALTH_STATUS_CODES,function(d,e){c[e]=a.localize("aws_elasticbeanstalk_health_"+d)});c.Pending=a.localize("aws_elasticbeanstalk_health_0_pending");return function(a){return c[a]}}]);a.filter("localizeOption",["LocalizationService",function(a){return function(c){return a.localizeSafe(_.underscored(c)+
"_option",null,c)}}]);a.filter("moodToTextClass",function(){return function(a){return"color-"+a}});a.filter("colorToTextClass",function(){return function(a){return"color-"+({Green:"positive",Grey:"neutral",Orange:"warn",Red:"negative",Yellow:"warn"}[a]||"neutral")}});a.filter("deploymentStatusToColor",function(){return function(a){return"color-"+({Deployed:"positive",Failed:"negative"}[a]||"neutral")}});a.filter("deploymentStatusToLabel",function(){return function(a){return"label-"+({Deployed:"success",
Failed:"important"}[a]||"default")}});a.filter("historyStatusToMood",["$log",function(a){return function(a){if(!a)return"neutral";var b={Completed:"positive",Failed:"negative"};return!_.has(b,a)?"neutral":b[a]}}]);a.filter("severityToMood",["$log",function(a){return function(c){if(!c)return a.error("No severity received"),"neutral";c=c.toLowerCase();var d={debug:"neutral",error:"negative",fatal:"negative",info:"positive",trace:"neutral",warn:"warn"};return!_.has(d,c)?(a.error("Unknown environment severity received: ",
c),"neutral"):d[c]}}]);a.filter("environmentToMood",["$log",function(a){return function(c){if(!_.isObject(c))return a.error("No environment received"),"neutral";var d=c.health.toLowerCase();c=c.status.toLowerCase();var e={green:"positive",grey:"neutral",orange:"warn",red:"negative",terminated:"terminated",yellow:"warn"};return!_.has(e,d)?(a.error("Unknown environment health color received: ",d),"neutral"):e[c]||e[d]}}]);a.filter("environmentIconToMood",["$log",function(a){return function(c){if(!_.isObject(c))return a.error("No environment received"),
"neutral";var d=c.health.toLowerCase();c=c.status.toLowerCase();var e={green:"positive",grey:"neutral",orange:"warn",red:"negative",yellow:"warn",aborting:"neutral",launching:"neutral",terminated:"terminated",terminating:"neutral",updating:"neutral"};return!_.has(e,d)?(a.error("Unknown environment health color received: ",d),"neutral"):e[c]||e[d]}}]);a.filter("environmentToIcon",["$log",function(a){return function(c){if(!_.isObject(c))return a.error("No environment received"),"icon-minus-sign";var d=
c.health.toLowerCase();c=c.status.toLowerCase();var e={aborting:"icon-spinner icon-spin",green:"icon-ok-sign",grey:"icon-minus-sign",launching:"icon-spinner icon-spin",orange:"icon-exclamation-sign",red:"icon-exclamation-sign",terminated:"icon-minus-sign",terminating:"icon-spinner icon-spin",updating:"icon-spinner icon-spin",yellow:"icon-exclamation-sign"};return!_.has(e,d)?(a.error("Unknown environment health color received: ",d),"icon-minus-sign"):e[c]||e[d]}}]);a.filter("pluck",function(){return function(a,
c){return a[c]}});a.filter("blankString",["LocalizationService",function(a){return function(c){return""===c?'<span class="blank-string">'+a.localize("blank_string_value")+"</span>":c}}]);a.filter("dateToDateTimeString",["LocalizationService",function(a){return function(c,d){if(_.isNull(c))return a.localize("no_occurence");c=d?moment.utc(c):moment(c);return c.format(a.localize("time_format"))}}]);a.filter("dateDiffToDateTimeString",["LocalizationService",function(a){return function(c,d){if(_.isNull(c)||
_.isNull(d))return a.localize("no_occurence");var e=moment(d)-moment(c);return moment.utc(moment.duration(e).asMilliseconds()).format(a.localize("duration_format"))}}]);a.filter("renderValue",["LocalizationService",function(a){var c='<span class="empty-value">'+a.localize("blank_string_value")+"</span>";return function(a){if(!_.isDefined(a))return'<span class="empty-value">--</span>';a=_.isFunction(a.render)?_.result(a,"render"):a.value;return _.isUndefined(a)?'<span class="empty-value">--</span>':
_.isNull(a)?'<span class="empty-value">--</span>':_.isNumber(a)?String(a):_.isEmpty(a)?c:a}}]);a.filter("scaleTimeToDuration",["LocalizationService",function(a){return function(c,d){var e=moment(),f=moment(c),g;0<(g=e.diff(f,"days"))?(e=g,f="days"):0<(g=e.diff(f,"hours"))?(e=g,f="hours"):(e=e.diff(f,"minutes"),f="minutes");e=a.localize(1===e?"single_"+f:"multiple_"+f,{num:e});return d?a.localize("duration_with_suffix",{time:e}):e}}]);a.filter("paddedRange",function(){return function(a,c,d){var e=
d.toString().length;c=parseInt(c,10);d=parseInt(d,10)+1;return _.map(a.concat(_.range(c,d)),function(a){return _.pad(a,e,"0")})}})})();(function(){amzn.beanstalk.filters.isoDurationToTime={};amzn.beanstalk.filters.filter("isoDurationToTime",["Duration",function(a){return function(b){var c=new a;c.setIso8601(b);b=_.pad(c.hours,2,"0");b+=":"+_.pad(c.minutes,2,"0");return b+=":"+_.pad(c.seconds,2,"0")}}])})();(function(){amzn.beanstalk.gettingStarted={};amzn.beanstalk.gettingStarted=angular.module("gettingStarted",[]);amzn.beanstalk.gettingStarted.resolveInstanceProfiles=["Externals","loaderStatusService","$q",function(a,b,c){a=a.values[a.constants.INSTANCE_PROFILES]?amzn.beanstalk.utils.getSuccessfulPromise(c,a.values[a.constants.INSTANCE_PROFILES]):a.refresh(a.constants.INSTANCE_PROFILES).then(_.identity,function(){return[]});b.setStatus("instance-profiles-resolve","resolving_instance_profiles_status",
{},a);return a}]})();(function(){amzn.beanstalk.gettingStarted.controller("AdvancedConfigurationController",["$scope","Alerts","AnalyticsService","PlatformVersionsCollection","clog","ebDialog","ebStatusIndicator",function(a,b,c,d,e,f,g){a.request=a.environmentRequest;a.preset=a.presets.value;a.presetsEnabled=!a.isNewApplicationMode()&&!a.request.configurationTemplate.templateNameRequired()&&!a.request.configurationTemplate.isCustomPlatform();var h=function(a){a.messageKey?b.error(a.messageKey,a.error):b.alert("message",
a,"alert-error",void 0,_.underscored(a.code))},k=function(b){a.request=a.overwriteEnvironmentRequest(b);a.preset=a.presets.value;a.$broadcast(amzn.beanstalk.constants.REQUEST_CHANGED)};a.changePreset=function(b){a.presets.use(b).then(k);e.log("selectPreset"+_.classify(b),"1","createAdvanced","quickStartWebApp");c.trackClick("create_env_adv_SelectPreset"+_.classify(b))};a.describeConfiguration=function(a){g.setMessage("describing_configuration_options_status");var b=a.getDescribeConfigurationOptionsRequest().exec().then(function(b){return a.configurationOptions.withOptions(b.options)}).then(function(){g.setMessage("describing_configuration_settings_status");
return a.getDescribeConfigurationSettingsRequest().exec()}).then(function(b){return a.configurationOptions.deserialize(b.optionSettings)}).then(function(){return a});b["catch"](h);b["finally"](g.clear);return b};a.openSelectPlatformVersionModel=function(){var b={tier:a.request.tier},c={display:"modalOversized"},e="partials/experimental/getting-started/";a.request.configurationTemplate.isCustomPlatform()?(b.platform=a.request.configurationTemplate.platform,b.platforms=a.$resolve.customPlatforms||new d,
e+="select-platform-version-modal.html",c.display="modal"):(b.solutionStack=a.request.configurationTemplate.solutionStack,e+="select-solution-stack-modal.html");f.open(e,b,c).then(function(b){var c,d=a.presets.value;a.presets.useCustom().then(function(b){c=angular.copy(b);return a.presets.use(null)}).then(function(c){c.configurationTemplate.isCustomPlatform()?c.configurationTemplate.setCustomPlatform(b):c.configurationTemplate.setSolutionStack(b);return a.describeConfiguration(c.resetConfiguration())}).then(function(b){b.configurationOptions.backfill("elasticbeanstalkCommandDeploymentPolicy");
return a.overwritePresets(b).load(c).use(d)}).then(k)})};a.previous=function(){e.log("btnPrevious","1","createAdvanced","quickStartWebApp");a.loadBasicView()};(a.presetsEnabled?a.presets.getRequest():a.presets.useCustom()).then(k);e.log("viewAdvanced","1","createAdvanced","quickStartWebApp")}])})();(function(){amzn.beanstalk.gettingStarted.controller("BasicEnvironmentController",["$controller","$scope","Alerts","AnalyticsService","Applications","ApplicationVersions","ConfigurationPresets","PlatformVersionsCollection","SelectTierModal","clog","ebDeepLink","ebDialog","ebStatusIndicator",function(a,b,c,d,e,f,g,h,k,l,n,p,q){var r=function(a){a.messageKey?c.error(a.messageKey,a.error):c.alert("message",a,"alert-error",void 0,_.underscored(a.code))};g=function(){q.setMessage("describing_configuration_template_status");
return b.environmentRequest.getDescribeConfigurationOptionsRequest().exec().then(function(a){b.environmentRequest.withConfiguration(a)},function(a){"InvalidParameterValue"===a.code&&_.string.contains(a.message,"no solution stack")?b.environmentRequest.configurationTemplate.setPartialTemplate():b.environmentRequest.configurationTemplate.setSolutionStack()})["finally"](q.clear)};var m=function(a){a=_.chain(a).slugify().camelize().capitalize().value();return a.substring(0,b.environmentRequest.environmentName.maxLength-
4)+"-env"};b.applicationNameChange=function(){if(b.createApplication.applicationName.validate()){var a=b.createApplication.applicationName.value,c=e.find(a);_.isDefined(c)&&(b.createApplicationVersion.withApplication(c),b.environmentRequest.withApplication(c));b.isNewEnvironmentMode()||b.environmentRequest.autofillEnvironmentName(m(a));b.createApplicationVersion.versionLabel.autofill(a.toLowerCase().replace(/\//g,".").substr(0,99)+"-source");n.updateApplicationName(a)}};b.changeTier=function(){k.open(b.environmentRequest.application,
b.environmentRequest.tier).then(function(a){b.environmentRequest.withTier(a.tier);n.updateTierName(a.tier.name)})};b.checkAvailabilityButtonDisabled=function(){return b.environmentRequest.cnameprefix.hasBeenChecked()||_.isBlank(b.environmentRequest.cnameprefix.value)};b.checkDnsAvailability=function(){return b.environmentRequest.cnameprefix.checkAvailability().then(function(){b.checkAvailabilityErrorMessage=null})["catch"](function(a){b.checkAvailabilityErrorMessage=a.message})};b.configure=function(){var c=
b.checkDnsAvailability().then(function(){return b.preconfigure()}).then(function(){b.environmentRequest.configurationOptions.backfill("elasticbeanstalkCommandDeploymentPolicy")}).then(function(){return b.overwritePresets(b.environmentRequest)}).then(function(){return b.isNewApplicationMode()?b.presets.useCustom().then(function(c){b.request=c;if(n.hasDatabaseSettings())return a("RdsConfigurationController",{$scope:b}),b.addRdsTemplateExtension()}).then(function(){n.configurationOptions(b.request);
q.setMessage("validating_settings_status");return b.request.getValidateConfigurationSettingsRequest().exec()}).then(function(a){b.request.configurationOptions.setValidationMessages(a,!0);return b.presets.customize(b.request)}):b.environmentRequest}).then(function(a){b.overwriteEnvironmentRequest(a);b.loadAdvancedView()});c["catch"](r);c["finally"](q.clear)};b.createWithDefaultConfiguration=function(){b.checkDnsAvailability().then(function(){return b.preconfigure()}).then(function(){return b.overwritePresets(b.environmentRequest).getRequest()}).then(function(a){b.overwriteEnvironmentRequest(a);
return b.create()})};b.filterSampleApplication=_.bind(function(a,b){return a!==b},null,b.createApplicationVersion.getSampleVersionLabel());b.hasApplicationVersions=function(){var a=_.toArray(b.environmentRequest.application.versions||[]);return!_.isBlank(_.without(a,b.createApplicationVersion.getSampleVersionLabel()))};b.platformChange=function(a){_.isString(a)&&(l.log("selectPlatform"+_.classify(a),"1","create","quickStartWebApp"),d.trackClick("create_env_SelectPlatform"+_.classify(a)),n.updateSolutionStackName(a))};
b.showReviewButton=function(){return b.isNewApplicationMode()&&n.hasConfigurationOptions()};b.upload=function(){b.createApplicationVersion.sourceBundle.errors.reset();b.createApplicationVersion.versionLabel.errors.reset();b.createApplicationVersion.source="new";return p.open("partials/experimental/getting-started/upload-panel.html",angular.copy(b.createApplicationVersion),{display:"config-panel"}).then(b.overwriteCreateApplicationVersion)};b.versionLabelChange=function(a){b.environmentRequest.versionLabel.errors.reset();
b.overwriteApplicationVersion(f.find(b.createApplication.applicationName.value,a))};b.$watch("applicationVersionSource.value",function(a,c){a!==c&&(l.log("selectStartingCode"+_.classify(a),"1","create","quickStartWebApp"),d.trackClick("create_env_SelectApplicationCode"+_.classify(a)),b.createApplicationVersion.sourceBundle.errors.reset(),b.createApplicationVersion.versionLabel.errors.reset(),b.environmentRequest.versionLabel.errors.reset())});b.$watch("environmentRequest.configurationTemplate.solutionStack",
function(a){a&&b.environmentRequest.configurationTemplate.validate()});b.$watch("environmentRequest.configurationTemplate.source",function(a,c){b.environmentRequest.configurationTemplate.isCustomPlatform()&&b.applicationVersionSource.isSampleApplication()&&b.applicationVersionSource.setExistingVersion()});b.checkAvailabilityErrorMessage=null;b.customPlatforms=b.$resolve.customPlatforms||new h;b.versionLabel=b.applicationVersionSource.isExistingVersion()?b.environmentRequest.versionLabel.value.versionLabel:
null;n.applicationName(b.createApplication,b.applicationNameChange);n.sourceBundle(b.createApplicationVersion);n.platform(b.environmentRequest);n.tier(b.environmentRequest);n.hasConfigurationTemplate()&&n.configurationTemplate(b.environmentRequest,g);b.customPlatforms.isEmpty()&&b.environmentRequest.configurationTemplate.isCustomPlatform()&&b.environmentRequest.configurationTemplate.setSolutionStack();_.isNull(b.environmentRequest.application.applicationName)||b.environmentRequest.autofillEnvironmentName(m(b.environmentRequest.application.applicationName));
l.log("view","1","create","quickStartWebApp")}])})();(function(){amzn.beanstalk.gettingStarted.controller("SelectPlatformVersionModalController",["$scope",function(a){a.platform=a.dialog.context.platform;a.platforms=a.dialog.context.platforms;a.group=a.platforms.getGroupForPlatform(a.platform);a.localizationForSupportedTiers=function(a){return _.map(a.supportedTierList||[],function(a){return a.toLowerCase().replace(/\//g,"_")})}}])})();(function(){amzn.beanstalk.gettingStarted.controller("SelectSolutionStackModelController",["$scope","LocalizationService","PlatformsCollection","Util",function(a,b,c,d){a.solutionStack=a.dialog.context.solutionStack;a.platforms=new c(d.solutionStacks,a.dialog.context.tier);a.platform=a.platforms.getPlatformForSolutionStack(a.solutionStack);var e=_.pluck(a.platforms.recommended(_.result(a.platform,"specs"))||[],"solutionStackName");a.platformIsModern=0!==e.length;a.versions=_.map(_.result(a.platform,
"specs")||[],function(a,c){_.contains(e,a.solutionStackName)?a.group=b.localize("latest"):a.group=b.localize("older");return a});a.recommendedIsSelected=function(){return _.contains(e,a.solutionStack.solutionStackName)}}])})();(function(){amzn.beanstalk.gettingStarted.service("ebDeepLink",["$location","$route","PlatformsCollection","Tiers","Util",function(a,b,c,d,e){var f=function(a){return(b.current.params||{})[a]},g=function(){var a=b.current.params||{};return _.reduce({autoscalingLaunchconfigurationInstanceType:a.instanceType||null,elasticbeanstalkEnvironmentEnvironmentType:a.environmentType||null,rdsDbinstanceDbAllocatedStorage:a.rdsDBAllocatedStorage||null,rdsDbinstanceDbDeletionPolicy:a.rdsDBDeletionPolicy||null,
rdsDbinstanceDbEngine:a.rdsDBEngine||null,rdsDbinstanceDbInstanceClass:a.rdsDBInstanceClass||null,rdsDbinstanceMultiAzDatabase:a.rdsMultiAZDatabase||null},function(a,b,c){_.isNull(b)||(a[c]=b);return a},{})},h=function(){var a=b.current.params||{};return _.reduce({rdsDbinstanceDbAllocatedStorage:a.rdsDBAllocatedStorage||null,rdsDbinstanceDbDeletionPolicy:a.rdsDBDeletionPolicy||null,rdsDbinstanceDbEngine:a.rdsDBEngine||null,rdsDbinstanceDbInstanceClass:a.rdsDBInstanceClass||null,rdsDbinstanceMultiAzDatabase:a.rdsMultiAZDatabase||
null},function(a,b,c){_.isNull(b)||(a[c]=b);return a},{})};this.applicationName=function(a,b){var c=f("applicationName");_.isBlank(c)||(a.applicationName.autofill(c),_.isFunction(b)&&b(c));return a};this.configurationOptions=function(a,b){var c=g();_.isEmpty(c)||(a.configurationOptions.setValues(c),_.isFunction(b)&&b(c));return a};this.configurationTemplate=function(a,b){var c=f("templateName");_.isBlank(c)||(a.configurationTemplate.setSavedConfig(c),_.isFunction(b)&&b(c));return a};this.getApplicationName=
function(){var a=f("applicationName");return!_.isBlank(a)?a:null};this.getTier=function(){var a=d.find(f("tierName"));return _.isDefined(a)?a:d.defaultTier};this.hasConfigurationOptions=function(){return!_.isEmpty(g())};this.hasConfigurationTemplate=function(){var a=f("templateName");return!_.isBlank(a)};this.hasDatabaseSettings=function(){return!_.isEmpty(h())};this.platform=function(a,b){var d=f("solutionStackName");if(!_.isBlank(d))if("custom"===d.toLowerCase())a.configurationTemplate.setCustomPlatform();
else{if(d=_.findWhere((new c(e.solutionStacks,a.tier.name)).options,{name:d}))a.configurationTemplate.solutionStack=d.recommended;_.isFunction(b)&&b(d.recommended)}return a};this.sourceBundle=function(a,b){var c=f("sourceBundleUrl");_.isBlank(c)||(a.source="new",a.sourceBundle.source="url",a.sourceBundle.url=c,(c=a.sourceBundle.parse())&&a.versionLabel.autofill(c.s3Key.replace(/\//g,".").substr(0,99)),a.sourceBundle.validate(),_.isFunction(b)&&b(c));return a};this.tier=function(a,b){var c=f("tierName");
_.isBlank(c)||(c=d.find(c)||null,a.withTier(c),_.isFunction(b)&&b(c));return a};this.update=function(c,d){b.current.params[c]&&a.search(c,d)};this.updateApplicationName=_.bind(this.update,this,"applicationName");this.updateEnvironmentType=_.bind(this.update,this,"environmentType");this.updateInstanceType=_.bind(this.update,this,"instanceType");this.updateRdsAvailability=_.bind(this.update,this,"rdsMultiAZDatabase");this.updateRdsDeletionPolicy=_.bind(this.update,this,"rdsDBDeletionPolicy");this.updateRdsEngine=
_.bind(this.update,this,"rdsDBEngine");this.updateRdsInstanceType=_.bind(this.update,this,"rdsDBInstanceClass");this.updateRdsStorage=_.bind(this.update,this,"rdsDBAllocatedStorage");this.updateSolutionStackName=_.bind(this.update,this,"solutionStackName");this.updateSourceBundleUrl=_.bind(this.update,this,"sourceBundleUrl");this.updateTemplateName=_.bind(this.update,this,"templateName");this.updateTierName=_.bind(this.update,this,"tierName")}])})();(function(){amzn.beanstalk.gettingStarted.service("SelectTierModal",["Tiers","ebDialog",function(a,b){this.open=function(c,d){d=_.isObject(d)?d:_.isString(d)?a.find(d):a.defaultTier;return b.open("partials/experimental/getting-started/select-tier-modal.html",{application:c,tier:d,tiers:a},{display:"modal"})}}]);amzn.beanstalk.gettingStarted.service("CreateNewEnvironmentModal",["BeanstalkLocations","SelectTierModal",function(a,b){this.open=function(c){return b.open(c).then(function(b){a.goToGettingStarted(b.application.applicationName,
b.tier.name);return b})}}])})();(function(){amzn.beanstalk.gettingStarted.controller("OptOutModalController",["$scope","AnalyticsService","BeanstalkLocations","ebDialog","PreferencesService",function(a,b,c,d,e){a.other="";a.reason=null;a.cancel=function(){b.trackClick("console_optOut_Cancelled");d.close()};a.confirm=function(){var f={reason:""};d.close();f.reason="other"===a.reason?a.other:a.reason;b.trackClick("console_OptOut",f);e.setQuickStartPreference(!1).then(function(){c.goToPrevConsole()})};a.isConfirmDisabled=function(){return"other"===
a.reason?2>a.other.length:!_.isDefined(a.reason)}}])})();(function(){amzn.beanstalk.gettingStarted.directive("qsExperimentOptOutHref",["ebDialog",function(a){return{replace:!0,restrict:"A",scope:{},template:'<a class="opt-out" href ng-click="optOut()" ng-transclude></a>',transclude:!0,link:function(b,c,d){c.removeAttr("qs-experiment-opt-out-href");b.optOut=function(){return a.open("partials/experimental/getting-started/opt-out-modal.html",null,{display:"modal"})}}}}])})();(function(){amzn.beanstalk.components.modal={};var a={},b={open:!1};amzn.beanstalk.components.controller("ModalController",["$scope",function(c){c.state=b;c.handlers=a}]);amzn.beanstalk.components.service("Modal",["$q","LocalizationService",function(c,d){var e={confirm:function(e,g,h,k){function l(){b.open=!1;delete b.alertText;delete b.alertTitle;delete b.alertError;delete b.confirmButtonHide}function n(){l();p.resolve(!1)}var p=c.defer();a.close=n;a.cancel=n;a.confirm=function(){l();p.resolve(!0)};
b.open=!0;b.title=g||d.localize("default_confirm_title");b.body=e;b.confirmButtonText=h||d.localize("default_confirm_button_text");b.cancelButtonText=k||d.localize("default_cancel_button_text");return p.promise},alert:function(a,c,h,k,l,n){b.alertTitle=k||d.localize("default_alert_title");b.alertText=h;return e.confirm(a,c,l,n)},alertError:function(a,c,d,k,l,n,p){b.alertError=!0;b.confirmButtonHide=p;return e.alert(a,c,d,k,l,n)},alertErrorWithContinue:function(a){var b=d.localize("default_cancel_button_text"),
c=d.localize("permissions_modal_confirm_button_text"),k=d.localize(a.messageKey,{message:amzn.beanstalk.utils.htmlEntities(a.error.message)}),l=d.localize("permissions_modal_question"),n=d.localize("error_title"),p=d.localize("error_title");"AccessDenied"===a.error.code&&(k=d.localize("permissions_modal_access_denied_desc",{domain:amzn.beanstalk.constants.DOCS_DOMAIN,message:k}),n=d.localize("access_denied_title"),p=d.localize("permissions_modal_title"));return e.alertError(l,p,k,n,c,b)}};return e}])})();(function(){amzn.beanstalk.environment.service("ApplyManagedActionModal",["LocalizationService",function(a){return{launchApply:function(a,c){this.environment=a;this.managedAction=c;this.open=!0},open:!1}}]);amzn.beanstalk.environment.directive("applyManagedActionModalDir",function(){return{controller:"ApplyManagedActionModalController",restrict:"A",scope:{},templateUrl:"partials/environment/apply-managed-action-modal.html"}})})();(function(){amzn.beanstalk.models={};amzn.beanstalk.models=angular.module("beanstalkModels",[])})();(function(){amzn.beanstalk.models.factory("AlbListener",["ConfigurationResource",function(a){var b="elbv2ListenerDefaultProcess elbv2ListenerListenerEnabled elbv2ListenerProtocol elbv2ListenerRules elbv2ListenerSslCertificateArns elbv2ListenerSslPolicy".split(" "),c=function(b){if(!(this instanceof c))return new c(b);a.call(this,b)};c.DEFAULT_IDENTIFIER="default";c.DEFAULT_PORT=80;c.createDefault=function(){return this(this.DEFAULT_IDENTIFIER,_.map(b,function(a){return this.FACTORY.createFromDescription(a)},
this))};c.prototype=Object.create(a.prototype);c.prototype.constructor=c;c.prototype.getPort=function(){return this.isDefault()||_.isNull(this.identifier)?c.DEFAULT_PORT:this.identifier};c.prototype.isDisabled=function(){return!this.isEnabled()};c.prototype.isEnabled=function(){return!_.has(this.options,"elbv2ListenerListenerEnabled")?!1:this.options.elbv2ListenerListenerEnabled.value};return c}])})();(function(){amzn.beanstalk.models.factory("ElbListener",["ConfigurationResource",function(a){var b=["elbListenerInstancePort","elbListenerInstanceProtocol","elbListenerListenerEnabled","elbListenerListenerProtocol"],c=function(b){if(!(this instanceof c))return new c(b);a.call(this,b)};c.DEFAULT_IDENTIFIER="80";c.createDefault=function(){return this(this.DEFAULT_IDENTIFIER,_.map(b,function(a){return this.FACTORY.createFromDescription(a)},this))};c.prototype=Object.create(a.prototype);c.prototype.constructor=
c;c.prototype.isDisabled=function(){return _.has(this.options,"elbListenerListenerEnabled")?!this.options.elbListenerListenerEnabled.value:!0};return c}])})();(function(){amzn.beanstalk.models.factory("ElbPolicy",["ConfigurationResource",function(a){var b=["elbPoliciesLoadBalancerPorts","elbPoliciesStickinessCookieExpiration","elbPoliciesStickinessPolicy"],c=function(b,e){if(!(this instanceof c))return new c(b,e);a.call(this,b,e)};c.DEFAULT_IDENTIFIER=null;c.createDefault=function(){return this(this.DEFAULT_IDENTIFIER,_.map(b,function(a){return this.FACTORY.createFromDescription(a)},this))};c.prototype=Object.create(a.prototype);c.prototype.constructor=
c;c.prototype.stickinessPolicy=function(){return!_.has(this.options,"elbPoliciesStickinessPolicy")?!1:this.options.elbPoliciesStickinessPolicy.value};return c}])})();(function(){amzn.beanstalk.models.factory("OptionSetting",["ValidationMessages",function(a){var b=function(c,d,e,f){if(!(this instanceof b))return new b(c,d,e,f);_.isObject(c)?(this.namespace=c.namespace,this.optionName=c.optionName,this.resourceName=c.resourceName||null,this.value=c.value):(this.namespace=c,this.optionName=d,this.resourceName=f||null,this.value=e);var g=this.value;this.remove=!1;this.validationMessages=new a;this.getInitial=function(){return g}};b.prototype.getSpecification=function(){return _.pick(this,
"namespace","optionName")};b.prototype.include=function(){this.isDirty=function(){return!0};return this};b.prototype.included=function(){return this.isDirty()&&!this.isDisabled()&&!this.remove};b.prototype.isDefault=function(){return this.serialize().value===this.defaultValue};b.prototype.isDirty=function(){return this.serialize().value!==this.getInitial()};b.prototype.isDisabled=function(){return!1};b.prototype.isSynced=function(){return!this.isDirty()&&!this.remove};b.prototype.resetValidationMessages=
function(){this.validationMessages.reset()};b.prototype.serialize=function(){return _.pick(this,"namespace","optionName","resourceName","value")};b.prototype.set=function(a){if(_.isNull(this.valueOptions)||_.contains(this.valueOptions,a))this.value=a;return this};b.prototype.withDescription=function(a){a=_.omit(a,"name","namespace","resourceName","value");return _.extend(this,a)};return b}])})();(function(){amzn.beanstalk.models.factory("CNAMEPrefix",["$q","LocalizationService","StringParameter","UtilService",function(a,b,c,d){var e=amzn.beanstalk.constants.CNAME_DOMAIN,f=function(a,b){if(!(this instanceof f))return new f(a,b);b=_.defaults(b||{},{loc:"cname_prefix",maxLength:63,minLength:4,required:!1});c.call(this,a,b);this.availability={}};f.prototype=Object.create(c.prototype);f.prototype.constructor=f;f.prototype.autofill=function(a){if(!this.isAvailable())return c.prototype.autofill.call(this,
a)};f.prototype.checkAvailability=function(){var b=this.value;return _.isBlank(b)?a.when(null):_.has(this.availability,b)?a.when(this.availability[b]):d.checkAvailability(b).then(_.bind(function(a,b){this.availability[a]=b;return b.available},this,b))};f.prototype.getCnameDomain=function(){return e};f.prototype.getFqdn=function(){return this.isAvailable()?this.availability[this.value].fullyQualifiedCNAME:(_.isNull(this.value)?"":this.value)+e};f.prototype.hasBeenChecked=function(){return _.has(this.availability,
this.value)};f.prototype.isAvailable=function(){var a=this.value;return!_.isBlank(a)&&this.hasBeenChecked()?this.availability[a].available:null};f.prototype.isUnavailable=function(){var a=this.value;return!_.isBlank(a)&&this.hasBeenChecked()?!this.availability[a].available:null};f.prototype.render=function(){return _.isString(this.value)?this.getFqdn():'<span class="empty-value">'+b.localize("autogenerated_value")+"</span>"};f.prototype.validate=function(a){if(a.isWorkerTier())return!0;this.errors.set("cname_prefix_is_unavailable",
!_.isBlank(this.value)&&!this.isAvailable());return c.prototype.validate.call(this,a)};return f}])})();(function(){amzn.beanstalk.models.factory("ConfigurationTemplate",["Application","Environment","ValidationErrors",function(a,b,c){var d=amzn.beanstalk.constants.CONFIG_SOURCE_CUSTOM_PLATFORM,e=amzn.beanstalk.constants.CONFIG_SOURCE_ENVIRONMENT,f=amzn.beanstalk.constants.CONFIG_SOURCE_SAVED_CONFIG,g=amzn.beanstalk.constants.CONFIG_SOURCE_SOLUTION_STACK,h=amzn.beanstalk.constants.CONFIG_SOURCE_PARTIAL_TEMPLATE,k=function(d){var e=_.result(d,"configurationTemplates")||[];this.application=d||new a;this.environment=
new b;this.errors=new c;this.solutionStack=this.platform=null;this.source=g;this.templateName=_.first(e)||null;this.templateSnippets=[]};k.prototype.addBaseForTemplatePack=function(a){_.isObject(a)?(this.solutionStack=a,this.source=h):_.isString(a)&&(this.withSolutionStackName(a),this.source=h);return this};k.prototype.addTemplateSnippet=function(a,b){this.hasTemplateSnippet(a,b)||this.templateSnippets.push({snippetName:a,sourceUrl:b})};k.prototype.applicationNameRequired=function(){return this.templateNameRequired()||
this.isSourceEnvironment()};k.prototype.errorMessages=function(){return this.errors.fullMessages(this)};k.prototype.getEnvironmentName=function(){return!this.isSourceEnvironment()?null:this.environment.isNullObject()?null:this.environment.environmentName};k.prototype.getPlatformArn=function(){return!this.platformArnRequired()?null:_.isDefined(this.platform)?this.platform.platformArn:null};k.prototype.getSolutionStackName=function(){return!this.solutionStackNameRequired()?null:_.isDefined(this.solutionStack)?
this.solutionStack.solutionStackName:null};k.prototype.getTemplateName=function(){return!this.templateNameRequired()?null:this.templateName||null};k.prototype.getTemplateSpecification=function(){if(this.solutionStack&&this.solutionStack.isLegacy)return null;var a={templateSnippets:this.templateSnippets,templateSource:this.getTemplateSource()};return _.reduce(a,function(a,b,c){_.isNull(b)&&delete a[c];return a},a)};k.prototype.getTemplateSource=function(){var a={environmentName:this.isSourceEnvironment()&&
_.isDefined(this.environment)?this.environment.environmentName:null,platformArn:this.isSourceEnvironment()&&_.isDefined(this.platform)?this.platform.platformArn:null,solutionStackName:this.isPartialTemplate()&&_.isDefined(this.solutionStack)?this.solutionStack.solutionStackName:null};return _.reduce(a,function(a,b,c){_.isNull(b)&&delete a[c];return a},a)};k.prototype.hasTemplateSnippet=function(a,b){return 0<_.where(this.templateSnippets,{snippetName:a,sourceUrl:b}).length};k.prototype.isCustomPlatform=
function(){return this.source===d};k.prototype.isPartialTemplate=function(){return this.source===h};k.prototype.isSavedTemplate=function(){return this.source===f};k.prototype.isSolutionStack=function(){return this.source===g};k.prototype.isSourceEnvironment=function(){return this.source===e};k.prototype.isValid=function(){return this.errors.isEmpty()};k.prototype.platformArnRequired=function(){return this.isCustomPlatform()};k.prototype.platformRequired=function(){return this.platformArnRequired()||
this.solutionStackNameRequired()};k.prototype.removeTemplateSnippet=function(a,b){var c=_.map(this.templateSnippets,function(a){return a.sourceUrl}).indexOf(b);-1!==c&&this.templateSnippets.splice(c,1)};k.prototype.render=function(){var a=[this.getPlatformArn(),this.getSolutionStackName(),this.getTemplateName()];return _.find(a,function(a){return!_.isNull(a)})};k.prototype.setCustomPlatform=function(a){_.isObject(a)&&_.has(a,"platformArn")&&(this.platform=a);this.source=d;return this};k.prototype.setPartialTemplate=
function(a){_.isString(a)&&(this.templateName=a);this.source=h;return this};k.prototype.setSavedConfig=function(a){_.isString(a)&&(this.templateName=a);this.source=f;return this};k.prototype.setSolutionStack=function(a){_.isObject(a)&&(this.solutionStack=a);this.source=g;return this};k.prototype.setSourceEnvironment=function(a){_.isObject(a)&&(this.environment=a);this.source=e;return this};k.prototype.solutionStackNameRequired=function(){return this.isSolutionStack()||this.isPartialTemplate()};k.prototype.templateNameRequired=
function(){return this.isPartialTemplate()||this.isSavedTemplate()};k.prototype.validate=function(a){this.errors.set("configuration_template_application_name_required",this.applicationNameRequired()&&!_.isDefined(this.application.applicationName));this.errors.set("configuration_template_platform_required",this.platformArnRequired()&&!_.isObject(this.platform));this.errors.set("configuration_template_solution_stack_required",this.solutionStackNameRequired()&&!_.isObject(this.solutionStack));this.errors.set("configuration_template_template_name_required",
this.templateNameRequired()&&!_.isString(this.templateName));return this.isValid()};k.prototype.withApplication=function(a){_.isObject(a)&&(this.application=a,this.templateName=this.templateName||_.first(a.configurationTemplates)||null);return this};k.prototype.withSolutionStackName=function(a){_.isString(a)&&(this.solutionStack=amzn.beanstalk.utils.structifySolutionStack(a));return this};return k}])})();(function(){amzn.beanstalk.models.factory("S3Location",["Parameter",function(a){var b=/^(?:s3|https?):\/\/(.*?)\.?s3(?:(?:-|\.).+)?\.amazonaws\.com(?:\.cn)?\/(.*)$/m,c=function(b,e){if(!(this instanceof c))return new c(b,e);e=_.defaults(e||{},{loc:"s3_location",required:!1});this.source="upload";this.url=null;a.call(this,b,e)};c.prototype=Object.create(a.prototype);c.prototype.constructor=c;c.prototype.isUpload=function(){return"upload"===this.source};c.prototype.isUrl=function(){return"url"===this.source};
c.prototype.parse=function(){var a,c;c=null;_.isString(this.url)&&(a=b.exec(this.url),_.isNull(a)||(c=a[2].split("/"),c={s3Bucket:_.isBlank(a[1])?c.shift():a[1],s3Key:c.join("/")}));return c};c.prototype.serialize=function(){return this.value=this.isUrl()?this.parse():this.value};c.prototype.validate=function(c){this.errors.set("s3_location_pattern",this.isUrl()&&_.isString(this.url)&&!b.test(this.url));return a.prototype.validate.call(this,c)};return c}])})();(function(){amzn.beanstalk.models.factory("VersionLabel",["ApplicationVersion","Parameter",function(a,b){var c=function(d,e){if(!(this instanceof c))return new c(d,e);d=d||new a;if(!(d instanceof a))throw new TypeError("Value must be an instance of {ApplicationVersion}");e=_.defaults(e||{},{loc:"version_label",required:!0});b.call(this,d,e)};c.prototype=Object.create(b.prototype);c.prototype.constructor=c;c.prototype.serialize=function(){return this.value.versionLabel};c.prototype.set=function(b){if(!(b instanceof
a))throw new TypeError("Must be an instance of {ApplicationVersion}");this.value=b};c.prototype.validate=function(a){this.errors.set("version_label_required",this.required&&(!_.isDefined(this.value)||this.value.isNullObject()));this.errors.set("version_label_cant_be_sample_application",!a.canHaveSampleApplication()&&this.value.isSampleApplication());return this.isValid()};return c}])})();(function(){amzn.beanstalk.models.factory("CreateApplicationVersion",["$q","Application","ApplicationsService","ApplicationVersion","ApplicationVersions","Description","S3Location","StringParameter",function(a,b,c,d,e,f,g,h){var k=function(a){if(!(this instanceof k))return new k(a);this.application=a||new b;this.description=new f;this.source="sample";this.sourceBundle=new g;this.versionLabel=new h("",{loc:"version_label",maxLength:100,minLength:1,required:!0})};k.prototype.deserialize=function(a){var b=
this.application.applicationName;a=new d(a);_.has(e.byApplication,b)||(e.byApplication[b]=[]);e.byApplication[b].push(a);return a};k.prototype.dryRun=function(){return!this.validate()?a.reject({code:"ValidationError",message:this.getErrorMessages().join("\n")}):a.when(new d(_.extend({buildArn:null,dateCreated:null,dateUpdated:null,sourceBundle:null,status:"PRECREATION"},this.serialize())))};k.prototype.exec=function(){return!this.validate()?a.reject({code:"ValidationError",message:this.getErrorMessages().join("\n")}):
c.createApplicationVersion(this.serialize()).then(_.bind(this.deserialize,this))};k.prototype.getErrorMessages=function(){return _.reduce(this,function(a,b){_.isObject(b)&&_.has(b,"errors")&&(a=a.concat(b.errors.fullMessages(b)));return a},[],this)};k.prototype.getSampleVersionLabel=function(){return"Sample Application"};k.prototype.getVersionLabel=function(){return this.isSampleApplication()?"Sample Application":this.versionLabel.serialize()};k.prototype.hasSampleVersionLabel=function(){return"Sample Application"===
this.versionLabel.value};k.prototype.isNewVersion=function(){return"new"===this.source};k.prototype.isSampleApplication=function(){return"sample"===this.source};k.prototype.isValid=function(){return this.isSampleApplication()||this.description.isValid()&&this.sourceBundle.isValid()&&this.versionLabel.isValid()};k.prototype.serialize=function(){var a={applicationName:this.application.applicationName,autoCreateApplication:this.application.isNullObject()||null,description:this.isSampleApplication()?
null:this.description.serialize(),sourceBundle:this.isSampleApplication()?null:this.sourceBundle.serialize(),versionLabel:this.getVersionLabel()};return _.reduce(a,function(a,b,c){_.isNull(b)&&delete a[c];return a},a)};k.prototype.setNewVersion=function(){this.source="new";return this};k.prototype.setSampleApplication=function(){this.source="sample";return this};k.prototype.validate=function(){this.sourceBundle.errors.set("s3_location_required",this.isNewVersion()&&!_.isDefined(this.sourceBundle.serialize()));
this.versionLabel.errors.set("version_label_cant_be_sample",this.isNewVersion()&&this.hasSampleVersionLabel());this.versionLabel.errors.set("version_label_must_be_unique",this.isNewVersion()&&!this.hasSampleVersionLabel()&&_.contains(this.application.versions,this.versionLabel.value));return _.reduce(this,function(a,b){_.isObject(b)&&_.isFunction(b.validate)&&(a=b.validate(this)&&a);return a},!0,this)};k.prototype.withApplication=function(a){if(!(a instanceof b))return this;this.application=a;return this};
return k}])})();(function(){amzn.beanstalk.models.factory("CreateApplication",["$q","Application","Applications","ApplicationsService","Description","StringParameter",function(a,b,c,d,e,f){var g=function(){if(!(this instanceof g))return new g;this.applicationName=new f(null,{loc:"application_name",maxLength:100,minLength:1,pattern:"^[^/]+$",required:!0});this.description=new e};g.prototype.deserialize=function(a){c.applicationsByName[a.applicationName]=a;return new b(a)};g.prototype.exec=function(){var b=(this.applicationName.value||
"").toLowerCase(),e=_.reduce(c.applicationsByName,function(a,c,d){return d.toLowerCase()===b?c:a},null);return e?a.when(this.deserialize(e)):!this.validate()?a.reject({code:"ValidationError",message:this.getErrorMessages().join("\n")}):d.createApplication(this.serialize()).then(this.deserialize)};g.prototype.getErrorMessages=function(){return _.reduce(this,function(a,b){_.isObject(b)&&_.has(b,"errors")&&(a=a.concat(b.errors.fullMessages(b)));return a},[],this)};g.prototype.serialize=function(){var a=
{applicationName:this.applicationName.serialize(),description:this.description.serialize()};return _.reduce(a,function(a,b,c){_.isNull(b)&&delete a[c];return a},a)};g.prototype.validate=function(){return _.reduce(this,function(a,b){_.isObject(b)&&_.isFunction(b.validate)&&(a=b.validate(this)&&a);return a},!0,this)};return g}])})();(function(){amzn.beanstalk.models.factory("CreateEnvironment",["$q","Application","CNAMEPrefix","ConfigurationOptionsCollection","ConfigurationTemplate","DescribeConfigurationOptions","DescribeConfigurationSettings","Description","Environment","EnvironmentRequest","Environments","StringParameter","TagsCollection","Tiers","ValidateConfigurationSettings","VersionLabel",function(a,b,c,d,e,f,g,h,k,l,n,p,q,r,m,t){var s=/^[a-zA-Z0-9][a-zA-Z0-9\-]+[a-zA-Z0-9]$/,v=function(a){if(!(this instanceof v))return new v(a);
this.application=a||new b;this.cnameprefix=new c;this.configurationOptions=new d;this.configurationTemplate=new e;this.description=new h("");this.environmentName=new p(null,{loc:"environment_name",maxLength:40,minLength:4,pattern:s,required:!0});this.tags=(new q).addBlankTag();this.versionLabel=new t;this.withApplication(this.application).withTier(r.defaultTier)};v.prototype=Object.create(l.prototype);v.prototype.constructor=v;v.prototype.autofillEnvironmentName=function(a){if(_.isUndefined(a)||!s.test(a))a=
"Default-env";this.environmentName.autofill(n.dedup(a));return this};v.prototype.canHaveSampleApplication=function(){return!this.configurationTemplate.isCustomPlatform()};v.prototype.deserialize=function(a){return new k(a)};v.prototype.diff=function(a){var b=[],c=function(a,c,d){"set"===a&&_.isUndefined(d)?b.push({path:c,operation:"delete"}):b.push({path:c,operation:a,value:d})},d=function(a,e,f){if(!_.isNull(e)&&!_.isNull(f)&&_.isObject(e)){var g=_.keys(e),k=_.keys(f);_.difference(g,k).forEach(function(b){c("delete",
a.concat(b))});_.difference(k,g).forEach(function(b){c("set",a.concat(b),f[b])});_.intersection(g,k).forEach(function(c){_.concat(b,d(a.concat(c),e[c],f[c]))})}else e!==f&&c("set",a,f);return b};return d([],a,this.serialize())};v.prototype.dryRun=function(){return!this.validate()?a.reject({code:"ValidationError",message:this.getErrorMessages().join("\n")}):a.when(!0)};v.prototype.exec=function(){return!this.validate()?a.reject({code:"ValidationError",message:this.getErrorMessages().join("\n")}):n.create(this.serialize()).then(this.deserialize)};
v.prototype.getDescribeConfigurationOptionsRequest=function(){return(new f).withApplication(this.application).withConfigurationOptions(this.configurationOptions).withConfigurationTemplate(this.configurationTemplate).withTier(this.tier)};v.prototype.getDescribeConfigurationSettingsRequest=function(){return(new g).withApplication(this.application).withConfigurationOptions(angular.copy(this.configurationOptions)).withConfigurationTemplate(this.configurationTemplate).withTier(this.tier)};v.prototype.getErrorMessages=
function(){return _.reduce(this,function(a,b){_.isObject(b)&&_.has(b,"errors")&&(a=a.concat(b.errors.fullMessages(b)));return a},[],this)};v.prototype.getValidateConfigurationSettingsRequest=function(){return(new m).withApplication(this.application).withConfigurationOptions(this.configurationOptions).withConfigurationTemplate(this.configurationTemplate).withTier(this.tier)};v.prototype.isCreateRequest=function(){return!0};v.prototype.isWebServerTier=function(){return!this.isWorkerTier()};v.prototype.isWorkerTier=
function(){return this.tier&&this.tier.isWorker()};v.prototype.resetConfiguration=function(){this.configurationOptions=new d;return this};v.prototype.serialize=function(){var a={applicationName:this.application.applicationName,cnameprefix:this.isWebServerTier()?this.cnameprefix.serialize():null,description:this.description.serialize(),environmentName:this.environmentName.serialize(),optionSettings:this.configurationOptions.getOptionSettings(),optionsToRemove:this.configurationOptions.getOptionsToRemove(),
platformArn:this.configurationTemplate.getPlatformArn(),solutionStackName:this.configurationTemplate.getSolutionStackName(),tags:this.tags.getTagsToAdd(),templateName:this.configurationTemplate.getTemplateName(),templateSpecification:this.configurationTemplate.getTemplateSpecification(),tier:this.tier.serialize(),versionLabel:this.versionLabel.serialize()};return _.reduce(a,function(a,b,c){_.isNull(b)&&delete a[c];return a},a)};v.prototype.withParams=function(a){_.isObject(a)&&(this.cnameprefix=a.cnameprefix,
this.description=a.description,this.environmentName.value=a.environmentName.value,this.tags=a.tags,this.withTier(a.tier),_.each(this.configurationOptions.options,function(b){var c=a.configurationOptions.find(b.namespace,b.optionName);_.isDefined(c)&&c.included()&&b.set(c.value)}));return this};return v}])})();(function(){amzn.beanstalk.models.factory("DescribeConfigurationOptions",["$q","Application","ApplicationVersion","ConfigurationOptionsCollection","ConfigurationOptionsService","ConfigurationTemplate","Environment","Tier",function(a,b,c,d,e,f,g,h){var k=function(a){if(!(this instanceof k))return new k;this.application=a||new b;this.applicationVersion=new c;this.configurationOptions=new d;this.configurationTemplate=new f;this.tier=new h};k.prototype.deserialize=function(a){a=_.isArray(a)?_.first(a):
a;a.tier=new h(a.tier);return a};k.prototype.exec=function(){return!this.validate()?a.reject({code:"ValidationError",message:this.getErrorMessages().join("\n")}):e.describeOptions(this.serialize()).then(this.deserialize)};k.prototype.getErrorMessages=function(){return _.reduce(this,function(a,b){_.isObject(b)&&_.has(b,"errors")&&(a=a.concat(b.errors.fullMessages(b)));return a},[],this)};k.prototype.serialize=function(){var a={applicationName:this.application.applicationName,environmentName:this.configurationTemplate.getEnvironmentName(),
options:this.configurationOptions.getOptions(),optionSettings:this.configurationOptions.getOptionSettings(),optionsToRemove:this.configurationOptions.getOptionsToRemove(),platformArn:this.configurationTemplate.getPlatformArn(),solutionStackName:this.configurationTemplate.getSolutionStackName(),templateName:this.configurationTemplate.getTemplateName(),templateSpecification:this.configurationTemplate.getTemplateSpecification(),tier:this.tier.serialize(),versionLabel:this.applicationVersion.versionLabel};
return _.reduce(a,function(a,b,c){_.isNull(b)&&delete a[c];return a},a)};k.prototype.validate=function(){return _.reduce(this,function(a,b){_.isObject(b)&&_.isFunction(b.validate)&&(a=b.validate(this)&&a);return a},!0,this)};k.prototype.withApplication=function(a){_.isObject(a)&&(this.application=a);return this};k.prototype.withApplicationVersion=function(a){_.isObject(a)&&(this.applicationVersion=a);return this};k.prototype.withConfigurationOptions=function(a){_.isObject(a)&&(this.configurationOptions=
a);return this};k.prototype.withConfigurationTemplate=function(a){_.isObject(a)&&(this.configurationTemplate=a);return this};k.prototype.withEnvironment=function(a){_.isObject(a)&&this.configurationTemplate.setSourceEnvironment(a);return this};k.prototype.withTier=function(a){_.isObject(a)&&(this.tier=a);return this};return k}])})();(function(){amzn.beanstalk.models.factory("DescribeConfigurationSettings",["$q","Application","ApplicationsService","ConfigurationOptionsCollection","ConfigurationTemplate","Environment","Tier",function(a,b,c,d,e,f,g){var h=function(a){if(!(this instanceof h))return new h;this.application=new b;this.configurationOptions=new d;this.configurationTemplate=new e;this.tier=new g};h.prototype.deserialize=function(a){return _.isArray(a)?_.first(a):a};h.prototype.exec=function(){return!this.validate()?a.reject({code:"ValidationError",
message:this.getErrorMessages().join("\n")}):c.describeSettings(this.serialize()).then(this.deserialize)};h.prototype.getErrorMessages=function(){return _.reduce(this,function(a,b){_.isObject(b)&&_.has(b,"errors")&&(a=a.concat(b.errors.fullMessages(b)));return a},[],this)};h.prototype.serialize=function(){var a={applicationName:this.application.applicationName,environmentName:this.configurationTemplate.getEnvironmentName(),options:this.configurationOptions.getOptions(),optionSettings:this.configurationOptions.getOptionSettings(),
optionsToRemove:this.configurationOptions.getOptionsToRemove(),platformArn:this.configurationTemplate.getPlatformArn(),solutionStackName:this.configurationTemplate.getSolutionStackName(),templateName:this.configurationTemplate.getTemplateName(),templateSpecification:this.configurationTemplate.getTemplateSpecification(),tier:this.tier.serialize()};return _.reduce(a,function(a,b,c){_.isNull(b)&&delete a[c];return a},a)};h.prototype.validate=function(){return _.reduce(this,function(a,b){_.isObject(b)&&
_.isFunction(b.validate)&&(a=b.validate(this)&&a);return a},!0,this)};h.prototype.withApplication=function(a){_.isObject(a)&&(this.application=a);return this};h.prototype.withConfigurationOptions=function(a){_.isObject(a)&&(this.configurationOptions=a);return this};h.prototype.withConfigurationTemplate=function(a){_.isObject(a)&&(this.configurationTemplate=a);return this};h.prototype.withEnvironment=function(a){_.isObject(a)&&this.configurationTemplate.setSourceEnvironment(a);return this};h.prototype.withTier=
function(a){_.isObject(a)&&(this.tier=a);return this};return h}])})();(function(){amzn.beanstalk.models.factory("EnvironmentRequest",["Application",function(a){var b=function(){};b.prototype.isCreateRequest=function(){return!1};b.prototype.isUpdateRequest=function(){return!1};b.prototype.isWebServerTier=function(){return!this.isWorkerTier()};b.prototype.isWorkerTier=function(){return this.tier&&this.tier.isWorker()};b.prototype.validate=function(){return _.reduce(this,function(a,b){_.isObject(b)&&_.isFunction(b.validate)&&(a=b.validate(this)&&a);return a},!0,this)};
b.prototype.withApplication=function(b){b instanceof a&&(this.application=b,this.configurationTemplate.withApplication(b));return this};b.prototype.withApplicationVersion=function(a){_.isObject(a)&&this.versionLabel.set(a);return this};b.prototype.withConfiguration=function(a){this.configurationOptions.withOptions(a.options);this.configurationTemplate.withSolutionStackName(a.solutionStackName);this.withTier(a.tier)};b.prototype.withTier=function(a){_.isObject(a)&&(this.tier=a);return this};return b}])})();(function(){amzn.beanstalk.models.factory("UpdateEnvironment",["$q","Applications","ApplicationVersion","ConfigurationOptionsCollection","ConfigurationTemplate","DescribeConfigurationOptions","DescribeConfigurationSettings","Description","Environments","EnvironmentRequest","Tier","ValidateConfigurationSettings","ValidationErrors",function(a,b,c,d,e,f,g,h,k,l,n,p,q){var r=function(a){if(!(this instanceof r))return new r(a);this.environment=a;this.applicationVersion=new c({versionLabel:this.environment.versionLabel});
this.configurationOptions=new d;this.configurationTemplate=(new e).setSourceEnvironment();this.description=new h(this.environment.description);this.withApplication(b.find(this.environment.applicationName));this.withTier(this.environment.tier)};r.prototype=Object.create(l.prototype);r.prototype.constructor=r;r.prototype.exec=function(){return!this.validate()?a.reject({code:"ValidationError",message:this.getErrorMessages().join("\n")}):k.update(this.environment.environmentId,this.serialize()).then(this.deserialize)};
r.prototype.getDescribeConfigurationOptionsRequest=function(){return(new f).withApplication(this.application).withConfigurationOptions(this.configurationOptions).withConfigurationTemplate(this.configurationTemplate).withEnvironment(this.environment)};r.prototype.getDescribeConfigurationSettingsRequest=function(){return(new g).withApplication(this.application).withConfigurationOptions(angular.copy(this.configurationOptions)).withConfigurationTemplate(this.configurationTemplate).withEnvironment(this.environment)};
r.prototype.getValidateConfigurationSettingsRequest=function(){return(new p).withApplication(this.application).withConfigurationOptions(this.configurationOptions).withConfigurationTemplate(this.configurationTemplate).withEnvironment(this.environment)};r.prototype.isUpdateRequest=function(){return!0};r.prototype.serialize=function(){var a={applicationName:this.application.applicationName,description:this.description.serialize(),environmentName:this.environment.environmentName,optionSettings:this.configurationOptions.getOptionSettings(),
optionsToRemove:this.configurationOptions.getOptionsToRemove(),platformArn:this.configurationTemplate.getPlatformArn(),solutionStackName:this.configurationTemplate.getSolutionStackName(),templateName:this.configurationTemplate.getTemplateName(),versionLabel:this.applicationVersion.versionLabel};return _.reduce(a,function(a,b,c){_.isNull(b)&&delete a[c];return a},a)};return r}])})();(function(){amzn.beanstalk.models.factory("ValidateConfigurationSettings",["$q","Application","ApplicationsService","ConfigurationOptionsCollection","ConfigurationTemplate","Environment","Tier",function(a,b,c,d,e,f,g){var h=function(a){if(!(this instanceof h))return new h;this.application=a||new b;this.configurationOptions=new d;this.configurationTemplate=new e;this.environment=new f;this.tier=new g};h.prototype.exec=function(){return!this.validate()?a.reject({code:"ValidationError",message:this.getErrorMessages().join("\n")}):
c.validateSettings(this.serialize())};h.prototype.getErrorMessages=function(){return _.reduce(this,function(a,b){_.isObject(b)&&_.has(b,"errors")&&(a=a.concat(b.errors.fullMessages(b)));return a},[],this)};h.prototype.serialize=function(){var a={applicationName:this.application.applicationName,environmentName:this.environment.environmentName,optionSettings:this.configurationOptions.getOptionSettings(),optionsToRemove:this.configurationOptions.getOptionsToRemove(),platformArn:this.configurationTemplate.getPlatformArn(),
solutionStackName:this.configurationTemplate.getSolutionStackName(),templateName:this.configurationTemplate.getTemplateName(),templateSpecification:this.configurationTemplate.getTemplateSpecification(),tier:this.tier.serialize()};return _.reduce(a,function(a,b,c){_.isNull(b)&&delete a[c];return a},a)};h.prototype.validate=function(){return _.reduce(this,function(a,b){_.isObject(b)&&_.isFunction(b.validate)&&(a=b.validate(this)&&a);return a},!0,this)};h.prototype.withApplication=function(a){_.isObject(a)&&
(this.application=a);return this};h.prototype.withEnvironment=function(a){_.isObject(a)&&(this.environment=a);return this};h.prototype.withConfigurationOptions=function(a){_.isObject(a)&&(this.configurationOptions=a);return this};h.prototype.withConfigurationTemplate=function(a){_.isObject(a)&&(this.configurationTemplate=a);return this};h.prototype.withTier=function(a){_.isObject(a)&&(this.tier=a);return this};return h}])})();(function(){amzn.beanstalk.models.factory("ScheduledAction2",["ConfigurationResource",function(a){var b=function(c,d){if(!(this instanceof b))return new b(c,d);a.call(this,c,d)};b.prototype=Object.create(a.prototype);b.prototype.constructor=b;b.prototype.getNextOccurrence=function(){var a=moment.utc(this.options.autoscalingScheduledactionEndTime.value,"YYYY-MM-DD[T]HH:mm:ss[Z]"),b=moment.utc(this.options.autoscalingScheduledactionStartTime.value,"YYYY-MM-DD[T]HH:mm:ss[Z]"),e=this.options.autoscalingScheduledactionRecurrence.value;
if(_.isNull(e))return!b.isValid()?null:b.isAfter(new Date)?b.toDate():null;e=later.schedule(later.parse.cron(e));b=b.isValid()&&b.isAfter(new Date)?b.toDate():new Date;if(a.isValid()){if(a.isAfter(new Date))return e.next(1,b,a.toDate())||null}else return e.next(1,b)||null;return null};b.prototype.isSuspended=function(){return _.has(this.options,"autoscalingScheduledactionSuspend")?this.options.autoscalingScheduledactionSuspend.value:!1};return b}])})();(function(){amzn.beanstalk.models.factory("ValidationMessages",function(){var a=function(){this.reset()};a.prototype.getSeverity=function(){return _.isEmpty(this.messages)?null:_.findWhere(this.messages,{severity:"error"})?"error":"warning"};a.prototype.isSeverityError=function(){return"error"===this.getSeverity()};a.prototype.isSeverityWarning=function(){return"warning"===this.getSeverity()};a.prototype.isEmpty=function(){return 0===this.messages.length};a.prototype.reset=function(){this.messages=
[]};a.prototype.set=function(a,c){var d=_.isObject(a)?a.message:a,e=_.isObject(a)?a.severity:c;this.messages.push({message:d,severity:e})};return a})})();(function(){amzn.beanstalk.models.factory("ApplicationVersion",function(){var a=function(b){b=b||{};if(!(this instanceof a))return new a(b);this.versionLabel=null;_.extend(this,b);this.isNullObject=function(){return 0===_.keys(b).length}};a.prototype.isSampleApplication=function(){return this.isNullObject()?!1:_.isNull(this.sourceBundle)?!0:_.str.contains(this.sourceBundle.s3Bucket,"elasticbeanstalk")&&"GenericSampleApplication"===this.sourceBundle.s3Key};return a})})();(function(){amzn.beanstalk.models.factory("ApplicationVersions",["$log","$q","ApplicationsService","ApplicationVersion",function(a,b,c,d){var e={byApplication:{},find:function(a,b){if(_.isUndefined(a))throw Error("Missing parameter: {String} applicationName");if(_.isUndefined(b))throw Error("Missing parameter: {String} versionLabel");return _.findWhere(e.byApplication[a],{versionLabel:b})},getSampleApplication:function(a){if(_.isUndefined(a))throw Error("Missing parameter: {String} applicationName");
return _.find(e.byApplication[a],function(a){return a.isSampleApplication()})},hasSampleApplication:function(a){if(_.isUndefined(a))throw Error("Missing parameter: {String} applicationName");return _.reduce(e.byApplication[a],function(a,b){return b.isSampleApplication()||a},!1)},refresh:function(f){return c.describeApplicationVersions(f).then(function(a){a=_.map(a,d);_.extend(e.byApplication,_.groupBy(a,"applicationName"));return a},function(c){a.warn("Could not retrieve application versions: "+c);
return b.reject(c)})}};return e}])})();(function(){amzn.beanstalk.models.factory("Application",function(){var a=function(b){b=b||{};if(!(this instanceof a))return new a(b);this.versions=this.configurationTemplates=this.applicationName=null;_.extend(this,b);this.isNullObject=function(){return 0===_.keys(b).length}};return a})})();(function(){amzn.beanstalk.models.Applications={};amzn.beanstalk.models.factory("Applications",["Application","ApplicationsService","$q","$log","preload","AutoRefresher","$rootScope","ReportingService",function(a,b,c,d,e,f,g,h){function k(a,b){n.applications=_.sortBy(_.values(n.applicationsByName),function(a){return a.applicationName.toLowerCase()});if(b){var c=_.filter(_.values(a),function(a){return _.has(n.applicationsByName,a.applicationName)&&!_.isEqual(n.applicationsByName[a.applicationName],
a)}),d=_.filter(_.values(n.applicationsByName),function(b){return!_.has(a,b.applicationName)}),e=_.filter(_.values(a),function(a){return!_.has(n.applicationsByName,a.applicationName)});_.each(c,function(a){g.$broadcast(amzn.beanstalk.constants.APPLICATION_CHANGED,n.applicationsByName[a.applicationName],a)});_.each(d,function(a){g.$broadcast(amzn.beanstalk.constants.APPLICATION_ADDED,a)});_.each(e,function(a){g.$broadcast(amzn.beanstalk.constants.APPLICATION_DELETED,a)})}}function l(b,c){var d=n.applicationsByName;
n.applicationsByName=_.reduce(b,function(b,c){b[c.applicationName]=new a(c);return b},{});k(d,!!c)}var n={applicationsByName:{},applications:[],create:function(a,d){return b.create(a,d).then(function(a){var b=_.clone(n.applicationsByName);n.applicationsByName[a.applicationName]=a;k(b,!0);return a},c.reject)},find:function(a){return this.hasApplicationName(a)?this.applicationsByName[a]:null},hasApplicationName:function(a){return _.has(this.applicationsByName,a)},refresh:function(){return b.describeApplications().then(function(a){l(a.applications,
!0);return a.applications},function(a){d.warn("Could not retrieve applications: "+a);return c.reject(a)})},deleteConfigurations:function(a,e){var f=[];_.each(e,function(e){f.push(b.deleteConfigurationTemplate(a.applicationName,e).then(_.identity,function(a){d.error("Failed to delete configuration "+angular.toJson(a));return c.reject(a)}))});return c.all(f).then(function(b){a.configurationTemplates=_.filter(a.configurationTemplates,function(a){return!_.contains(e,a)});g.$broadcast(amzn.beanstalk.constants.CONFIGURATION_DELETED,
a);return!0},c.reject)}};g.$on(amzn.beanstalk.constants.CONFIGURATION_CREATED,function(a,b){if(_.has(n.applicationsByName,b.applicationName)){var c=n.applicationsByName[b.applicationName],d=angular.fromJson(angular.toJson(c));c.configurationTemplates=_.union(c.configurationTemplates,[b.templateName]);g.$broadcast(amzn.beanstalk.constants.APPLICATION_CHANGED,c,d)}});if(e=e["all-applications"]){var p=angular.fromJson(e);p.Error?h.fault("preload:applicationDataError",{preloadData:e}):l(p.applications)}else n.refresh();
f.autoRefresh(n.refresh,amzn.beanstalk.constants.APPLICATIONS_REFRESH_RATE,!0);return n}])})();(function(){amzn.beanstalk.models.ConfigurationOptions={};amzn.beanstalk.models.factory("ConfigurationOptions",["ConfigurationOptionsService","Environments","LocalizationService","$q","$log","$rootScope",function(a,b,c,d,e,f){var g={optionsByEnvironmentId:{},refreshEnvironment:function(e){var k=b.environmentsById[e];return _.isUndefined(k)?(k=c.localize("no_such_environment",{environmentId:e}),amzn.beanstalk.utils.getErrorPromise(d,{message:k})):a.describeOptions({environmentName:k.environmentName}).then(function(a){a=
a.options;var b=g.optionsByEnvironmentId[e];g.optionsByEnvironmentId[e]=amzn.beanstalk.utils.deepClone(a);b&&!_.isEqual(a,b)&&f.$broadcast(amzn.beanstalk.constants.CONFIGURATION_OPTIONS_CHANGED,e,a,b);return a},d.reject)},injectConfigurationOptions:function(a,b,c){c=c||"configurationOptions";_.has(g.optionsByEnvironmentId,a)?b[c]=amzn.beanstalk.utils.deepClone(g.optionsByEnvironmentId[a]):g.refreshEnvironment(a).then(function(a){b[c]=a},function(b){e.error("Could not inject configuration options into environment: "+
a+": "+b.message)});b.$on(amzn.beanstalk.constants.CONFIGURATION_OPTIONS_CHANGED,function(d,e,f){a===e&&(b[c]=f)})}};f.$on(amzn.beanstalk.constants.ENVIRONMENT_CHANGED,function(a,b,c){g.optionsByEnvironmentId[b.environmentId]&&g.refreshEnvironment(b.environmentId)});return g}])})();(function(){amzn.beanstalk.models.ConfigurationSettings={};amzn.beanstalk.models.factory("ConfigurationSettings",["ApplicationsService","Environments","LocalizationService","$q","$log","$rootScope",function(a,b,c,d,e,f){var g={settingsByEnvironmentId:{},refreshEnvironment:function(e){var k=b.environmentsById[e];return _.isUndefined(k)?(k=c.localize("no_such_environment",{environmentId:e}),amzn.beanstalk.utils.getErrorPromise(d,{message:k})):a.describeSettings({applicationName:k.applicationName,environmentName:k.environmentName}).then(function(a){a=
a[0];delete a.dateUpdated;var b=g.settingsByEnvironmentId[e];g.settingsByEnvironmentId[e]=amzn.beanstalk.utils.deepClone(a);b&&!_.isEqual(a,b)&&f.$broadcast(amzn.beanstalk.constants.CONFIGURATION_SETTINGS_CHANGED,e,a,b);return a})},injectConfigurationSettings:function(a,b,c){c=c||"configurationSettings";_.has(g.settingsByEnvironmentId,a)?b[c]=amzn.beanstalk.utils.deepClone(g.settingsByEnvironmentId[a]):g.refreshEnvironment(a).then(function(a){b[c]=a},function(b){e.error("Could not inject configuration settings into environment: "+
a+": "+b.message)});b.$on(amzn.beanstalk.constants.CONFIGURATION_SETTINGS_CHANGED,function(d,e,f){a===e&&(b[c]=f)})}};f.$on(amzn.beanstalk.constants.ENVIRONMENT_CHANGED,function(a,b,c){g.settingsByEnvironmentId[b.environmentId]&&g.refreshEnvironment(b.environmentId)});return g}])})();(function(){amzn.beanstalk.models.Duration={};amzn.beanstalk.models.factory("Duration",[function(){var a=/^PT((\d+)H)?((\d+)M)?((\d+)S)?$/;return function(){this.seconds=this.minutes=this.hours=0;this.setIso8601=function(b){b=b.match(a);if(!b)throw Error("Invalid duration format. This implementation only supports durations with hours, minutes and seconds. Days, months and years are not supported.");this.hours=b[2]?parseInt(b[2],10):0;this.minutes=b[4]?parseInt(b[4],10):0;this.seconds=b[6]?parseInt(b[6],
10):0};this.getIso8601=function(){var a="PT";this.hours&&(a+=this.hours+"H");this.minutes&&(a+=this.minutes+"M");this.seconds&&(a+=this.seconds+"S");return"PT"===a?null:a};this.normalize=function(){60<this.seconds?(this.minutes+=Math.floor(this.seconds/60),this.seconds%=60):0>this.seconds&&(this.seconds=0);60<this.minutes?(this.hours+=Math.floor(this.minutes/60),this.minutes%=60):0>this.minutes&&(this.minutes=0);0>this.hours&&(this.hours=0)};this.isLessThan=function(a){if(!a)throw Error("A duration to compare to is required.");
return this.hours>a.hours?!1:this.hours<a.hours?!0:this.minutes>a.minutes?!1:this.minutes<a.minutes?!0:this.seconds>a.seconds?!1:!0}}}])})();(function(){amzn.beanstalk.models.Events={};amzn.beanstalk.models.factory("Events",["EventsService","$q","$log",function(a,b,c){function d(a){e.eventsStatusByEnvironmentId[a]="ready"}var e={eventsByEnvironmentId:{},eventsStatusByEnvironmentId:{},getLoadingStatus:function(a){return e.eventsStatusByEnvironmentId[a]},refreshEnvironment:function(f,g,h,k,l){var n=b.defer(),p=moment.utc().subtract(90,"second");e.eventsStatusByEnvironmentId[f]="refreshing";a.describeEventsForEnvironment(f,g,h,k,l).then(function(a){e.eventsByEnvironmentId[f]=
{events:a.events,nextToken:a.nextToken};k>p&&(e.eventsByEnvironmentId[f].lastUpdateTime=p);n.resolve(a);d(f)},function(a){c.error("Could not retrieve events for environment: "+f+" Error: "+a);n.reject(a);d(f)});return n.promise},loadMoreEvents:function(f,g,h,k,l){var n=b.defer(),p=e.eventsByEnvironmentId[f].nextToken;e.eventsStatusByEnvironmentId[f]="loadingMore";a.describeNextEventsForEnvironment(f,p,g,h,k,l).then(function(a){e.eventsByEnvironmentId[f].events=e.eventsByEnvironmentId[f].events.concat(a.events);
e.eventsByEnvironmentId[f].nextToken=a.nextToken;n.resolve(a);d(f)},function(a){c.error("Failed to retrieve nextToken for environment: "+f+" and nextToken: "+p+" Error: "+a);d(f)});return n.promise},loadLatestEvents:function(f,g){var h=b.defer(),k=moment.utc().subtract(90,"seconds");e.eventsStatusByEnvironmentId[f]="loadingLatest";a.describeLatestEventsForEnvironment(f,e.eventsByEnvironmentId[f].lastUpdateTime,g).then(function(a){e.eventsByEnvironmentId[f].events=_.uniq(a.events.concat(e.eventsByEnvironmentId[f].events),
function(a){return a.eventDate+"|"+a.message});e.eventsByEnvironmentId[f].lastUpdateTime=k;h.resolve(a);d(f)},function(a){c.error("Failed to load the latest events: "+f+" and startTime: "+e.eventsByEnvironmentId[f].lastUpdateTime+" Error: "+a);d(f)});return h.promise}};return e}])})();(function(){amzn.beanstalk.models.Externals={};amzn.beanstalk.models.factory("Externals",["ExternalsService","$q","$log",function(a,b,c){var d={constants:a.constants,errors:[],values:{}},e={};d.refresh=function(f){var g=e[f];if(!g){var h=b.defer(),g=e[f]=h.promise;a.listOptions(f).then(function(a){d.values[f]=a;delete e[f];h.resolve(d.values[f])},function(a){delete e[f];var b=a;_.isObject(a)&&(b=_.has(a,"message")?a.message:JSON.stringify(a));c.error("Could not retrieve external options for "+f+": "+
b);h.reject(a)})}return g};d.get=function(a){var c=d.values[a];return c?b.when(c):d.refresh(a)};d.createDefaultRole=function(){var c=b.defer();a.updateDefaultServiceRole().then(function(a){c.resolve(a)},function(a){c.reject(a)});return c.promise};d.createSnsTopic=function(c,e){var h=b.defer();a.createSnsTopic(c,e).then(function(b){d.values[a.constants.SNS_TOPICS].push(b);h.resolve(b)},function(a){h.reject(a)});return h.promise};d.getSelectSuccessCallback=function(a,b){return function(c){a[b]={options:c,
state:"ready"}}};d.getSelectFailCallback=function(a,b){return function(c){a[b]={errorMessage:c.message,state:"error"}}};d.selectLoading=function(a,b){a[b]={state:"loading"}};d.lookupForSelect=function(a,c,e,k,l){var n={},p=n.success=e||d.getSelectSuccessCallback(a,c),q=n.fail=k||d.getSelectFailCallback(a,c),r=n.loading=function(){d.selectLoading(a,c)};e=d.values[c];!l&&e?(p(e),n.promise=amzn.beanstalk.utils.getSuccessfulPromise(b,e)):(n.promise=d.refresh(c),r(a,c),n.promise.then(p,q));n.refresh=function(){r();
n.promise=d.refresh(c);n.promise.then(p,q);return n.promise};return n};return d}])})();(function(){amzn.beanstalk.models.Health={};amzn.beanstalk.models.factory("Health",["EnvironmentsService","$q","$log","$timeout",function(a,b,c,d){var e={instancesHealthByEnvironmentId:{},environmentHealthByEnvironmentId:{},loadingStatusByEnvironmentId:{}},f={Ok:0,Info:1,Pending:2,Unavailable:3,Unknown:4,"No Data":5,Warning:6,Degraded:7,Severe:8},g=function(a){return 100<=a?a.toFixed(0):a.toFixed(1)},h=function(a){return _.escape(a).replace(/([\n]+\.)$/,"").replace(/\n/g,"<br />")},k=function(a,b){var c=
e.instancesHealthByEnvironmentId[a].original;b.filterBy&&"total"!==b.filterBy.key&&(c=b.filterBy.showWorse?_.filter(c,function(a){return f[a.healthStatus]>=f[b.filterBy.value]}):_.filter(c,function(a){return f[a.healthStatus]===f[b.filterBy.value]}));e.instancesHealthByEnvironmentId[a].list=c},l=function(a){var b=a.sortReverse,c=function(b){return b[a.sortKey+"Val"]||b[a.sortKey]};"healthStatus"===a.sortKey?c=function(b){return f[b[a.sortKey]]}:"launchedAt"===a.sortKey&&(b=!b);return function(a,d){var e=
c(a),f=c(d);return e<f||"-"===e?b?1:-1:e>f||"-"===f?b?-1:1:0}};e.loadEnvironmentHealthData=function(c,d){var f=b.defer();d||!e.environmentHealthByEnvironmentId[c]?a.describeEnvironmentHealth(c,{attributeNames:"All"}).then(function(a){var b={};b.causes=_.map(a.causes,h);b.color=a.color;b.environmentName=a.instanceId;b.healthStatus=a.healthStatus;b.refreshedAt=a.refreshedAt;b.status=a.status;b.instancesCount=a.instancesHealth||{degraded:0,info:0,noData:0,ok:0,pending:0,severe:0,unknown:0,warning:0};
b.instancesCount.total=b.instancesCount.degraded+b.instancesCount.info+b.instancesCount.noData+b.instancesCount.ok+b.instancesCount.pending+b.instancesCount.severe+b.instancesCount.unknown+b.instancesCount.warning;a.applicationMetrics=a.applicationMetrics||{};b.requests=a.applicationMetrics.requestCount?(a.applicationMetrics.requestCount/(a.applicationMetrics.duration||10)).toFixed(1):"-";a.applicationMetrics.latency?(b.latency={},_.each(a.applicationMetrics.latency,function(a,c){b.latency[c]=a.toFixed(3)})):
b.latency={p10:"-",p50:"-",p75:"-",p85:"-",p90:"-",p95:"-",p99:"-",p999:"-"};b.statusCodesVal={};b.statusCodesTxt={status2xx:"-",status3xx:"-",status4xx:"-",status5xx:"-"};_.each(a.applicationMetrics.statusCodes,function(c,d){b.statusCodesVal[d]=g(100*(c/a.applicationMetrics.requestCount));b.statusCodesTxt[d]=b.statusCodesVal[d]+"%"});e.environmentHealthByEnvironmentId[c]=b;f.resolve(b)},function(a){f.reject(a)}):f.resolve(e.environmentHealthByEnvironmentId[c]);return f.promise};e.loadInstancesHealthData=
function(c,f,q){var r=b.defer();q=q||{};f||!e.instancesHealthByEnvironmentId[c]?a.describeInstancesHealth(c,{attributeNames:"All"}).then(function(a){var b={original:[]};_.each(a.instanceHealthList,function(a){var c={};c.instanceId=a.instanceId;c.color=a.color;c.causes=_.map(a.causes,h);c.instanceType=a.instanceType;c.availabilityZone=a.availabilityZone;a.system=a.system||{};a.system.loadAverage?(c.load1Val=a.system.loadAverage[0],c.load5Val=a.system.loadAverage[1],c.load1=c.load1Val.toFixed(2),c.load5=
c.load5Val.toFixed(2)):(c.load1="-",c.load5="-");a.system.cpuutilization?(c.cpuIdleVal=a.system.cpuutilization.idle,c.cpuSystemVal=a.system.cpuutilization.system,c.cpuUserVal=a.system.cpuutilization.user,c.cpuSoftIRQVal=a.system.cpuutilization.softIRQ,c.cpuNiceVal=a.system.cpuutilization.nice,c.cpuIowaitVal=a.system.cpuutilization.iowait,c.cpuIrqVal=a.system.cpuutilization.irq,c.cpuIdle=g(c.cpuIdleVal),c.cpuSystem=g(c.cpuSystemVal),c.cpuUser=g(c.cpuUserVal),c.cpuSoftIRQ=g(c.cpuSoftIRQVal),c.cpuNice=
g(c.cpuNiceVal),c.cpuIowait=g(c.cpuIowaitVal),c.cpuIrq=g(c.cpuIrqVal)):(c.cpuIdle="-",c.cpuSystem="-",c.cpuUser="-",c.cpuSoftIRQ="-",c.cpuNice="-",c.cpuIowait="-",c.cpuIrq="-");c.healthStatus=a.healthStatus;c.launchedAt=a.launchedAt;a.applicationMetrics=a.applicationMetrics||{};a.applicationMetrics.requestCount?(c.requestsVal=a.applicationMetrics.requestCount/(a.applicationMetrics.duration||10),c.requests=c.requestsVal.toFixed(1)):c.requests="-";a.applicationMetrics.latency?(c.latencyP10Val=a.applicationMetrics.latency.p10,
c.latencyP50Val=a.applicationMetrics.latency.p50,c.latencyP75Val=a.applicationMetrics.latency.p75,c.latencyP85Val=a.applicationMetrics.latency.p85,c.latencyP90Val=a.applicationMetrics.latency.p90,c.latencyP95Val=a.applicationMetrics.latency.p95,c.latencyP99Val=a.applicationMetrics.latency.p99,c.latencyP999Val=a.applicationMetrics.latency.p999,c.latencyP10=c.latencyP10Val.toFixed(3),c.latencyP50=c.latencyP50Val.toFixed(3),c.latencyP75=c.latencyP75Val.toFixed(3),c.latencyP85=c.latencyP85Val.toFixed(3),
c.latencyP90=c.latencyP90Val.toFixed(3),c.latencyP95=c.latencyP95Val.toFixed(3),c.latencyP99=c.latencyP99Val.toFixed(3),c.latencyP999=c.latencyP999Val.toFixed(3)):(c.latencyP10="-",c.latencyP50="-",c.latencyP75="-",c.latencyP85="-",c.latencyP90="-",c.latencyP95="-",c.latencyP99="-",c.latencyP999="-");a.applicationMetrics.statusCodes?(c.statusCode2xx=a.applicationMetrics.statusCodes.status2xx,c.statusCode3xx=a.applicationMetrics.statusCodes.status3xx,c.statusCode4xx=a.applicationMetrics.statusCodes.status4xx,
c.statusCode5xx=a.applicationMetrics.statusCodes.status5xx):(c.statusCode2xx="-",c.statusCode3xx="-",c.statusCode4xx="-",c.statusCode5xx="-");a.deployment&&a.deployment.deploymentId?(c.deploymentId=a.deployment.deploymentId,c.deploymentStatus=a.deployment.status,c.deploymentTime=a.deployment.deploymentTime,c.versionLabel=a.deployment.versionLabel,c.hasDeployment=!0):(c.deploymentId="-",c.hasDeployment=!1);b.original.push(c)});b.refreshedAt=a.refreshedAt;e.instancesHealthByEnvironmentId[c]=b;k(c,q);
q.sortKey&&e.instancesHealthByEnvironmentId[c].list.sort(l(q));r.resolve(b)},function(a){r.reject(a)}):d(function(){k(c,q);q.sortKey&&e.instancesHealthByEnvironmentId[c].list.sort(l(q));r.resolve(e.instancesHealthByEnvironmentId[c])},0);return r.promise};return e}])})();(function(){amzn.beanstalk.models.factory("HealthReporting",function(){var a=[{id:amzn.beanstalk.constants.ENHANCED,name:"health_reporting_enhanced"},{id:amzn.beanstalk.constants.BASIC,name:"health_reporting_basic"}],b=function(b){b&&b.SystemType&&(this.options=b,this.systemType={list:a,original:b.SystemType.value,value:b.SystemType.value})};b.prototype.deserializeConfigDocument=function(){if(this.isEnabled()){var a=angular.fromJson(this.options.ConfigDocument.option.defaultValue),b=angular.fromJson(this.options.ConfigDocument.value);
if(!a||!a.CloudWatchMetrics)throw Error("Cannot load health reporting metrics from configuration.");this.metrics={all:{environment:_.keys(a.CloudWatchMetrics.Environment),instance:_.keys(a.CloudWatchMetrics.Instance)},data:a,selected:{environment:[],instance:[]}};b.CloudWatchMetrics&&(this.metrics.selected.environment=_.reduce(b.CloudWatchMetrics.Environment,function(a,b,c){60===b&&a.push(c);return a},[]),this.metrics.selected.instance=_.reduce(b.CloudWatchMetrics.Instance,function(a,b,c){60===b&&
a.push(c);return a},[]));this.metrics.original=_.clone(this.metrics.selected)}};b.prototype.serializeConfigDocument=function(){var a=this.metrics.data;if(a)return _.each(a.CloudWatchMetrics.Environment,function(a,b,c){c[b]=_.contains(this.metrics.selected.environment,b)?60:null},this),_.each(a.CloudWatchMetrics.Instance,function(a,b,c){c[b]=_.contains(this.metrics.selected.instance,b)?60:null},this),angular.toJson(a)};b.prototype.isBasic=function(){return!!this.systemType&&this.systemType.value===
amzn.beanstalk.constants.BASIC};b.prototype.isDirty=function(){return!!this.metrics&&(!_.isEqual(this.metrics.selected,this.metrics.original)||!_.isEqual(this.systemType.value,this.systemType.original))};b.prototype.isEnabled=function(){return!!this.systemType};return b})})();(function(){amzn.beanstalk.models.factory("Log",["LocalizationService",function(a){return function(b){this.ec2InstanceId=b.ec2InstanceId;this.infoType=a.localize("bundle"===b.infoType?"bundle_logs":"tail_logs");this.sampleTimestamp=b.sampleTimestamp;this.message=b.message}}])})();(function(){amzn.beanstalk.models.ManagedUpdatesHistoryItem={};amzn.beanstalk.models.factory("ManagedUpdatesHistoryItem",[function(){var a=function(a){a=a||{};this.actionDescription=a.actionDescription||"";this.actionId=a.actionId||"";this.completedTime=a.finishedTime||"";this.executedTime=a.executedTime||"";this.failureDescription=a.failureDescription||"";this.failureType=a.failureType||"";this.result=a.status||""};a.prototype.isStatusCompleted=function(){return"completed"===this.result};return a}])})();(function(){amzn.beanstalk.models.factory("ManagedUpdates",["$q","EnvironmentsService","ManagedUpdatesHistoryCollection","ManagedUpdatesPendingItem",function(a,b,c,d){var e=function(){this.collection=new c;this.pendingUpdate=null};e.prototype.hasMoreHistory=function(){return _.isString(this.collection.nextToken)};e.prototype.loadMoreHistory=function(c){var d=a.defer();this.hasMoreHistory()?b.describeManagedActionHistory(c,{nextToken:this.collection.nextToken}).then(_.bind(function(a){this.collection.deserialize(a.managedActionHistoryItems);
this.collection.nextToken=a.nextToken;d.resolve(a)},this)):d.resolve();return d.promise};e.prototype.refreshHistory=function(a){this.collection=new c;return b.describeManagedActionHistory(a).then(_.bind(function(a){this.collection.deserialize(a.managedActionHistoryItems);this.collection.nextToken=a.nextToken},this))};e.prototype.refreshPendingUpdate=function(a,c){return b.describeManagedActions(a,{status:c}).then(_.bind(function(a){this.pendingUpdate=null;_.isBlank(a)||(this.pendingUpdate=new d(a[0]))},
this))};return e}])})();(function(){amzn.beanstalk.models.factory("ManagedUpdatesPendingItem",[function(){return function(a){a=a||{};this.actionDescription=a.actionDescription||"";this.actionId=a.actionId||"";this.actionType=a.actionType||"";this.status=a.status||"";this.window=a.windowStartTime||""}}])})();(function(){amzn.beanstalk.models.factory("ElasticBeanstalkServiceRole",["StringParameter",function(a){var b=function(c){if(!(this instanceof b))return new b(c);this.value=this.roles=null;this.autofill(c);a.call(this,this.value,{loc:"service_role",maxLength:150,minLength:0,pattern:"^arn:aws.*:iam::\\d+:role/[\\w+=,.@-]+$",required:!0})};b.prototype=Object.create(a.prototype);b.prototype.constructor=b;b.prototype.appendRoles=function(a){_.isNull(this.roles)?this.roles=a:this.roles=_.uniq(_.union(a,
this.roles),!1,function(a){return a.name})};b.prototype.autofill=function(a){if(/^arn:aws.*:iam::\d+:role\/[\w+=,.@-]+$/.test(a)){var b=a.lastIndexOf("/"),b=0<b?a.substr(b+1):a;a={arn:a,name:b};this.appendRoles([a]);this.set(a.arn)}};b.prototype.getDefaultRole=function(){var a=_.findWhere(this.roles,{name:amzn.beanstalk.constants.DEFAULT_SERVICE_ROLE});return a=_.isUndefined(a)?_.first(this.roles):a};b.prototype.set=function(a){/^arn:aws.*:iam::\d+:role\/[\w+=,.@-]+$/.test(a)&&(this.value=a)};return b}])})();(function(){amzn.beanstalk.models.factory("MaxAgeRule",["NumericParameter",function(a){var b=function(c){if(!(this instanceof b))return new b(c);c=_.defaults(c||{},{loc:"max_age",max:2E3,min:1,required:!0});_.extend(this,c);a.call(this,c.maxAgeInDays,c)};b.prototype=Object.create(a.prototype);b.prototype.constructor=b;b.prototype.serialize=function(){return{deleteSourceFromS3:this.deleteSourceFromS3,enabled:this.enabled,maxAgeInDays:this.value}};return b}])})();(function(){amzn.beanstalk.models.factory("MaxCountRule",["NumericParameter",function(a){var b=function(c){if(!(this instanceof b))return new b(c);c=_.defaults(c||{},{loc:"max_count",max:1E3,min:1,required:!0});_.extend(this,c);a.call(this,c.maxCount,c)};b.prototype=Object.create(a.prototype);b.prototype.constructor=b;b.prototype.serialize=function(){return{deleteSourceFromS3:this.deleteSourceFromS3,enabled:this.enabled,maxCount:this.value}};return b}])})();(function(){amzn.beanstalk.models.factory("Parameter",["LocalizationService","ValidationErrors",function(a,b){var c=function(d,e){if(!(this instanceof c))return new c(d,e);var f=new b;e=_.defaults(e||{},{loc:"parameter",required:!1});this.errors=f;this.name=a.localize(e.loc);this.required=e.required;this.value=_.isDefined(d)?d:null};c.prototype.errorMessages=function(){return this.errors.fullMessages(this)};c.prototype.isValid=function(){return this.errors.isEmpty()};c.prototype.serialize=function(){return _.isDefined(this.value)?
this.value:null};c.prototype.validate=function(){this.errors.set("parameter_required",(!_.isDefined(this.value)||_.isNaN(this.value))&&this.required);return this.isValid()};return c}]);amzn.beanstalk.models.factory("NumericParameter",["Parameter",function(a){var b=function(c,d){if(!(this instanceof b))return new b(c,d);d=_.defaults(d||{},{loc:"numeric_parameter",max:100,min:0});this.max=d.max;this.min=d.min;a.call(this,c,d)};b.prototype=Object.create(a.prototype);b.prototype.constructor=b;b.prototype.serialize=
function(){return _.isBlank(this.value)?null:this.value};b.prototype.validate=function(b){this.errors.set("parameter_max_min_range",_.isNumber(this.value)&&(this.value<this.min||this.value>this.max));return a.prototype.validate.call(this,b)};return b}]);amzn.beanstalk.models.factory("StringParameter",["Parameter",function(a){var b=function(c,d){if(!(this instanceof b))return new b(c,d);d=_.defaults(d||{},{loc:"string_parameter",maxLength:100,minLength:0,pattern:RegExp()});this.autofilled=_.isDefined(c)?
c:null;this.maxLength=d.maxLength;this.minLength=d.minLength;this.pattern=RegExp(d.pattern);a.call(this,c,d)};b.prototype=Object.create(a.prototype);b.prototype.constructor=b;b.prototype.autofill=function(a){if(this.isAutofilled()||_.isBlank(this.value))this.value=this.autofilled=a,this.errors.reset()};b.prototype.isAutofilled=function(){return _.isDefined(this.autofilled)&&_.isEqual(this.autofilled,this.value)};b.prototype.serialize=function(){return _.isBlank(this.value)?null:this.value};b.prototype.validate=
function(b){_.isBlank(this.value)&&!this.required&&(this.value=null);this.errors.set("parameter_cant_be_blank",_.isDefined(this.value)&&1===this.minLength&&1>this.value.length);this.errors.set("parameter_maxlength",_.isDefined(this.value)&&this.value.length>this.maxLength);this.errors.set("parameter_minlength",_.isDefined(this.value)&&1<this.minLength&&this.value.length<this.minLength);this.errors.set("parameter_pattern",_.isDefined(this.value)&&!this.pattern.test(this.value));return a.prototype.validate.call(this,
b)};return b}]);amzn.beanstalk.models.factory("Description",["StringParameter",function(a){var b=function(c,d){if(!(this instanceof b))return new b(c,d);d=_.defaults(d||{},{loc:"description",maxLength:200,minLength:0,required:!1});a.call(this,c,d)};b.prototype=Object.create(a.prototype);return b.prototype.constructor=b}])})();(function(){amzn.beanstalk.models.service("PlatformFilter",[function(){return function(a,b,c){this.operators=b||["="];this.operator=_.first(this.operators);this.options=c||[];this.value=null;this.included=function(){return!_.isNull(this.value)};this.serialize=function(){return{type:a,operator:this.operator,values:[this.value]}};this.set=function(a){if(_.isEmpty(this.options)||_.include(this.options,a))this.value=a}}}]);amzn.beanstalk.models.service("PlatformFilters",["PlatformFilter",function(a){return function(){this.platformName=
new a("platformName",["contains","="]);this.platformOwner=new a("platformOwner",["=","!="],["AWSElasticBeanstalk","self"]);this.platformStatus=new a("platformStatus",["=","<",">"],"Creating Deleted Deleting Failed Ready Updating".split(" "));this.platformVersion=new a("platformVersion",["=",">",">=","<=","<"]);this.supportedAddon=new a("supportedAddon",["="]);this.supportedTier=new a("supportedTier",["="]);this.serialize=function(){return _.reduce([this.platformName,this.platformOwner,this.platformStatus,
this.platformVersion,this.supportedAddon,this.supportedTier],function(a,c){c.included()&&a.push(c.serialize());return a},[])}}}])})();(function(){amzn.beanstalk.models.factory("Tag",["ValidationErrors",function(a){return function(b,c){var d=RegExp(/^[\w\s.:\/=\+\-@]*$/);this.errors=new a;this.key=b||"";this.value=c||"";this.clear=function(){this.value=this.key=""};this.isBlank=function(){return _.isBlank(this.key)&&_.isBlank(this.value)};this.isUnique=function(){return!this.errors.has("tag_key_must_be_unique")};this.validate=function(){this.errors.set("tag_key_maxlength",128<this.key.length);this.errors.set("tag_key_pattern",!d.test(this.key));
this.errors.set("tag_key_required",_.isBlank(this.key));this.errors.set("tag_key_reserved_key","Name"===this.key);this.errors.set("tag_key_reserved_prefix",/^(?:aws:|elasticbeanstalk:).*/.test(this.key));this.errors.set("tag_value_maxlength",256<this.value.length);this.errors.set("tag_value_pattern",!d.test(this.value));return this.errors.isEmpty()}}}])})();(function(){amzn.beanstalk.models.provider("Platform",function(){var a=/^(?:[^:]*:){5}[^:]*$/,b=/^(?:[^\/]*\/){2}[^\/]*$/,c=function(c){if(!a.test(c))return{platformName:null,platformOwner:null,platformVersion:null};var d=c.split(":"),g=d.pop();c=d.pop();d.pop();d.pop();d.pop();if(!b.test(g))throw Error("Invalid platform ARN format.");d=g.split("/");g=d.pop();return{platformName:d.pop(),platformOwner:_.isBlank(c)?"AWSElasticBeanstalk":c,platformVersion:g}},d=function(a){a=a||{};if(_.isString(a))return new d({platformArn:a});
if(!(this instanceof d))return new d(a);this.platformVersion=this.platformOwner=this.platformName=null;_.extend(this,c(a.platformArn),a)};d.prototype.hasOperatingSystem=function(){return _.isDefined(this.operatingSystemName)||_.isDefined(this.operatingSystemVersion)};d.prototype.isBeanstalkPlatform=function(){return"AWSElasticBeanstalk"===this.platformOwner};d.prototype.isBuilderPlatform=function(){return this.isBeanstalkPlatform()&&"Elastic Beanstalk Packer Builder"===this.platformName};d.prototype.isCustomPlatform=
function(){return"AWSElasticBeanstalk"!==this.platformOwner&&!_.isBlank(this.platformOwner)};d.prototype.supportsTiers=function(){return!_.isEmpty(this.supportedTierList)};d.prototype.toString=function(a){return this.platformName+(a||"/")+this.platformVersion};this.$get=[function(){return d}]})})();(function(){amzn.beanstalk.models.service("Platforms",["$q","PlatformFilters","PlatformsService","PlatformVersionsCollection",function(a,b,c,d){var e={custom:null,fetch:function(e){var g=a.defer(),h=[];e=e||new b;e.platformStatus.set("Ready");var k=function(a){h=_.concat(h,a.platformSummaryList);a.nextToken?c.listPlatformVersions(e.serialize(),a.nextToken).then(k):g.resolve(new d(h))};c.listPlatformVersions(e.serialize()).then(k,function(a){"InvalidParameterCombination"===a.code&&g.resolve([])});
return g.promise},fetchCustomPlatforms:function(){if(e.custom instanceof d)return a.when(e.custom);var c=new b;c.platformOwner.set("self");return this.fetch(c).then(function(a){return e.custom=a})}};return e}])})();(function(){amzn.beanstalk.models.factory("UpdateApplicationResourceLifecycle",["$q","ApplicationsService","ResourceLifecycleConfig",function(a,b,c){var d=function(a){if(!(this instanceof d))return new d(a);this.applicationName=a.applicationName;this.resourceLifecycleConfig=new c(a.resourceLifecycleConfig)};d.prototype.exec=function(){return!this.validate()?a.reject({code:"ValidationError",message:this.getErrorMessages().join("\n")}):b.updateApplicationResourceLifecycle(this.serialize())};d.prototype.getErrorMessages=
function(){return _.reduce(this,function(a,b){_.isObject(b)&&_.has(b,"errors")&&(a=a.concat(b.errors.fullMessages(b)));return a},[],this)};d.prototype.serialize=function(){return{applicationName:this.applicationName,resourceLifecycleConfig:this.resourceLifecycleConfig.serialize()}};d.prototype.validate=function(){return _.reduce(this,function(a,b){_.isObject(b)&&_.isFunction(b.validate)&&(a=b.validate(this)&&a);return a},!0,this)};return d}])})();(function(){amzn.beanstalk.models.factory("ResourceLifecycleConfig",["ElasticBeanstalkServiceRole","VersionLifecycleConfig",function(a,b){var c=function(d){d=d||{};if(!(this instanceof c))return new c(d);_.extend(this,d,{versionLifecycleConfig:new b(d.versionLifecycleConfig),serviceRole:new a(d.serviceRole)});c.prototype.serialize=function(){return{versionLifecycleConfig:this.versionLifecycleConfig.serialize(),serviceRole:this.serviceRole.serialize()}};c.prototype.validate=function(){return _.reduce(this,
function(a,b){_.isObject(b)&&_.isFunction(b.validate)&&(a=b.validate(this)&&a);return a},!0,this)}};return c}])})();(function(){amzn.beanstalk.models.factory("Resource",["ExternalLocations",function(a){var b=function(a){a=a||{};if(!(this instanceof b))return new b(a);this.physicalResourceId=this.logicalResourceId=null;_.extend(this,a)};b.prototype.getEndpoint=function(){var b=this.getParsedResourceType(),d=_.isString(b.service)?a[b.service.toLowerCase()]:null,b="get"+b.resource+"Endpoint";return _.isDefined(d)&&_.isFunction(d[b])?d[b](this):null};b.prototype.getParsedResourceType=function(){var a=this.type.split("::");
return{service:a[1],resource:a[2]}};return b}])})();(function(){amzn.beanstalk.models.Resources={};amzn.beanstalk.models.factory("Resources",["$log","$q","$rootScope","EnvironmentsService","Resource",function(a,b,c,d,e){var f={resourcesByEnvironmentId:{}},g={},h=function(a){a.resources=_.map(a.resources,function(a){return new e(a)})};f.find=function(a,b){return!_.has(f.resourcesByEnvironmentId,a)?null:_.find(f.resourcesByEnvironmentId[a].resources,b)};f.findByLogicalId=function(a,b){return f.find(a,function(a){return a.logicalResourceId===b})};f.filter=
function(a,b){return!_.has(f.resourcesByEnvironmentId,a)?[]:_.filter(f.resourcesByEnvironmentId[a].resources,b)};f.getOrFetchResourcesForEnvironment=function(a){return _.has(f.resourcesByEnvironmentId,a)?b.when(f.resourcesByEnvironmentId[a]):f.refreshEnvironment(a)};f.injectResources=function(b,c,d){d=d||"resources";_.has(f.resourcesByEnvironmentId,b)?c[d]=f.resourcesByEnvironmentId[b]:f.refreshEnvironment(b).then(function(a){c[d]=a},function(c){a.error("Could not inject resources into environment: "+
b+": "+c.message)});c.$on(amzn.beanstalk.constants.RESOURCES_CHANGED,function(a,e,f){b===e&&(c[d]=f)})};f.refreshEnvironment=function(e){var l=g[e];if(!l){var n=b.defer();d.describeResources(e).then(function(a){_.isEmpty(a.resources)&&!_.isEmpty(a.loadBalancers)&&(a.resources=[{logicalResourceId:"AWSEBLoadBalancer",physicalResourceId:a.loadBalancers[0].name,type:"AWS::ElasticLoadBalancing::LoadBalancer"},{logicalResourceId:"AWSEBAutoScalingGroup",physicalResourceId:a.autoScalingGroups[0].name,type:"AWS::AutoScaling::AutoScalingGroup"}]);
null===a.resources&&(a.resources=[]);a.resources.push({logicalResourceId:a.environmentName,physicalResourceId:e,type:"AWS::ElasticBeanstalk::Environment"});h(a);var b=f.resourcesByEnvironmentId[e];f.resourcesByEnvironmentId[e]=a;b&&!_.isEqual(a,b)&&c.$broadcast(amzn.beanstalk.constants.RESOURCES_CHANGED,e,a,b);n.resolve(a)},function(b){a.error("Could not retrieve resources for environment: "+e+" Error: "+b);n.reject(b)})["finally"](function(){delete g[e]});l=g[e]=n.promise}return l};c.$on(amzn.beanstalk.constants.ENVIRONMENT_CHANGED,
function(a,b,c){f.resourcesByEnvironmentId[b.environmentId]&&(!amzn.beanstalk.utils.isEnvironmentUpdating(b)&&amzn.beanstalk.utils.isEnvironmentUpdating(c)&&"Terminated"!==b.status)&&f.refreshEnvironment(b.environmentId)});return f}])})();(function(){amzn.beanstalk.models.SavedConfigurations={};amzn.beanstalk.models.factory("SavedConfigurations",["ApplicationsService","$q","$rootScope",function(a,b,c){var d={byApplication:{},getSettings:function(c,f){return a.describeSettings({applicationName:c,templateName:f,options:[]}).then(function(a){a=a[0];d.byApplication[c]=d.byApplication[c]||{};return d.byApplication[c][f]=a},b.reject)},createSavedConfiguration:function(e){return a.createConfigurationTemplate(e).then(function(a){_.has(d.byApplication,
e.applicationName)||(d.byApplication[e.applicationName]={});d.byApplication[e.applicationName][e.templateName]=a;c.$broadcast(amzn.beanstalk.constants.CONFIGURATION_CREATED,a);return a},b.reject)}};c.$on(amzn.beanstalk.constants.CONFIGURATION_DELETED,function(a,b){_.has(d.byApplication,b.applicationName)&&(d.byApplication[b.applicationName]=_.pick(d.byApplication[b.applicationName],b.configurationTemplates))});return d}])})();(function(){amzn.beanstalk.models.factory("ScheduledAction",["ValidationErrors",function(a){var b=amzn.beanstalk.constants.ASG_CAPACITY_LIMIT,c={desiredCapacity:{type:"number"},endTime:{type:"date"},maxSize:{type:"number"},minSize:{type:"number"},recurrence:{type:"cron"},startTime:{type:"date"},suspend:{type:"boolean"}},d=function(b){if(!(this instanceof d))return new d(b);this.desiredCapacity=null;this.dirty=!1;this.endTime=null;this.errors=new a;this.minSize=this.maxSize=null;this.name=b;this.recurrence=
null;this.remove=!1;this.suspend=this.startTime=null};d.prototype.deserialize=function(a){var b=_.decapitalize(a.optionName);if(_.has(c,b)){var d=c[b];"number"===d.type&&!_.isNull(a.value)?this[b]=parseInt(a.value,10):this[b]="boolean"===d.type?"true"===a.value:a.value}};d.prototype.getNextOccurrence=function(){var a=moment.utc(this.endTime,"YYYY-MM-DD[T]HH:mm:ss[Z]"),b=moment.utc(this.startTime,"YYYY-MM-DD[T]HH:mm:ss[Z]"),c;if(_.isNull(this.recurrence))return!b.isValid()?null:b.isAfter(new Date)?
b.toDate():null;c=later.schedule(later.parse.cron(this.recurrence));b=b.isValid()&&b.isAfter(new Date)?b.toDate():new Date;if(_.isNull(this.endTime))a=c.next(1,b);else if(a.isValid()&&a.isAfter(new Date))a=c.next(1,b,a.toDate());else return null;return _.isDate(a)?a:null};d.prototype.getOptionSettings=function(){return!this.dirty||this.remove||_.isBlank(this.name)?[]:_.reduce(c,function(a,b,c){!_.isNull(this[c])&&!_.isNaN(this[c])&&a.push({namespace:"aws:autoscaling:scheduledaction",resourceName:this.name,
optionName:_.capitalize(c),value:this[c].toString()});return a},[],this)};d.prototype.getOptionsToRemove=function(){return _.isBlank(this.name)?[]:this.remove?_.map(c,function(a,b){return{namespace:"aws:autoscaling:scheduledaction",resourceName:this.name,optionName:_.capitalize(b)}},this):_.reduce(c,function(a,b,c){(_.isNull(this[c])||_.isNaN(this[c]))&&a.push({namespace:"aws:autoscaling:scheduledaction",resourceName:this.name,optionName:_.capitalize(c)});return a},[],this)};d.prototype.set=function(a,
b){var d={};_.isObject(a)?d=a:d[a]=b;_.each(d,function(a,b){_.has(c,b)&&(this[b]!==a&&(this.dirty=!0),this[b]=a)},this);return this};d.prototype.validate=function(a){a=!_.isUndefined(a)?a.getCapacityLimit():b;this.errors.set("scheduled_action_name_is_required",_.isBlank(this.name));this.errors.set("scheduled_action_name_maxlength",_.isDefined(this.name)&&255<this.name.length);this.errors.set("scheduled_action_name_alphanumeric",!/^[a-z0-9]*$/i.test(this.name));this.errors.set("scheduled_action_min_size_is_required",
!_.isDefined(this.minSize));this.errors.set("scheduled_action_min_size_maximum",_.isDefined(this.minSize)&&this.minSize>a);this.errors.set("scheduled_action_min_size_minimum",_.isDefined(this.minSize)&&0>this.minSize);this.errors.set("scheduled_action_max_size_is_required",!_.isDefined(this.maxSize));this.errors.set("scheduled_action_max_size_maximum",_.isDefined(this.maxSize)&&this.maxSize>a);this.errors.set("scheduled_action_max_size_minimum",_.isDefined(this.maxSize)&&0>this.maxSize);this.errors.set("scheduled_action_max_size_less_than_min_size",
_.isDefined(this.maxSize)&&_.isDefined(this.minSize)&&this.maxSize<this.minSize);this.errors.set("scheduled_action_desired_capacity_maximum",_.isDefined(this.desiredCapacity)&&this.desiredCapacity>a);this.errors.set("scheduled_action_desired_capacity_minimum",_.isDefined(this.desiredCapacity)&&0>this.desiredCapacity);this.errors.set("scheduled_action_desired_capacity_less_than_maxsize",_.isDefined(this.desiredCapacity)&&_.isDefined(this.maxSize)&&this.desiredCapacity>this.maxSize);this.errors.set("scheduled_action_desired_capacity_greater_than_minsize",
_.isDefined(this.desiredCapacity)&&_.isDefined(this.minSize)&&this.desiredCapacity<this.minSize);this.errors.set("scheduled_action_start_time_before_end_time",_.isDefined(this.recurrence)&&_.isDefined(this.startTime)&&_.isDefined(this.endTime)&&this.startTime>this.endTime);this.errors.set("scheduled_action_start_time_is_required",!_.isDefined(this.recurrence)&&_.isBlank(this.startTime));return this.errors.isEmpty()};return d}])})();(function(){amzn.beanstalk.models.factory("Tier",["LocalizationService",function(a){var b=amzn.beanstalk.constants.WEB_SERVER,c=amzn.beanstalk.constants.WORKER,d=function(e){e=e||{};if(!(this instanceof d))return new d(e);_.defaults(e,{name:null,type:null});this.name=e.name;this.type=e.type;this.isWebServer=function(){return this.name===b||_.isNull(this.name)};this.isWorker=function(){return this.name===c};this.localize=function(){var c=this.name||b;return a.localize(c,null,c)};this.toString=function(a){return this.name+
(a||"|")+this.type};this.serialize=function(){var a=_.pick(this,"name","type");return _.contains(a,null)?null:a}};return d}])})();(function(){amzn.beanstalk.models.factory("Tiers",["Tier",function(a){var b=new a({name:"WebServer",type:"Standard"});return{collection:[b,new a({name:"Worker",type:"SQS/HTTP"})],defaultTier:b,find:function(a){return _.find(this.collection,function(b){return b.name===a})}}}])})();(function(){amzn.beanstalk.environment.service("UpdateSolutionStackModal",["$q","LocalizationService",function(a,b){return{launchUpdate:function(a,b,e){var f=_.findWhere(b.optionSettings,{optionName:"EnvironmentType"}),g=_.findWhere(b.optionSettings,{optionName:"RollingUpdateEnabled"});this.environment=a;this.isLoadBalancedEnvironment=!!(f&&f.value===amzn.beanstalk.constants.service.environmentType.LOAD_BALANCED);this.isRollingUpdateEnabled=!!(g&&"true"===g.value.toLowerCase());this.solutionStacks=
e;this.serviceRoleOption=_.findWhere(b.optionSettings,{namespace:"aws:elasticbeanstalk:environment",optionName:"ServiceRole"});this.open=!0},open:!1}}]);amzn.beanstalk.environment.directive("updateSolutionStackModalDir",function(){return{controller:"UpdateSolutionStackModalController",restrict:"A",scope:{},templateUrl:"partials/environment/update-solution-stack-modal.html"}})})();(function(){amzn.beanstalk.environment.service("UploadModal",["$q","LocalizationService",function(a,b){return{launchUpload:function(a,d,e,f,g,h,k){var l=_.findWhere(h.optionSettings,{optionName:"EnvironmentType"});this.title=a||b.localize("default_confirm_title");this.confirmButtonText=d||b.localize("default_confirm_button_text");this.cancelButtonText=e||b.localize("default_cancel_button_text");this.application=f;this.environment=g;this.hasRollingDeployments=!!(l&&l.value===amzn.beanstalk.constants.service.environmentType.LOAD_BALANCED);
this.instances=k;this.isEnhancedHealth=!!_.findWhere(h.optionSettings,{optionName:"SystemType",value:amzn.beanstalk.constants.ENHANCED});this.isEnhancedPolicies=!1;this.open=!0;this.optionSettings=h.optionSettings},open:!1}}]);amzn.beanstalk.environment.directive("uploadModalDir",function(){return{controller:"UploadModalController",restrict:"A",templateUrl:"partials/environment/upload-modal.html"}})})();(function(){amzn.beanstalk.models.Util={};amzn.beanstalk.models.factory("Util",["$log","$q","LocalizationService","UtilService",function(a,b,c,d){var e={solutionStacks:null,solutionStackDetails:{}},f;e.refreshSolutionStacks=function(){_.isUndefined(f)&&(f=b.defer(),d.listSolutionStacks().then(function(a){e.solutionStacks=a.solutionStacks;e.solutionStackDetails=_.keyedOn(a.solutionStackDetails,"solutionStackName");f.resolve(a)},function(b){a.error(c.localize("could_not_retrieve_solution_stacks")+" "+
b);f.reject(b)}));return f.promise};return e}])})();(function(){amzn.beanstalk.models.ValidationErrors={};amzn.beanstalk.models.factory("ValidationErrors",["LocalizationService",function(a){var b=function(){this.length=0;this.messages=[]};b.prototype.add=function(a){_.contains(this.messages,a)||(this.length=this.messages.push(a))};b.prototype.fullMessages=function(b){return _.map(this.messages,function(d){return _.isDefined(b)?a.localize(d,b):a.localize(d)})};b.prototype.has=function(a){return _.contains(this.messages,a)};b.prototype.isEmpty=function(){return 0===
this.length};b.prototype.remove=function(a){a=_.indexOf(this.messages,a);-1<a&&(this.messages.splice(a,1),this.length=this.messages.length)};b.prototype.reset=function(){this.length=0;this.messages=[]};b.prototype.set=function(a,b){(b?this.add:this.remove).call(this,a)};return b}])})();(function(){amzn.beanstalk.models.factory("VersionLifecycleConfig",["MaxAgeRule","MaxCountRule",function(a,b){var c=function(d){d=d||{};if(!(this instanceof c))return new c(d);var e=new a(d.maxAgeRule),f=new b(d.maxCountRule);_.extend(this,d,{activeRule:e.enabled?"age":"count",deleteSourceFromS3:e.enabled&&e.deleteSourceFromS3||f.enabled&&f.deleteSourceFromS3,enabled:e.enabled||f.enabled,maxAgeRule:e,maxCountRule:f})};c.prototype.isValid=function(){return this.maxCountRule.isValid()&&this.maxAgeRule.isValid()};
c.prototype.serialize=function(){this.maxAgeRule.enabled=this.enabled&&"age"===this.activeRule;this.maxCountRule.enabled=this.enabled&&"count"===this.activeRule;this.maxAgeRule.enabled?this.maxAgeRule.deleteSourceFromS3=this.deleteSourceFromS3:this.maxCountRule.enabled&&(this.maxCountRule.deleteSourceFromS3=this.deleteSourceFromS3);return{maxAgeRule:this.maxAgeRule.serialize(),maxCountRule:this.maxCountRule.serialize()}};c.prototype.validate=function(){return _.reduce(this,function(a,b){_.isObject(b)&&
_.isFunction(b.validate)&&(a=b.validate(this)&&a);return a},!0,this)};return c}])})();(function(){amzn.beanstalk.resolves={};amzn.beanstalk.resolves=angular.module("beanstalkResolves",[])})();(function(){amzn.beanstalk.module.config(["$routeProvider","BeanstalkLocationsProvider",function(a,b){a.when("/welcome",{controller:"FirstRunController",templateUrl:"partials/experimental/getting-started/first-run.html",title:"getting_started_page_title"});a.when(b.getGettingStartedPathConfig(),{controller:"GettingStartedController",mode:"gettingStarted",reloadOnSearch:!1,resolve:{applicationVersions:amzn.beanstalk.resolves.applicationVersions,cnameDomain:amzn.beanstalk.resolves.cnameDomain,customPlatforms:amzn.beanstalk.resolves.customPlatforms,
solutionStacks:amzn.beanstalk.resolves.solutionStacks},template:'<div ng-include="view"></div>',title:"getting_started_page_title"});a.when(b.getNewApplicationPathConfig(),{controller:"GettingStartedController",mode:"newApplication",reloadOnSearch:!1,resolve:{applicationVersions:amzn.beanstalk.resolves.applicationVersions,cnameDomain:amzn.beanstalk.resolves.cnameDomain,customPlatforms:amzn.beanstalk.resolves.customPlatforms,solutionStacks:amzn.beanstalk.resolves.solutionStacks},template:'<div ng-include="view"></div>',
title:"create_application_page_title"});a.when(b.getCreateEnvironmentPathConfig(),{controller:"GettingStartedController",mode:"newEnvironment",reloadOnSearch:!1,resolve:{applicationVersions:amzn.beanstalk.resolves.applicationVersions,cnameDomain:amzn.beanstalk.resolves.cnameDomain,customPlatforms:amzn.beanstalk.resolves.customPlatforms,solutionStacks:amzn.beanstalk.resolves.solutionStacks},template:'<div ng-include="view"></div>',title:"launch_environment_page_title"});a.when(b.getAllAppsPathConfig(),
{controller:"ApplicationListController",reloadOnSearch:!1,templateUrl:"partials/applications-list.html",title:"application_list_page_title"});a.when(b.getApplicationOverviewPathConfig(),{controller:"ApplicationOverviewController",templateUrl:"partials/application/application-overview.html",title:"application_overview_page_title"});a.when(b.getApplicationVersionsPathConfig(),{controller:"ApplicationVersionsController",templateUrl:"partials/application/application-versions.html",title:"application_versions_page_title"});
a.when(b.getDeleteApplicationVersionsPathConfig(),{controller:"DeleteApplicationVersionsController",templateUrl:"partials/application/delete-application-versions.html",title:"delete_application_versions_page_title"});a.when(b.getApplicationConfigurationsPathConfig(),{controller:"SavedConfigurationsController",templateUrl:"partials/experimental/application/saved-configurations.html",title:"application_configurations_page_title"});a.when(b.getDeleteConfigurationsPathConfig(),{controller:"DeleteConfigurationsController",
templateUrl:"partials/application/delete-configurations.html",title:"delete_configurations_page_title"});a.when(b.getEnvironmentDashboardPathConfig(),{controller:"EnvironmentDashboardController",resolve:{navigation:amzn.beanstalk.resolves.environmentNavigationResolve,resolves:amzn.beanstalk.resolves.environmentDashboard},templateUrl:"partials/environment/dashboard.html",title:"dashboard_page_title"});a.when(b.getEnvironmentHealthDashboardPathConfig(),{controller:"EnvironmentHealthDashboardController",
resolve:{configurationSettings:amzn.beanstalk.resolves.resolveConfigurationSettings,navigation:amzn.beanstalk.resolves.environmentNavigationResolve,environment:amzn.beanstalk.resolves.resolveEnvironment},templateUrl:"partials/environment/health-dashboard.html",title:"health_dashboard_page_title"});a.when(b.getEnvironmentConfigurationPathConfig(),{controller:"EnvironmentConfigurationController",reloadOnSearch:!1,resolve:{navigation:amzn.beanstalk.resolves.environmentNavigationResolve,options:amzn.beanstalk.resolves.resolveConfigurationOptions,
resources:amzn.beanstalk.resolves.resolveResources,settings:amzn.beanstalk.resolves.resolveConfigurationSettings},templateUrl:"partials/environment/configuration.html",title:"environment_configuration_dashboard_title"});a.when(b.getEnvironmentLogsPathConfig(),{controller:"EnvironmentLogsController",resolve:{navigation:amzn.beanstalk.resolves.environmentNavigationResolve},templateUrl:"partials/environment/logs.html",title:"environment_logs_page_title"});a.when(b.getEnvironmentMonitoringPathConfig(),
{controller:"EnvironmentMonitoringController",resolve:{alarms:amzn.beanstalk.monitoring.resolveAlarms,configurationSettings:amzn.beanstalk.resolves.resolveConfigurationSettings,navigation:amzn.beanstalk.resolves.environmentNavigationResolve,resources:amzn.beanstalk.resolves.resolveResources,settings:amzn.beanstalk.monitoring.resolveSettings},templateUrl:"partials/environment/monitoring/dashboard.html",title:"monitoring_page_title"});a.when(b.getGraphDetailPathConfig(),{controller:"GraphDetailController",
reloadOnSearch:!1,resolve:{navigation:amzn.beanstalk.resolves.environmentNavigationResolve,resources:amzn.beanstalk.resolves.resolveResources},templateUrl:"partials/environment/monitoring/graph-detail.html",title:"graph_page_title"});a.when(b.getManageAlarmsPathConfig(),{controller:"ManageAlarmsController",resolve:{alarms:amzn.beanstalk.monitoring.resolveAlarms,navigation:amzn.beanstalk.resolves.environmentNavigationResolve,resources:amzn.beanstalk.resolves.resolveResources},templateUrl:"partials/environment/monitoring/manage-alarms.html",
title:"manage_alarms_page_title"});a.when(b.getAddAlarmPathConfig(),{controller:"AddAlarmController",reloadOnSearch:!1,resolve:{alarms:amzn.beanstalk.monitoring.resolveAlarms,navigation:amzn.beanstalk.resolves.environmentNavigationResolve,resources:amzn.beanstalk.resolves.resolveResources},templateUrl:"partials/environment/monitoring/add-alarm.html",title:"add_alarm_page_title"});a.when(b.getEditAlarmPathConfig(),{controller:"EditAlarmController",reloadOnSearch:!1,resolve:{alarms:amzn.beanstalk.monitoring.resolveAlarms,
navigation:amzn.beanstalk.resolves.environmentNavigationResolve,resources:amzn.beanstalk.resolves.resolveResources},templateUrl:"partials/environment/monitoring/add-alarm.html",title:"edit_alarm_page_title"});a.when(b.getEnvironmentEventsPathConfig(),{controller:"EnvironmentEventsController",resolve:{configurationSettings:amzn.beanstalk.resolves.environmentEvents,navigation:amzn.beanstalk.resolves.environmentNavigationResolve},templateUrl:"partials/environment/events.html",title:"events_page_title"});
a.when(b.getEnvironmentManagedActionsDashboardPathConfig(),{controller:"EnvironmentEventsController",resolve:{configurationSettings:amzn.beanstalk.resolves.environmentEvents,navigation:amzn.beanstalk.resolves.environmentNavigationResolve},templateUrl:"partials/environment/managed-actions-dashboard.html",title:"managed_actions_page_title"});a.when(b.getTagsPathConfig(),{controller:"TagsController",resolve:{environment:amzn.beanstalk.resolves.resolveEnvironment,navigation:amzn.beanstalk.resolves.environmentNavigationResolve},
templateUrl:"partials/environment/tags.html",title:"tags_page_title"});a.when(b.getEnvironmentClonePathConfig(),{controller:"CloneEnvironmentController",resolve:{applicationVersions:amzn.beanstalk.resolves.applicationVersions,cnameDomain:amzn.beanstalk.resolves.cnameDomain,configurationSettings:amzn.beanstalk.resolves.resolveConfigurationSettings},templateUrl:"partials/experimental/environment/clone/clone-environment.html",title:"clone_environment_page_title"});a.when(b.getFixEnvironmentPath(),{controller:"FixEnvironmentController",
templateUrl:"partials/environment/fix/fix-container.html",title:"fix_environment_page_title"});a.when(b.getSaveConfig(),{controller:"SaveConfigController",templateUrl:"partials/environment/save-configuration.html",title:"save_config_page_title"});a.when(b.getSwapCNAMEsConfig(),{controller:"SwapCNAMEsController",templateUrl:"partials/environment/swap-cnames.html",title:"swap_cnames_page_title"});a.when(b.getRestoreEnvironmentPathConfig(),{controller:"RestoreEnvironmentController",templateUrl:"partials/application/restore-environment.html",
title:"restore_environment_page_title"});a.when("/launchEnvironment",{controller:"LaunchEnvironmentController",resolve:{applicationVersions:amzn.beanstalk.resolves.applicationVersions,environment:amzn.beanstalk.resolves.resolveEnvironment,solutionStacks:amzn.beanstalk.resolves.solutionStacks},templateUrl:"partials/experimental/environment/launching/launch-environment.html",title:"launch_environment_page_title"});a.when(b.getResourceRedirectPathConfig(),{controller:"ResourceRedirectController",templateUrl:"partials/redirecting.html",
title:"redirecting_page_title"});a.otherwise({redirectTo:b.getAllAppsPathConfig()})}]);amzn.beanstalk.module.run(["$rootScope","$window","Alerts","AnalyticsService","BeanstalkLocations",function(a,b,c,d,e){a.$on("$viewContentLoaded",function(a){namespace("AWSC.Timer").invoke("customerReady")});a.experimental=!0;a.$on("$routeChangeSuccess",function(a,b){d.trackView(b)});a.$on("$routeChangeError",function(a,c,d,k){"partials/applications-list.html"!==c.loadedTemplateUrl&&"partials/deprecated/getting-started/getting-started.html"!==
c.loadedTemplateUrl&&e.goToAllApplications("problem_loading_page",k,null);b.clientReporting.error("routeChangeError",{current:c,message:k,previous:d})})}])})();(function(){amzn.beanstalk.resolves.applicationVersions={};amzn.beanstalk.resolves.applicationVersions=["$q","ApplicationVersions","BeanstalkLocations","loaderStatusService",function(a,b,c,d){a=c.getApplicationName();b=b.refresh(a);d.setStatus("application-versions-resolve","resolving_application_versions_status",{},b);return b}]})();(function(){amzn.beanstalk.resolves.resolveConfigurationOptions={};amzn.beanstalk.resolves.resolveConfigurationOptions=["ConfigurationOptions","$q","BeanstalkLocations","loaderStatusService",function(a,b,c,d){if(_.has(a.optionsByEnvironmentId,c.getEnvironmentId()))return d=b.defer(),d.resolve(a.optionsByEnvironmentId[c.getEnvironmentId()]),d.promise;a=a.refreshEnvironment(c.getEnvironmentId());d.setStatus("configuration-options-resolve","resolving_configuration_options_status",{},a);return a}]})();(function(){amzn.beanstalk.resolves.resolveConfigurationSettings={};amzn.beanstalk.resolves.resolveConfigurationSettings=["ConfigurationSettings","$q","BeanstalkLocations","loaderStatusService",function(a,b,c,d){if(_.has(a.settingsByEnvironmentId,c.getEnvironmentId()))return d=b.defer(),d.resolve(a.settingsByEnvironmentId[c.getEnvironmentId()]),d.promise;a=a.refreshEnvironment(c.getEnvironmentId());d.setStatus("configuration-settings-resolve","resolving_configuration_settings_status",{},a);return a}]})();(function(){amzn.beanstalk.resolves.resolveCreateInstanceProfile=["Alerts","BeanstalkLocations","Externals","ExternalsService","loaderStatusService","$q",function(a,b,c,d,e,f){d=/^arn:aws:iam::[0-9]+?:role\/(.*)$/;b=b.getResponse();var g=null;_.isUndefined(b)||(b=JSON.parse(decodeURIComponent(b)),_.has(b,"service")&&(g=_.last(d.exec(b.service))),g||a.error("iam_role_creation_alert",g));a=c.refresh(c.constants.INSTANCE_PROFILES).then(function(a){return _.some(a,function(a){return a.value===g})?g:null},
function(a){_.has(a,"code")&&"AccessDenied"===a.code&&c.errors.push(a)});e.setStatus("instance-profiles-resolve","resolving_instance_profiles_status",{},a);return a}]})();(function(){amzn.beanstalk.resolves.customPlatforms=["$q","loaderStatusService","PlatformFilters","PlatformsService","PlatformVersionsCollection","ebDeepLink",function(a,b,c,d,e,f){var g=a.defer(),h=new c,k=[];h.platformOwner.set("self");h.platformStatus.set("Ready");h.supportedTier.set(f.getTier().toString("/"));d.listPlatformVersions(h.serialize()).then(function n(a){k=_.concat(k,a.platformSummaryList);a.nextToken?d.listPlatformVersions(h.serialize(),a.nextToken).then(n):g.resolve(new e(k))},function(a){"InvalidParameterCombination"===
a.code&&g.resolve(new e([]))});b.setStatus("custom-platforms-resolve","resolving_custom_platforms_status",{},g.promise);return g.promise}]})();(function(){amzn.beanstalk.resolves.environmentEvents=["$q","BeanstalkLocations","ConfigurationSettings","Environments",function(a,b,c,d){b=b.getEnvironmentId();return d.environmentsById[b].isTerminated()?a.when({}):_.has(c.settingsByEnvironmentId,b)?a.when(c.settingsByEnvironmentId[b]):c.refreshEnvironment(b)}]})();(function(){amzn.beanstalk.resolves.resolveIamRoles=["Externals","loaderStatusService","$q",function(a,b,c){c=a.refresh(a.constants.IAM_ROLES)["catch"](function(b){_.has(b,"code")&&"AccessDenied"===b.code&&a.errors.push(b)});b.setStatus("iam-roles-resolve","resolving_iam_roles_status",{},c);return c}]})();(function(){amzn.beanstalk.resolves.resolveManagedActions=["BeanstalkLocations","EnvironmentsService","loaderStatusService",function(a,b,c){a=b.describeManagedActions(a.getEnvironmentId(),{status:amzn.beanstalk.constants.ACTION_STATUSES.SCHEDULED});c.setStatus("managed-actions-resolve","resolving_managed_actions_status",{},a);return a}]})();(function(){amzn.beanstalk.resolves.resolveResources={};amzn.beanstalk.resolves.resolveResources=["Resources","$q","BeanstalkLocations","loaderStatusService",function(a,b,c,d){if(_.has(a.resourcesByEnvironmentId,c.getEnvironmentId()))return d=b.defer(),d.resolve(a.resourcesByEnvironmentId[c.getEnvironmentId()]),d.promise;a=a.refreshEnvironment(c.getEnvironmentId());d.setStatus("resources-resolve","resolving_resources_status",{},a);return a}]})();(function(){amzn.beanstalk.services={};amzn.beanstalk.services=angular.module("beanstalkServices",["ngSanitize","pageVisibility"])})();(function(){amzn.beanstalk.services.service("AnalyticsService",["$rootScope","$log","AWSCAnalytics",function(a,b,c){var d;b.debug("AnalyticsService is on debug mode.");c.configure({debug:!0});this.determineContext=function(a){if(!a||!a.$$route||!a.$$route.originalPath||"/"===a.$$route.originalPath)return d="home";a=a.$$route.originalPath;a=a.substring(1);d=a.replace(/\//g,"_");32<d.length&&(d=d.substring(0,32));return d};this.getMetadata=function(){return!a||!a.experimental?{version:"wizardExperience"}:
{version:"quickStartExperience"}};this.trackClick=function(b,f){if(b){b=!a.experimental?"wizard_"+b:"qs_"+b;var g={context:d,id:b,metaData:[this.getMetadata()]};f&&g.metaData.push(f);c.trackClick(g);return g}};this.trackView=function(a){a=this.determineContext(a);c.trackView({context:d,id:a,metaData:this.getMetadata()})}}])})();(function(){amzn.beanstalk.services.ApplicationsService={};amzn.beanstalk.services.factory("ApplicationsService",["HttpHelper",function(a){return{describeApplications:function(){return a.httpFactory({method:"GET",url:"/elasticbeanstalk/service/applications"})},create:function(b,c){return a.httpFactory({method:"POST",url:"/elasticbeanstalk/service/applications",data:{applicationName:b,description:c}},"application")},createApplication:function(b){return a.httpFactory({data:b,method:"POST",url:"/elasticbeanstalk/service/applications"},
"application")},createVersion:function(b,c,d,e,f){return a.httpFactory({method:"POST",url:"/elasticbeanstalk/service/applications/versions",data:{applicationName:b,autoCreateApplication:f,versionLabel:c,sourceBundle:d,description:e}},"applicationVersion")},createApplicationVersion:function(b){return a.httpFactory({data:b,method:"POST",url:"/elasticbeanstalk/service/applications/versions"},"applicationVersion")},deleteApplication:function(b,c){return a.httpFactory({method:"DELETE",url:"/elasticbeanstalk/service/applications",
params:{applicationName:b.applicationName,terminateEnvByForce:!!c}})},describeSettings:function(b){return a.httpFactory({method:"POST",idempost:!0,url:"/elasticbeanstalk/service/applications/configurationSettings",data:b},"configurationSettings")},validateSettings:function(b){return a.httpFactory({method:"POST",idempost:!0,url:"/elasticbeanstalk/service/applications/configurationSettings/validate",data:b},"messages")},describeApplicationVersions:function(b){return a.httpFactory({method:"GET",url:"/elasticbeanstalk/service/applications/versions",
params:{applicationName:b}},"applicationVersions")},deleteApplicationVersion:function(b,c,d){return a.httpFactory({method:"DELETE",url:"/elasticbeanstalk/service/applications/versions",params:{applicationName:b,versionLabel:c,deleteSourceBundle:d}})},createConfigurationTemplate:function(b){return a.httpFactory({method:"POST",url:"/elasticbeanstalk/service/applications/configurationTemplate",data:b})},deleteConfigurationTemplate:function(b,c){return a.httpFactory({method:"DELETE",url:"/elasticbeanstalk/service/applications/configurationTemplate",
params:{applicationName:b,templateName:c}})},updateApplicationResourceLifecycle:function(b){return a.httpFactory({data:b,method:"PUT",url:"/elasticbeanstalk/service/applications/resourceLifecycle"},"resourceLifecycleConfig")}}}])})();(function(){amzn.beanstalk.services.service("AutoRefresher",["$interval",function(a){var b=function(a){return{tick:function(){return a+=1}}}(0),c={};this.autoRefresh=function(d,e,f){var g=b.tick();c[g]={delay:e,fn:d,preserve:f||!1,promise:a(d,e),suspend:!1};return g};this.cancel=function(b){var e=c[b];_.isDefined(e)&&(a.cancel(e.promise),delete c[b])};this.cancelAll=function(){c=_.reduce(c,function(b,c,f){c.preserve?b[f]=c:a.cancel(c.promise);return b},{})};this.resumeAll=function(){_.each(c,function(b){b.suspend&&
(b.suspend=!1,b.promise=a(b.fn,b.delay))})};this.start=this.autoRefresh;this.stop=this.cancel;this.suspendAll=function(){_.each(c,function(b){b.suspend||(b.suspend=!0,a.cancel(b.promise))})}}]);amzn.beanstalk.services.run(["$pageVisibility","$rootScope","AutoRefresher",function(a,b,c){b.$on("$routeChangeStart",function(){c.cancelAll()});a.$on("hide",function(){c.suspendAll()});a.$on("show",function(){c.resumeAll()})}])})();(function(){amzn.beanstalk.services.service("clog",function(){var a=namespace("AWSCLog");return{log:_.bind(a.invoke,a,"log")}});amzn.beanstalk.services.service("AWSCAnalytics",function(){var a=namespace("AWSC.Analytics");return{configure:_.bind(a.invoke,a,"configure"),trackClick:_.bind(a.invoke,a,"trackClick"),trackView:_.bind(a.invoke,a,"trackView")}})})();(function(){amzn.beanstalk.services.factory("ConfigurationOptionsService",["HttpHelper",function(a){return{describeOptions:function(b){return a.httpFactory({data:b,idempost:!0,method:"POST",url:"/elasticbeanstalk/service/util/configurationOptions"})},describeSettings:function(b){return a.httpFactory({data:b,idempost:!0,method:"POST",url:"/elasticbeanstalk/service/applications/configurationSettings"},"configurationSettings")},validateSettings:function(b){return a.httpFactory({data:b,idempost:!0,method:"POST",
url:"/elasticbeanstalk/service/applications/configurationSettings/validate"},"messages")}}}])})();(function(){amzn.beanstalk.environment.EnvironmentAlertService={};var a=["ERROR","INFO"],b={"0000000001":"ERROR","0000000002":"INFO"};amzn.beanstalk.services.factory("EnvironmentAlertService",[function(){var c={};return{getSeverities:function(){return a},getAlertSeverity:function(a){return _.has(b,a.alertId)?b[a.alertId]:void 0},hideEnvironmentAlert:function(a,b){c[a]?c[a].splice(_.sortedIndex(c[a],b),0,b):c[a]=[b]},isAlertHidden:function(a,b){return!c[a]?!1:-1!==_.indexOf(c[a],b,!0)}}}])})();(function(){amzn.beanstalk.services.factory("EnvironmentsService",["HttpHelper",function(a){return{abortUpdate:function(b){return a.httpFactory({method:"POST",url:"/elasticbeanstalk/service/environments/"+b+"/abortEnvironmentUpdate"})},applyManagedAction:function(b,c){return a.httpFactory({method:"PUT",url:"/elasticbeanstalk/service/environments/"+b+"/applyManagedAction",params:c})},create:function(b){return a.httpFactory({data:b,method:"POST",url:"/elasticbeanstalk/service/environments"})},describeManagedActionHistory:function(b,
c){return a.httpFactory({params:_.extend({maxItems:20},c),method:"POST",url:"/elasticbeanstalk/service/environments/"+b+"/managedActionHistory"})},describeEnvironmentHealth:function(b,c){return a.httpFactory({method:"GET",params:c,url:"/elasticbeanstalk/service/environments/"+b+"/health"})},describeEnvironments:function(b,c){return a.httpFactory({method:"GET",params:_.extend(c||{},{applicationName:b}),url:"/elasticbeanstalk/service/environments"})},describeInstancesHealth:function(b,c){return a.httpFactory({method:"GET",
params:c,url:"/elasticbeanstalk/service/environments/"+b+"/instancesHealth"})},describeManagedActions:function(b,c){return a.httpFactory({method:"POST",params:c,url:"/elasticbeanstalk/service/environments/"+b+"/managedActions"},"managedActions")},describeResources:function(b){return a.httpFactory({method:"GET",url:"/elasticbeanstalk/service/environments/"+b+"/resources"},"environmentResources")},rebuild:function(b){return a.httpFactory({method:"POST",url:"/elasticbeanstalk/service/environments/"+
b+"/rebuild"})},restart:function(b){return a.httpFactory({method:"POST",url:"/elasticbeanstalk/service/environments/"+b+"/restartAppServers"})},swapCNAMEs:function(b,c){return a.httpFactory({method:"POST",url:"/elasticbeanstalk/service/environments/"+b+"/swapCNAMEs/"+c})},terminate:function(b){return a.httpFactory({method:"DELETE",url:"/elasticbeanstalk/service/environments/"+b})},update:function(b,c){return a.httpFactory({data:c,method:"PUT",url:"/elasticbeanstalk/service/environments/"+b})}}}])})();(function(){amzn.beanstalk.services.factory("EventsService",["HttpHelper",function(a){function b(a){_.isNumber(a)&&(a=moment.utc(a));return a?a.format(amzn.beanstalk.constants.ISO_8601):null}function c(b){return a.httpFactory({method:"GET",params:b,url:"/elasticbeanstalk/service/util/events"})}return{describeEvents:c,describeEventsForEnvironment:function(a,e,f,g,h){return c({endTime:b(g),environmentId:a,maxRecords:e||null,severity:h||null,startTime:b(f)})},describeLatestEventsForEnvironment:function(a,
e,f){return c({environmentId:a,severity:f,startTime:b(e)})},describeNextEventsForEnvironment:function(a,e,f,g,h,k){return c({endTime:b(h),environmentId:a,maxRecords:f||null,nextToken:e,severity:k||null,startTime:b(g)})}}}])})();(function(){amzn.beanstalk.services.factory("ExternalLocations",["RegionUtil",function(a){return{cloudwatch:{getLogGroupEndpoint:function(b){b=_.isObject(b)?b.environmentName:b;b="/aws/elasticbeanstalk/"+encodeURIComponent(b);return{label:b,path:"/cloudwatch/home?region="+a.getCurrentRegion()+"#logs:prefix="+b+"/"}}},rds:{getDBInstanceEndpoint:function(b){var c;if(_.isObject(b)){var d=_.reduce(b.properties,function(a,b){a[b.name]=b.value;return a},{});c=b.physicalResourceId;b=d.Endpoint+":"+d.Port}else c=
b;return{label:b,path:"/rds/home?region="+a.getCurrentRegion()+"#dbinstances:id="+c}}},vpc:{getCreateDefaultPath:function(){return"/vpc/home?region="+a.getCurrentRegion()+"#CreateDefaultVpc"},getDashboardPath:function(){return"/vpc/home?region="+a.getCurrentRegion()+"#vpc"}}}}])})();(function(){amzn.beanstalk.services.ExternalsService={};amzn.beanstalk.services.factory("ExternalsService",["HttpHelper",function(a){return{constants:{KEY_PAIRS:"keyPairs",AVAILABILITY_ZONES:"availabilityZones",VPCS:"vpcs",SUBNETS:"subnets",SECURITY_GROUPS:"securityGroups",SQS_QUEUES:"sqsQueues",RDS_SNAPSHOTS:"rdsSnapshots",RDS_ENGINES:"rdsEngines",INSTANCE_PROFILES:"instanceProfiles",SNS_TOPICS:"snsTopics",IAM_ROLES:"iamRoles",CERTIFICATES:"certificates"},createSnsTopic:function(b,c){return a.httpFactory({method:"POST",
idempost:!0,url:"/elasticbeanstalk/service/external/snsTopics/create/"+b,params:{email:c}})},describeAutoScalingGroup:function(b){return a.httpFactory({method:"GET",params:{autoScalingGroupName:b},url:"/elasticbeanstalk/service/external/autoScalingGroups"})},listOptions:function(b){return a.httpFactory({method:"GET",url:"/elasticbeanstalk/service/external/"+b})},rebootInstances:function(b){return a.httpFactory({method:"POST",idempost:!0,url:"/elasticbeanstalk/service/external/rebootInstances",params:{instanceIds:b}})},
terminateInstances:function(b){return a.httpFactory({method:"POST",idempost:!0,url:"/elasticbeanstalk/service/external/terminateInstances",params:{instanceIds:b}})},updateDefaultInstanceProfile:function(){return a.httpFactory({method:"POST",url:"/elasticbeanstalk/service/external/instanceProfile/update"})},updateDefaultServiceRole:function(b){return a.httpFactory({method:"POST",url:"/elasticbeanstalk/service/external/serviceRole/update",params:{policyNames:b}})},validateDefaultInstanceProfile:function(){return a.httpFactory({method:"POST",
url:"/elasticbeanstalk/service/external/instanceProfile/validate"})},validateDefaultServiceRole:function(b){return a.httpFactory({method:"POST",url:"/elasticbeanstalk/service/external/serviceRole/validate",params:{policyNames:b}})}}}])})();(function(){amzn.beanstalk.services.factory("PlatformsService",["HttpHelper",function(a){return{createPlatformVersion:function(b){return a.httpFactory({data:b,method:"PUT",url:"/elasticbeanstalk/service/platforms"})},describePlatformVersion:function(b){return a.httpFactory({data:{platformArn:b},method:"POST",url:"/elasticbeanstalk/service/platforms"},"platformDescription")},listPlatformVersions:function(b,c){return a.httpFactory({data:{filters:b,nextToken:c},method:"POST",url:"/elasticbeanstalk/service/platforms/list"})}}}])})();(function(){amzn.beanstalk.services.factory("PreferencesService",["HttpHelper",function(a){return{setQuickStartPreference:function(b){return a.httpFactory({idempost:!0,method:"POST",params:{prefValue:b},url:"/elasticbeanstalk/service/preferences/qs"})}}}])})();(function(){amzn.beanstalk.services.TagsService={};amzn.beanstalk.services.factory("TagsService",["HttpHelper",function(a){return{describeTagsForResources:function(b){return a.httpFactory({data:b,method:"POST",url:"/elasticbeanstalk/service/tags"})},listTagsForResource:function(b){return a.httpFactory({data:b,method:"POST",url:"/elasticbeanstalk/service/tags/list"})},updateTagsForResource:function(b){return a.httpFactory({data:b,method:"PUT",url:"/elasticbeanstalk/service/tags"})}}}])})();(function(){amzn.beanstalk.services.UtilService={};amzn.beanstalk.services.factory("UtilService",["RegionUtil","HttpHelper",function(a,b){return{listSolutionStacks:function(){return b.httpFactory({method:"GET",url:"/elasticbeanstalk/service/util/solutionStacks",params:{region:a.getCurrentRegion()}})},listTiers:function(){return b.httpFactory({method:"GET",url:"/elasticbeanstalk/service/util/tiers",params:{region:a.getCurrentRegion()}})},checkAvailability:function(c){return b.httpFactory({method:"POST",
idempost:!0,url:"/elasticbeanstalk/service/util/checkDNS",params:{region:a.getCurrentRegion(),prefix:c}})},getUploadParameters:function(){return b.httpFactory({method:"POST",idempost:!0,url:"/elasticbeanstalk/service/util/uploadParameters/v4",params:{region:a.getCurrentRegion()}})},describeOptions:function(c){return b.httpFactory({method:"POST",idempost:!0,url:"/elasticbeanstalk/service/util/configurationOptions",params:{region:a.getCurrentRegion()},data:c})},requestEnvironmentInfo:function(c){return b.httpFactory({method:"POST",
url:"/elasticbeanstalk/service/util/logs",params:{region:a.getCurrentRegion()},data:c})},retrieveEnvironmentInfo:function(c){return b.httpFactory({method:"GET",url:"/elasticbeanstalk/service/util/logs",params:_.extend({region:a.getCurrentRegion()},c)})}}}])})();(function(){amzn.beanstalk.utils={};_.mixin({concat:function(){return Array.prototype.concat.apply(Array.prototype,arguments)},decapitalize:function(a){return a.charAt(0).toLowerCase()+a.slice(1)},extendCopy:function(a){return _.extend.apply({},[_.clone(a)].concat(Array.prototype.slice.call(arguments,1)))},isDefined:function(a){return null!==a&&void 0!==a},isEqual:function(a,c){return angular.equals(a,c)},keyedOn:function(a,c){return _.reduce(a,function(a,b){a[b[c]]=b;return a},{})}});var a=[];amzn.beanstalk.utils=
{compareSemanticVersions:function(b,c){b=_.isString(b)?b:"";c=_.isString(c)?c:"";var d=b+"-"+c;if(!_.has(a,d)){var e=b.split("."),f=c.split(".");_.find(_.range(0,e.length>f.length?e.length:f.length),function(b){var c=parseInt(f[b],10)||-1;b=parseInt(e[b],10)||-1;a[d]=c-b;return a[d]})}return a[d]},diff:function(a,c){var d=[],e=function(a,b,c){"set"===a&&_.isUndefined(c)?d.push({path:b,operation:"delete"}):d.push({path:b,operation:a,value:c})},f=function(a,b,c){if(!_.isNull(b)&&!_.isNull(c)&&_.isObject(b)){var l=
_.keys(b),n=_.keys(c);_.difference(l,n).forEach(function(b){e("delete",a.concat(b))});_.difference(n,l).forEach(function(b){e("set",a.concat(b),c[b])});_.intersection(l,n).forEach(function(e){_.concat(d,f(a.concat(e),b[e],c[e]))})}else b!==c&&e("set",a,c);return d};return f([],a,c)},stableJsonStringify:function(a,c){c=c||{};_.isFunction(c)&&(c={compare:c});var d=c.compare&&function(a){return function(b){return function(c,d){return a({key:c,value:b[c]},{key:d,value:b[d]})}}}(c.compare),e=c.replacer||
function(a,b){return b},f=_.isNumber(c.tab)?_.pad("",c.tab):c.tab||"";return function h(a,b,c,p){var q="\n"+_.times(p,function(){return f}).join("");c=e.call(a,b,c);if(!_.isUndefined(c)){if(!_.isObject(c))return JSON.stringify(c);if(_.isArray(c))return a=_.map(c,function(a,b,c){return q+(h(c,b,a,p+1)||JSON.stringify(null))}),"["+a.join(",")+q+"]";a=_.keys(c).sort(d);a=_.map(a,function(a){var b=h(c,a,c[a],p+1)||JSON.stringify(null);return q+f+JSON.stringify(a)+": "+b});return"{"+a.join(",")+q+"}"}}({"":a},
"",a,0)},structifySolutionStack:function(a){var c=amzn.beanstalk.constants.DOCKER_PRECONFIGURED,d=amzn.beanstalk.constants.GENERIC,e=amzn.beanstalk.constants.LEGACY,f=amzn.beanstalk.constants.NATIVE;if(_.isNull(a))return{architecture:"",architectureVersion:null,canBeWorker:!0,category:d,isDockerPreconfigured:!1,isGeneric:!0,isLegacy:!1,osVersion:null,platformDescription:null,platformName:"",platformVersion:null,solutionStackName:null,solutionStackVersion:null};for(var g=a.split(" running ",2),h=1<
g.length,k=h?g[0]:"",h=h?g[1]:a,l=h.match(/.+?(?=\d)/),g=!_.isNull(l)?_.trim(l[0]):h,h=_.trim(_.strRight(h,g)),n=/\d+/g,p=[],l=n.exec(h);!_.isNull(l);)p=p.concat(l),l=n.exec(h);var l=_.isEmpty(p)?null:p.join("."),n=(/v([\d\.]+\d)/.exec(k)||[])[1]||null,p=/(\d{2})bit/.exec(k),p=_.isArray(p)&&2===p.length?parseInt(p[1],10):null,q=/\d*bit ([A-Za-z\s]+)(?!:v\d|\d)/.exec(k),q=!_.isEmpty(q)?q[1]:null,r=/\d{4}(\.\d+)?/.exec(k),r=!_.isEmpty(r)?parseFloat(r[0]):null,m=_.endsWith(a,"(Preconfigured - Docker)"),
t=_.endsWith(a,"(Generic)")||"docker"===g.toLowerCase(),s=_.endsWith(a,"(legacy)");return{architecture:k,architectureVersion:p,canBeWorker:!(s||"iis"===g.toLowerCase()),category:s?e:m?c:t?d:f,isDockerPreconfigured:m,isGeneric:t,isLegacy:s,osName:q,osVersion:r,platformDescription:h,platformName:g,platformVersion:l,solutionStackName:a,solutionStackVersion:n}},isEnvironmentUpdating:function(a){return!a?!1:"Launching"===a.status||"Updating"===a.status||"Aborting"===a.status||"Terminating"===a.status},
isEnvironmentAborting:function(a){return!a?!1:"Aborting"===a.status},isEnvironmentTerminated:function(a){return!a?!1:"Terminated"===a.status},isAbortableOperationInProgress:function(a){return!a?!1:!0===a.abortableOperationInProgress},isEnvironmentActionable:function(a){return!(amzn.beanstalk.utils.isEnvironmentUpdating(a)||amzn.beanstalk.utils.isEnvironmentTerminated(a))},isEnvironmentSwappable:function(a){return!a||"Ready"!==a.status?!1:!(a.tier&&a.tier.name===amzn.beanstalk.constants.WORKER)},isEnvironmentLegacy:function(a){return!a?
!1:_.has(a,"platformArn")&&!_.isNull(a.platformArn)?amzn.beanstalk.utils.isPlatformLegacy(a.platformArn):amzn.beanstalk.utils.isSolutionStackLegacy(a.solutionStackName)},isPlatformLegacy:function(a){if(!_.isString(a))return!1;a=a.substr(a.lastIndexOf("/")+1);return 0>amzn.beanstalk.utils.compareSemanticVersions("0.1.0",a)},isSolutionStackLegacy:function(a){return!_.isString(a)?!1:_.endsWith(a,"(legacy)")},getEnvironmentStatusString:function(a){switch(a.status){case "Aborting":return"aborting_environment_status";
case "Launching":return"launching_environment_status";case "Terminating":return"terminating_environment_status";default:return"updating_environment_status"}},getSuccessfulPromise:function(a,c){var d=a.defer();d.resolve(c);return d.promise},getErrorPromise:function(a,c){var d=a.defer();d.reject(c);return d.promise},deepClone:function(a){return angular.fromJson(angular.toJson(a))},arraysEqual:function(a,c){if(!a)return!c;if(!c||a.length!==c.length)return!1;var d;for(d=0;d<a.length;d+=1)if(!_.isEqual(a[d],
c[d]))return!1;return!0},incrementVersionNumber:function(a,c,d){d=_.isString(d)?d:"-";c=_.isNumber(c)&&c>d.length+3?c:200;var e=a.match(RegExp("^(.*)"+d+"(\\d{1,3})$"));a=_.isNull(e)?a:e[1];e=_.isNull(e)?1:parseInt(e[2],10)+1;d+=e;return a.substring(0,c-d.length)+d},htmlEntities:function(a){return _.isBlank(a)?void 0:angular.element("<pre/>").text(a).html()}}})();(function(){amzn.beanstalk.application.versions={};amzn.beanstalk.application.controller("ApplicationVersionsController",["$scope","Alerts","ApplicationsService","ApplicationVersions","BeanstalkLocations","ebDialog","Environments","EnvironmentHelper","LocalizationService",function(a,b,c,d,e,f,g,h,k){h.injectSelectedApplication(a);a.acceptTypes=[".zip",".war"];a.deployFormVisible=!1;a.deployInfo={};a.deploymentStatus=null;a.environments=g;a.fileInputError=null;a.noEnvironmentSelected=!1;a.loadingEnvironments=
!1;a.loadingVersions=!1;a.uploader={};a.uploadFormVisible=!1;a.uploadInfo={};a.uploadingStatus=null;a.versions=d;a.versionSelection={};var l=function(){a.refresh();a.uploader.reset();a.uploadFormVisible=!1;a.uploadInfo={};a.uploadingStatus=null},n=function(c){a.refresh();a.uploader.reset();a.uploadingStatus=null;b.error("unable_to_create_application_version_error",{message:amzn.beanstalk.utils.htmlEntities(c.message)})},p=function(){var c=a.deployInfo.environment;a.deployFormVisible=!1;a.deployInfo=
{};a.deploymentStatus=null;a.refresh();b.info("deployed_application_version_started",{environmentName:amzn.beanstalk.utils.htmlEntities(c.environmentName),href:e.getPathToEnvironmentEvents(c)})},q=function(c){a.deploymentStatus=null;b.error("unable_to_deploy_application_version",{message:amzn.beanstalk.utils.htmlEntities(c.message)})},r=function(b){var d=a.application.applicationName,e=a.uploadInfo.description,f=a.uploadInfo.versionLabel;a.uploadingStatus=k.localize("creating_application_version_status",
{versionLabel:amzn.beanstalk.utils.htmlEntities(f)});c.createVersion(d,f,b,e).then(l,n)},m=function(){a.uploader.reset();a.uploadingStatus=null;b.error("unable_to_upload")},t=function(){a.environmentsByVersion=_.chain(a.environments.environmentsByApplication[a.application.applicationName]).groupBy("versionLabel").reduce(function(a,b,c){a[c]=_.pluck(b,"environmentName").join(", ");return a},{}).value()},s=function(c){b.error("unable_to_load_versions",{applicationName:amzn.beanstalk.utils.htmlEntities(a.application.applicationName),
message:amzn.beanstalk.utils.htmlEntities(c.message)})},v=function(){a.loadingEnvironments=!0;a.environments.refresh()["finally"](function(){a.loadingEnvironments=!1})},w=function(){a.loadingVersions=!0;a.versions.refresh(a.application.applicationName).then(t,s)["finally"](function(){a.loadingVersions=!1})};a.closeDeployForm=function(){a.deployFormVisible=!1};a.closeUploadForm=function(){a.uploadFormVisible=!1};a.deleteApplicationVersions=function(){e.goToDeleteApplicationVersions(a.application,a.getSelectedApplicationVersions())};
a.deployApplicationVersion=function(){var b=a.deployInfo.environment,c;a.selectedApplicationVersionsInvalid()||(c=a.getSelectedApplicationVersions()[0],!b||amzn.beanstalk.utils.isEnvironmentUpdating(b)?a.noEnvironmentSelected=!0:(a.deploymentStatus=k.localize("deploying_status",{environmentId:b.environmentId,versionLabel:amzn.beanstalk.utils.htmlEntities(c.versionLabel)}),a.environments.update(b.environmentId,{environmentId:b.environmentId,versionLabel:c.versionLabel}).then(p,q)))};a.getSelectedApplicationVersions=
function(){var b=a.versions.byApplication[a.application.applicationName],c=[];_.each(a.versionSelection,function(a,d){a&&c.push(_.find(b,function(a){return a.versionLabel===d}))});return c};a.localizeStatus=function(a){a=(a.status||"").toLowerCase();return k.localizeSafe("application_version_"+a,null,a)};a.refresh=function(){a.loadingEnvironments||v();a.loadingVersions||w()};a.selectedApplicationVersionsInvalid=function(){return 1!==a.getSelectedApplicationVersions().length};a.openResourceLifecycleModal=
function(){var b=angular.copy(a.application);return f.open("partials/application/update-resource-lifecycle-modal.html",b,{display:"modal"}).then(function(b){a.application.resourceLifecycleConfig=angular.copy(b)})};a.uploadApplicationVersion=function(){a.uploadInfo.versionLabel&&(a.uploader.hasFileSelected()?(a.fileInputError=null,a.uploadingStatus=k.localize("uploading_status"),a.uploader.upload().then(r,m)):a.fileInputError=k.localize("select_a_file_prompt"))};a.toggleDeployForm=function(){a.deployFormVisible=
!a.deployFormVisible};a.toggleUploadForm=function(){a.uploadFormVisible=!a.uploadFormVisible};d=a.environments.environmentsByApplication[a.application.applicationName]||[];g=e.getEnvironmentId();h=a.environments.environmentsById;a.deployInfo.environment=g?h[g]:1===d.length?d[0]:null;a.$watch("environments.environmentsByApplication[application.applicationName]",t);a.$watch("application.versions",w);a.refresh();a.getEnvironments=d}]);amzn.beanstalk.application.filter("applicationVersionsToString",["LocalizationService",
function(a){return function(b){return 1!==b.length?a.localize("must_select_one_version"):b[0].versionLabel}}]);amzn.beanstalk.application.filter("deployableEnvironment",[function(){return function(a){return _.reject(a,function(a){return amzn.beanstalk.utils.isEnvironmentUpdating(a)||amzn.beanstalk.utils.isEnvironmentTerminated(a)})}}]);amzn.beanstalk.application.directive("uniqueVersionLabel",function(){return{require:"ngModel",link:function(a,b,c,d){a.$watch("uploadInfo.versionLabel",function(b){a.application&&
d.$setValidity("labelExists",!_.contains(a.application.versions,b))})}}})})();(function(){amzn.beanstalk.application.controller("DeleteApplicationModalController",["$scope","ApplicationsService","LocalizationService","ebStatusIndicator",function(a,b,c,d){a.application=a.dialog.context.application;a.errorMessage=null;a.deleteApplication=function(){b.deleteApplication(a.application,!0).then(function(){a.dialog.resolve(a.application)},function(b){a.errorMessage=c.localize("unable_to_delete_application",{applicationName:amzn.beanstalk.utils.htmlEntities(a.application.applicationName),
message:amzn.beanstalk.utils.htmlEntities(b.message)})})}}])})();(function(){amzn.beanstalk.application.versionsDelete={};amzn.beanstalk.application.controller("DeleteApplicationVersionsController",["$scope","BeanstalkLocations","ApplicationVersions","EnvironmentHelper","Alerts","ApplicationsService","LocalizationService",function(a,b,c,d,e,f,g){function h(){if(!l||1>l.length)a.deleteComplete=!0,a.deleteInProgress=!1;else{var b=l.shift();a.statusByLabel[b].status=g.localize("deleting_application_version");f.deleteApplicationVersion(a.application.applicationName,
b,a.input.deleteFromS3).then(function(){a.statusByLabel[b].status=g.localize("deleted_success_application_version");h()},function(c){a.statusByLabel[b].clazz="text-error";a.statusByLabel[b].status=g.localize("unable_to_delete_application_version",{applicationName:amzn.beanstalk.utils.htmlEntities(a.application.applicationName),message:amzn.beanstalk.utils.htmlEntities(c.message)});h()})}}function k(){a.deleteInProgress=!0;l=_.clone(a.versionLabels);_.each(a.versionLabels,function(b){a.statusByLabel[b].status=
g.localize("waiting_to_delete_application_version")});h()}d.injectSelectedApplication(a);a.allVersions=c;a.versionLabels=b.getApplicationVersions();a.status=null;a.statusByLabel={};a.deleteComplete=!1;a.deleteInProgress=!1;a.input={deleteFromS3:!0};if(!a.versionLabels||1>a.versionLabels.length)b.goToApplicationVersions(a.application);else{_.each(a.versionLabels,function(b){a.statusByLabel[b]={clazz:"",status:""}});a.versionsPageUrl=b.getPathToApplicationVersions(a.application);var l;a.deleteApplicationVersions=
k}}])})();(function(){amzn.beanstalk.application.controller("DeleteConfigurationsController",["$scope","BeanstalkLocations","EnvironmentHelper","Alerts","Applications",function(a,b,c,d,e){c.injectSelectedApplication(a);a.selectedConfigs=b.getSelectedConfigurations();a.deleteInProgress=!1;a.goToApplicationConfigurations=function(){b.goToApplicationConfigurations(a.application.applicationName)};a.deleteConfigurations=function(){a.deleteInProgress=!0;e.deleteConfigurations(a.application,a.selectedConfigs).then(function(){a.deleteInProgress=
!1;b.goToApplicationConfigurations(a.application.applicationName)},function(b){d.error("unable_delete_configuration_message",{message:amzn.beanstalk.utils.htmlEntities(b.message)});a.deleteInProgress=!1})}}])})();(function(){amzn.beanstalk.application.controller("RestoreEnvironmentController",["$q","$scope","Alerts","EnvironmentHelper","Environments","EnvironmentsService","BeanstalkLocations","clog","LocalizationService",function(a,b,c,d,e,f,g,h,k){d.injectSelectedApplication(b);b.loadingEnvs=!1;b.restoreInProgress=!1;b.selected={environment:null};b.terminatedEnvs=[];b.terminatedEnvsById={};var l=function(a){b.terminatedEnvs=_.filter(a,function(a){return e.isRestorable(a)});b.terminatedEnvs.sort(function(a,
b){return a.dateUpdated<b.dateUpdated?1:a.dateUpdated>b.dateUpdated?-1:0});b.terminatedEnvsById=_.reduce(b.terminatedEnvs,function(a,b){a[b.environmentId]=b;return a},{})};b.cancel=function(){h.log("btnCancel","1","","restoreTerminatedEnvironment");g.goBack()};b.hasSelectedEnvironment=function(){return!_.isNull(b.selected.environment)};b.hasTerminatedEnvironments=function(){return!_.isEmpty(b.terminatedEnvs)};b.refreshEnvironments=function(){b.loadingEnvs=!0;var a=g.getApplicationName(),c=new Date;
c.setDate(c.getDate()-42);e.getAppTerminatedEnvironments(a,c).then(l)["finally"](function(){b.loadingEnvs=!1})};b.restoreEnvironment=function(){if(b.hasSelectedEnvironment()){var a=b.selected.environment;e.isRestorable(a)?(b.restoreInProgress=!0,e.restore(a).then(function(){h.log("btnRestore","1","success","restoreTerminatedEnvironment");g.goToEnvironmentDashboard(a)},function(d){h.log("btnRestore","1","error","restoreTerminatedEnvironment");c.error("unable_to_restore_environment",{environmentName:amzn.beanstalk.utils.htmlEntities(a.environmentName),
message:amzn.beanstalk.utils.htmlEntities(d.message)});b.refreshEnvironments()})["finally"](function(){b.restoreInProgress=!1})):c.error("unable_to_restore_environment",{environmentName:amzn.beanstalk.utils.htmlEntities(a.environmentName),message:k.localize(e.hasEnvironmentName(a.environmentName)?"restore_environment_naming_conflict":"restore_environment_unrestorable")})}};b.refreshEnvironments()}])})();(function(){amzn.beanstalk.application.controller("UpdateResourceLifecycleModalController",["$scope","ebAlert","ebDialog","Externals","LocalizationService","UpdateApplicationResourceLifecycle",function(a,b,c,d,e,f){var g=new f(c.context);a.serviceRole=g.resourceLifecycleConfig.serviceRole;a.versionLifecycle=g.resourceLifecycleConfig.versionLifecycleConfig;var h=function(a){b.setMessage(a)},k=function(){d.createDefaultRole().then(function(b){_.isUndefined(b.additionalInfo.arn)||a.serviceRole.autofill(b.additionalInfo.arn)})["catch"](h)},
l=function(){var b=a.serviceRole.getDefaultRole();a.serviceRole.set(b.arn)};a.cancel=function(){b.clear();c.close()};a.hasLifecycleRuleValidationError=function(){return a.resourceLifecycleForm.maxCountRule.$invalid||a.resourceLifecycleForm.maxAgeRule.$invalid||!a.versionLifecycle.isValid()};a.hasLifecycleRuleValidationWarning=function(){return a.resourceLifecycleForm.maxCountRule.$error.warningMessages||a.resourceLifecycleForm.maxAgeRule.$error.warningMessages};a.validateMaxAgeRuleValue=function(){a.versionLifecycle.maxAgeRule.value=
parseInt(a.resourceLifecycleForm.maxAgeRule.$viewValue,10);a.versionLifecycle.maxAgeRule.validate()};a.validateMaxCountRuleValue=function(){a.versionLifecycle.maxCountRule.value=parseInt(a.resourceLifecycleForm.maxCountRule.$viewValue,10);a.versionLifecycle.maxCountRule.validate()};a.submit=function(){b.clear();g.exec().then(function(a){c.resolve(a)})["catch"](h)};d.get(d.constants.IAM_ROLES).then(function(b){b=_.map(_.reject(b,function(a){return _.isUndefined(a.value)||_.isUndefined(a.additionalInfo.arn)}),
function(a){return{name:a.value,arn:a.additionalInfo.arn}});a.serviceRole.appendRoles(b);b=!_.isNull(a.serviceRole.value);var c=0<a.serviceRole.roles.length;c?!b&&c&&l():k()})["catch"](h)}])})();(function(){amzn.beanstalk.collections.factory("PlatformsCollection",["LocalizationService","Tier",function(a,b){var c=amzn.beanstalk.constants.DOCKER_PRECONFIGURED,d=amzn.beanstalk.constants.GENERIC,e=amzn.beanstalk.constants.LEGACY,f=amzn.beanstalk.constants.NATIVE,g=amzn.beanstalk.utils.compareSemanticVersions,h=function(a,b){return g(a.solutionStackVersion,b.solutionStackVersion)||g(a.platformVersion,b.platformVersion)||b.architectureVersion-a.architectureVersion||b.osVersion-a.osVersion||(b.osName>
a.osName?-1:b.osName<a.osName?1:0)||b.platformDescription<a.platformDescription},k=function(a){return _.groupBy(a,function(a){return a.platformName})},l=function(a){return _.groupBy(a,function(a){var b=[a.architectureVersion,a.osName,a.platformName];_.string.contains(a.platformName.toLowerCase(),"docker")||b.push(a.platformDescription);return b.join(", ")})},n=function(b){var c=a.localize(b);return function(){return this.category===c}},p=function(b,c,d){if(!(this instanceof p))return new p(b,c,d);
this.category=a.localize(b);this.name="IIS"===d?".NET (Windows/IIS)":d;this.recommended=_.first(c.sort(h));this.specs=c};p.prototype.isDockerPreconfigured=n(c);p.prototype.isGeneric=n(d);p.prototype.isLegacy=n(e);p.prototype.isNative=n(f);p.prototype.toString=function(){return this.category===f?this.name:this.name+" ("+this.category+")"};return function(n,r){r instanceof b||(r=new b);var m;this.solutionStacks=_.reduce(n,function(a,b){var c=amzn.beanstalk.utils.structifySolutionStack(b);(!r.isWorker()||
c.canBeWorker)&&a.push(c);return a},[]);this.categories=m=_.groupBy(this.solutionStacks,function(a){return a.category});this.options=_.reduce([f,c,d,e],function(a,b){var c=_.bind(p,this,b),d=k(m[b]),c=_.map(d,c);_.each(c,function(a){a.specs.sort(h)});return a.concat(c)},[]);this.getAvailablePlatformVersions=function(a){if(_.isNull(a))return[];var b=[],c=_.find(this.solutionStacks,function(b){return b.solutionStackName===a});_.isUndefined(c)&&(c=amzn.beanstalk.utils.structifySolutionStack(a),b.push(c));
_.each(this.categories[c.category],function(a){var d=a.architectureVersion===c.architectureVersion,e=a.osName===c.osName,f=a.platformDescription===c.platformDescription;a.platformName===c.platformName&&(d&&e&&(f||_.string.contains(a.platformName.toLowerCase(),"docker")))&&b.push(a)});b.sort(h);return b};this.getPlatformForSolutionStack=function(b){return _.findWhere(this.options,{category:a.localize(b.category),name:"IIS"===b.platformName?".NET (Windows/IIS)":b.platformName})};this.isMoreRecentSolutionStackAvailable=
function(a){var b=this.getAvailablePlatformVersions(a);return _.first(b).solutionStackName!==a};this.recommended=function(a){return _.reduce(l(a),function(a,b){var c=_.first(b.sort(h));-1<g("2.0.0",c.solutionStackVersion)&&a.push(c);return a},[],this)}}}])})();(function(){amzn.beanstalk.application.components={};amzn.beanstalk.application.directive("applicationHeader",function(){return{controller:"ApplicationHeaderController",replace:!0,restrict:"A",scope:{application:"=",showActions:"=?"},templateUrl:"partials/application/application-header.html"}});amzn.beanstalk.application.directive("applicationSidenav",["BeanstalkLocations",function(a){return{controller:"ApplicationHeaderController",replace:!0,restrict:"A",scope:{application:"=",selected:"@"},templateUrl:"partials/application/application-sidenav.html",
link:function(b){b.application&&(b.overviewPath=a.getPathToApplicationOverview(b.application.applicationName),b.versionsPath=a.getPathToApplicationVersions(b.application),b.configurationsPath=a.getPathToApplicationConfigurations(b.application))}}}])})();(function(){amzn.beanstalk.configuration.controllers={};amzn.beanstalk.configuration.controller("EnvironmentConfigurationController",["$filter","$location","$q","$scope","Alerts","AnalyticsService","ApplicationsService","AutoRefresher","BeanstalkLocations","Cards","ConfigurationOptions","ConfigurationSettings","EnvironmentHelper","Environments","Externals","ExternalsService","FeaturesService","HealthReporting","LocalizationService","Modal","OptionsInputMapper","RegionUtil","Resources","wizards.steps.RdsConfiguration",
"wizards.steps.VpcConfiguration",function(a,b,c,d,e,f,g,h,k,l,n,p,q,r,m,t,s,v,w,x,u,y,B,z,E){function A(a){return"aws:cloudformation:template:parameter"===a.namespace&&W.test(a.name)}function F(a,b){function c(b){var d=_.find(a,function(a){return a.option.name===b});if(d&&d.originalValue){var e={};_.each(d.originalValue.split(/ *, */),function(a){e[a]=!0});return e}}function e(b){var c=_.find(a,function(a){return a.option.name===b});if(c)return c.value}var f=a.EnvironmentType;f&&(b.environmentType=
f.value);b.includeRds=!d.showDatabaseCreate;b.usedForEc2=c("Subnets");b.usedForElb=c("ELBSubnets");b.usedForRds=c("DBSubnets");b.vpcAssociatePublicIpAddress=e("AssociatePublicIpAddress");b.vpcId=e("VPCId");b.vpcInternalLoadBalancer=e("ELBScheme")}function C(){b.search("edit",null);b.search("confirm",null);d.currentEdit=null;d.currentPartialUrl="partials/environment/configuration/dashboard.html"}function I(){var a={},b={},c=_.reduce(d.configurationSettings.optionSettings,function(a,b){a[u.calculateKey(b.namespace,
b.optionName)]=b;return a},{});_.each(d.configurationOptions,function(d){var e=u.calculateKey(d.namespace,d.name);if("aws:autoscaling:scheduledaction"!==d.namespace)if(d.setting=c[e],d.setting){if(d.value=d.setting.value,d.value||""===d.value)"Boolean"===d.valueType?d.value="true"===d.setting.value:"List"===d.valueType&&(d.value=d.setting.value.split(",")),a[e]=d}else d.value=null;b[e]=d});d.availableOptions=a;d.optionsMap=b;d.settingsMap=c;if(d.availableOptions[u.calculateKey("aws:rds:dbinstance",
"DBEngine")]){var e=_.find(d.resources.resources,function(a){return"AWS::RDS::DBInstance"===a.type});e&&e.properties&&(e=e.properties.concat([{name:"DBInstanceId",value:e.physicalResourceId}]),_.each(e,function(c){c={namespace:"console:rds:dbinstance",name:c.name,value:c.value,valueType:"Scalar"};var d=u.getOptionKey(c);b[d]=c;a[d]=c}))}if(e=d.availableOptions[u.calculateKey("aws:elasticbeanstalk:environment","EnvironmentType")])e.localizedOptions=_.map(e.valueOptions,function(a){return{value:a,displayName:w.localize(a,
{},a)}});if(e=d.optionsMap[u.calculateKey("aws:autoscaling:launchconfiguration","RootVolumeType")])e.localizedOptions=_.map(e.valueOptions,function(a){return{value:a,displayName:w.localize(a,{},a)}});_.reduce(d.configurationSettings.optionSettings,function(a,b){if("aws:autoscaling:scheduledaction"===b.namespace){var c=u.calculateKey(b.namespace,b.optionName),e=u.getOptionKey(b);if(c=_.clone(d.optionsMap[c]))c.value=b.value,c.resourceName=b.resourceName,a[e]=c}return a},d.availableOptions);var f=l.getCardsForOptions(a,
b,H),g=[];_.each(X,function(a){var b=[];_.each(a.cards,function(a){var c=f[a];_.isUndefined(c)||"elb"===a&&H.tier.isWorker()||("managed_updates"!==a||d.healthSupported)&&b.push(c)});if(0<b.length){a=amzn.beanstalk.utils.deepClone(a);var c=[],e=[c];_.each(b,function(a){3===c.length&&(c=[],e.push(c));c.push(a)});a.cardGroups=e;g.push(a)}});d.data.sections=g;d.legacy||(d.showDatabaseCreate=!_.some(d.data.sections,function(a){return"data"===a.name}))}function D(a,b){d.savingConfiguration=b;d.displayStatus=
a}function J(a){if(!_.has(S,a))return!1;if(d.currentEdit===S[a])return d.loadEdit(),!0;f.trackClick("card_edit_"+a,null);d.currentEdit=S[a];var b={},c=[],e=[],g=!1;_.each(d.optionsMap,function(a){if(d.currentEdit.optionsFilter(a))if("aws:elasticbeanstalk:application:environment"===a.namespace)b[a.name]={cleanName:a.name,option:a,originalValue:a.value,value:a.value},c.push({name:a.name,value:a.value,userDefined:a.userDefined});else if(U.test(a.namespace))b[a.name]={cleanName:a.name,option:a,originalValue:a.value,
value:a.value},e.push({name:a.name,value:a.value,userDefined:a.userDefined}),g=!0;else{A(a)&&(g=!0);var f=u.cleanOptionName(a.name);b[f]={cleanName:f,option:a,originalValue:a.value,value:a.value};"IamInstanceProfile"===a.name&&!a.value&&(b[f].defaultOptionText=w.localize("no_instance_profile_option"))}});d.pricingDataAvailable="https://docs.aws.amazon.com"===amzn.beanstalk.constants.DOCS_DOMAIN;d.isEnhancedHealth=!!_.findWhere(d.availableOptions,{name:"SystemType",value:amzn.beanstalk.constants.ENHANCED});
d.isWorker=H.tier.isWorker();d.currentEdit.prepareOptions&&d.currentEdit.prepareOptions(b);d.currentEdit.envProperties=_.sortBy(c,"name");d.currentEdit.options=b;d.currentEdit.statics=e;d.currentEdit.hasStatics=g;d.loadEdit();return!0}function M(a){if(a&&a.additionalInfo){var b;if(a.additionalInfo.createRequired)D(w.localize("creating_instance_profile"),!0),b="create_instance_profile_alert";else if(a.additionalInfo.updateRequired)D(w.localize("updating_instance_profile"),!0),b="update_instance_profile_alert";
else return c.when();return t.updateDefaultInstanceProfile().then(function(b){a.additionalInfo.createRequired&&(d.data[m.constants.INSTANCE_PROFILES].options=_.reject(d.data[m.constants.INSTANCE_PROFILES].options,function(a){return a.value===O}),d.data[m.constants.INSTANCE_PROFILES].options.push(b),d.currentEdit.options.IamInstanceProfile.value=b.value)},function(a){return c.reject({messageKey:b,error:a})})}return c.when()}function Q(a){if(a&&a.additionalInfo){var b;if(a.additionalInfo.createRequired)D(w.localize("creating_service_role"),
!0),b="create_service_role_alert";else if(a.additionalInfo.updateRequired)D(w.localize("updating_service_role"),!0),b="update_service_role_alert";else return c.when();return t.updateDefaultServiceRole(a.additionalInfo.policiesToAdd).then(null,function(a){return c.reject({messageKey:b,error:a})})}return c.when()}function R(){return d.currentEdit.options.IamInstanceProfile&&d.currentEdit.options.IamInstanceProfile.value===O?c.when({additionalInfo:{createRequired:!0}}):d.currentEdit.options.IamInstanceProfile&&
d.currentEdit.options.IamInstanceProfile.value===amzn.beanstalk.constants.DEFAULT_INSTANCE_PROFILE&&d.currentEdit.options.IamInstanceProfile.value!==d.currentEdit.options.IamInstanceProfile.originalValue?(D(w.localize("validating_instance_profile"),!0),t.validateDefaultInstanceProfile().then(null,function(a){return c.reject({messageKey:"validate_instance_profile_alert",error:a})})):c.when()}function N(){var a=[],b=d.currentEdit.options.SystemType&&d.currentEdit.options.SystemType.value===amzn.beanstalk.constants.ENHANCED&&
d.currentEdit.options.SystemType.value!==d.currentEdit.options.SystemType.originalValue,e=d.currentEdit.options.ManagedActionsEnabled&&d.currentEdit.options.ManagedActionsEnabled.value&&d.currentEdit.options.ManagedActionsEnabled.value!==d.currentEdit.options.ManagedActionsEnabled.originalValue;if(d.currentEdit.options.ServiceRole&&d.currentEdit.options.ServiceRole.value===amzn.beanstalk.constants.DEFAULT_SERVICE_ROLE&&d.currentEdit.options.ServiceRole.value!==d.currentEdit.options.ServiceRole.originalValue||
b||e)a.push("AWSElasticBeanstalkEnhancedHealth"),a.push("AWSElasticBeanstalkService");return 0<a.length?(D(w.localize("validating_service_role"),!0),t.validateDefaultServiceRole(a).then(function(b){b&&b.additionalInfo&&(b.additionalInfo.policiesToAdd=a);return c.when(b)},function(a){return c.reject({messageKey:"validate_service_role_alert",error:a})})):c.when()}function K(){D(w.localize("validating_settings"),!0);return g.validateSettings(G).then(function(a){d.validateMessage=G;0<a.length?(d.warningMessages=
a,b.search("confirm","1"),d.currentPartialUrl="partials/environment/configuration/confirm.html"):d.saveConfiguration()},function(a){return c.reject({messageKey:"validate_settings_alert",error:a})})}function L(){return r.refreshEnvironment(d.environment.environmentId)}q.injectSelectedApplication(d);q.injectSelectedEnvironment(d);var P=d.application.applicationName,H=d.environment,Y=H.environmentId,T=H.environmentName;d.dashboardPath=k.getPathToEnvironmentDashboard(d.environment);d.eventsUrl=k.getPathToEnvironmentEvents(d.environment);
d.isEnvironmentUpdating=amzn.beanstalk.utils.isEnvironmentUpdating(d.environment);p.injectConfigurationSettings(d.environment.environmentId,d);n.injectConfigurationOptions(d.environment.environmentId,d);B.injectResources(d.environment.environmentId,d);d.legacy=amzn.beanstalk.utils.isEnvironmentLegacy(d.environment);d.healthSupported=H&&H.solutionStackName&&0>H.solutionStackName.indexOf("Windows");var O="%create-default-profile-value%",U=/aws:elasticbeanstalk:(?:environment:proxy|container:(?:nodejs|python|java|golang)):staticfiles/,
W=/(.*)StaticFiles$/,X=[{name:"web",title:w.localize(H.tier.isWorker()?"section_worker":"section_web"),cards:"scaling instances sns container updates_deployments worker health managed_updates".split(" ")},{name:"data",title:w.localize("section_data"),cards:["rds"]},{name:"network",title:w.localize("section_network"),cards:["elb","vpc"]}],S={server:{partialUrl:"partials/environment/configuration/edit/server.html",optionsFilter:function(a){return"aws:autoscaling:asg"===a.namespace||"aws:autoscaling:launchconfiguration"===
a.namespace},prepareOptions:function(a){d.legacy||(a.RootVolumeSize.value=a.RootVolumeSize.originalValue=a.RootVolumeSize.option.value=parseInt(a.RootVolumeSize.option.value,10)||null,a.RootVolumeIOPS.value=a.RootVolumeIOPS.originalValue=a.RootVolumeIOPS.option.value=parseInt(a.RootVolumeIOPS.option.value,10)||null,d.currentEdit.isCustomVolumeSize=!!a.RootVolumeSize.option.value)},processMessage:function(a){if(d.legacy)return!1;var b=function(a){return"aws:autoscaling:launchconfiguration"===a.namespace&&
0===a.optionName.indexOf("RootVolume")&&!a.value},c=_.map(_.select(a.optionSettings,b),function(a){return _.omit(a,"value")});c.length&&(a.optionsToRemove=c,a.optionSettings=_.reject(a.optionSettings,b));return c.length}},scaling:{partialUrl:"partials/environment/configuration/edit/scaling.html",optionsFilter:function(a){return"aws:autoscaling:asg"===a.namespace||"aws:autoscaling:trigger"===a.namespace||"aws:elasticbeanstalk:environment"===a.namespace||"aws:ec2:vpc"===a.namespace},validateForm:function(){var a=
d.currentEdit.options.EnvironmentType,b=a&&a.originalValue!==a.value;a&&(d.input.environmentType=a.value);return _.isUndefined(d.vpcConfig)||!b||d.vpcConfig.validateInputs(d.input)},prepareOptions:function(a){d.input={};d.vpcConfig&&(F(a,d.input),d.input.excludeElb="SingleInstance"!==d.input.environmentType,d.vpcConfig.initialize(d.input,d))},processMessage:function(a){var b=d.currentEdit.options.EnvironmentType,c=[];return d.vpcConfig&&b&&b.originalValue!==b.value?(u.addVpcOptions(c,d.input),a.optionSettings=
a.optionSettings.concat(_.invoke(c,"serialize")),!0):!1}},vpc:{partialUrl:"partials/environment/configuration/edit/vpc.html",optionsFilter:function(a){return"aws:ec2:vpc"===a.namespace||"aws:elasticbeanstalk:environment"===a.namespace},validateForm:function(){return d.vpcConfig.validateInputs(d.input)},prepareOptions:function(a){d.input={};F(a,d.input);d.input.excludeElb="SingleInstance"===d.input.environmentType;d.vpcConfig.initialize(d.input,d)},processMessage:function(a,b){var c=!1,e=[];u.addVpcOptions(e,
d.input);d.input.includeRds&&u.addRdsVpcOptions(e,d.input);_.each(e,function(d){var e=_.find(b,function(a){return a.option.name===d.optionName&&a.option.namespace===d.namespace});!_.isUndefined(e)&&(d.value!==e.originalValue&&!("CommaSeparatedList"===e.valueType&&d.value&&e.originalValue&&0===_.difference(d.value.split(/ *, */),e.originalValue.split(/ *, */)).length))&&(a.optionSettings.push(d.serialize()),c=!0)});return c}},container:{partialUrl:"partials/environment/configuration/edit/container.html",
optionsFilter:function(a){return"aws:elasticbeanstalk:application:environment"===a.namespace||_.startsWith(a.namespace,"aws:elasticbeanstalk:container:")||"aws:elasticbeanstalk:hostmanager"===a.namespace||"aws:elasticbeanstalk:xray"===a.namespace||"aws:autoscaling:launchconfiguration"===a.namespace||"aws:elasticbeanstalk:cloudwatch:logs"===a.namespace||_.startsWith(a.namespace,"aws:elasticbeanstalk:environment:proxy")||A(a)},prepareOptions:function(b){b.StreamLogs&&b.StreamLogs.value&&(d.currentEdit.cloudWatchConsoleLogGroupPrefix=
a("cloudWatchLogGroupPrefix")(T),d.currentEdit.cloudWatchConsoleRedirectUrl=a("cloudWatchUrl")(y.getCurrentRegion(),T))},validateForm:function(){var a=d.addProperty();return d.addStatic()&&a}},elb:{partialUrl:"partials/environment/configuration/edit/elb.html",optionsFilter:function(a){return"aws:elb:loadbalancer"===a.namespace||"aws:elb:healthcheck"===a.namespace||"aws:elasticbeanstalk:application"===a.namespace||"aws:elb:policies"===a.namespace},processMessage:function(a,b){a.optionSettings=_.filter(a.optionSettings,
function(a){return"aws:elb:policies"===a.namespace&&"ConnectionDrainingTimeout"===a.optionName?b.ConnectionDrainingEnabled.value:"aws:elb:policies"===a.namespace&&"Stickiness Cookie Expiration"===a.optionName?b.StickinessPolicy.value:!0});return!0}},health:{partialUrl:"partials/environment/configuration/edit/health.html",optionsFilter:function(a){return"aws:elasticbeanstalk:application"===a.namespace||"aws:elasticbeanstalk:environment"===a.namespace||"aws:elasticbeanstalk:healthreporting:system"===
a.namespace},prepareOptions:function(a){d.healthUrlDisabled=H.tier.isWebServer()&&"SingleInstance"===a.EnvironmentType.value;d.healthUrlHelp=w.localize("health_url_help_"+(d.healthUrlDisabled?"web_single":H.tier.isWorker()?"worker":"web"));d.healthReporting=new v(a);d.healthReporting.isEnabled()&&d.healthReporting.deserializeConfigDocument();if(d.data.iamRoles&&d.data.iamRoles.options&&(!a.ServiceRole||a.ServiceRole&&!a.ServiceRole.value))_.find(d.data.iamRoles.options,function(a){return a.value===
amzn.beanstalk.constants.DEFAULT_SERVICE_ROLE})?a.ServiceRole.value=amzn.beanstalk.constants.DEFAULT_SERVICE_ROLE:_.find(d.data.iamRoles.options,function(a){return""===a.displayName})||d.data.iamRoles.options.unshift({displayName:""})},processInputs:function(){d.healthReporting.isEnabled()&&(d.healthReporting.isDirty()?(d.currentEdit.options.SystemType.value=d.healthReporting.systemType.value,d.currentEdit.options.ConfigDocument.value=d.healthReporting.serializeConfigDocument()):(d.currentEdit.options.SystemType.value=
d.currentEdit.options.SystemType.originalValue,d.currentEdit.options.ConfigDocument.value=d.currentEdit.options.ConfigDocument.originalValue))}},managed_updates:{partialUrl:"partials/environment/configuration/edit/managed-updates.html",optionsFilter:function(a){return"aws:elasticbeanstalk:managedactions"===a.namespace||"aws:elasticbeanstalk:managedactions:platformupdate"===a.namespace},prepareOptions:function(a){d.constants={MINOR:amzn.beanstalk.constants.UPDATE_LEVEL_MINOR,PATCH:amzn.beanstalk.constants.UPDATE_LEVEL_PATCH};
d.input={ManagedActionsEnabled:a.ManagedActionsEnabled.value,UpdateLevel:!_.isUndefined(a.UpdateLevel)&&!_.isNull(a.UpdateLevel.value)?a.UpdateLevel.value:amzn.beanstalk.constants.UPDATE_LEVEL_MINOR};d.locWeekdays=moment.weekdays();var b=d.input,c=_.map(moment().locale("en").localeData()._weekdaysShort,function(a){return a.toUpperCase()});if(_.isNull(a.PreferredStartTime.value))b.maintenanceWindow={day:d.locWeekdays[Math.floor(6*Math.random())],hour:("00"+Math.floor(23*Math.random())).substr(-2,2),
min:("00"+Math.floor(59*Math.random())).substr(-2,2)},b.maintenanceWindow.value=c[_.indexOf(d.locWeekdays,b.maintenanceWindow.day)]+":"+b.maintenanceWindow.hour+":"+b.maintenanceWindow.min;else{var e=a.PreferredStartTime.value.split(":");b.maintenanceWindow={day:d.locWeekdays[_.indexOf(c,e[0].toUpperCase())],hour:e[1],min:e[2],value:e}}_.isUndefined(a.InstanceRefreshEnabled)||(b.InstanceRefreshEnabled=!_.isNull(a.InstanceRefreshEnabled.value)?a.InstanceRefreshEnabled.value:!1);d.canRefreshInstances=
_.has(a,"InstanceRefreshEnabled")},processInputs:function(){var a=d.input,b=a.ManagedActionsEnabled,c=d.currentEdit.options;c.ManagedActionsEnabled.value=a.ManagedActionsEnabled;c.PreferredStartTime.value=b?a.maintenanceWindow.value:c.PreferredStartTime.originalValue;c.UpdateLevel.value=b?a.UpdateLevel:c.UpdateLevel.originalValue;_.isUndefined(c.InstanceRefreshEnabled)||(c.InstanceRefreshEnabled.value=b?a.InstanceRefreshEnabled:c.InstanceRefreshEnabled.originalValue)},processMessage:function(a){var b=
d.currentEdit.options.ManagedActionsEnabled.value,c=a.optionSettings;a.optionSettings=[];_.each(c,function(c){_.isNull(c.value)?a.optionsToRemove.push({namespace:c.namespace,optionName:c.optionName}):(b||!("PreferredStartTime"===c.optionName||"UpdateLevel"===c.optionName||"InstanceRefreshEnabled"===c.optionName))&&a.optionSettings.push(c)});return a.optionSettings.length||a.optionsToRemove.length}},notifications:{partialUrl:"partials/environment/configuration/edit/notifications.html",optionsFilter:function(a){return"aws:elasticbeanstalk:sns:topics"===
a.namespace}},rds:{partialUrl:"partials/environment/configuration/edit/rds.html",optionsFilter:function(a){return"aws:rds:dbinstance"===a.namespace||"console:rds:dbinstance"===a.namespace},prepareOptions:function(b){d.input={configurationSource:amzn.beanstalk.constants.CONFIG_SOURCE_ENVIRONMENT,environmentName:d.environment.environmentName,rdsEngine:b.DBEngine.value,rdsEngineVersion:b.DBEngineVersion.value,rdsInstanceClass:b.DBInstanceClass.value};d.rdsConfig.initialize(d.input);d.rdsConfig.fetchRdsOptions([{namespace:"aws:rds:dbinstance",
optionName:"DBEngine"},{namespace:"aws:rds:dbinstance",optionName:"DBEngineVersion"},{namespace:"aws:rds:dbinstance",optionName:"DBInstanceClass"}],[{namespace:"aws:rds:dbinstance",optionName:"DBEngine",value:b.DBEngine.value},{namespace:"aws:rds:dbinstance",optionName:"DBEngineVersion",value:b.DBEngineVersion.value},{namespace:"aws:rds:dbinstance",optionName:"DBInstanceClass",value:b.DBInstanceClass.value}]);b.DBInstanceId&&(d.currentEdit.rdsConsoleRedirectUrl=a("rdsRedirectUrl")(y.getCurrentRegion(),
b.DBInstanceId.value));b.MultiAZDatabase.value=b.MultiAZDatabase.value?"true":"false";b.MultiAZDatabase.originalValue=b.MultiAZDatabase.value;b.DBAllocatedStorage.value=parseInt(b.DBAllocatedStorage.value,10);b.DBAllocatedStorage.originalValue=parseInt(b.DBAllocatedStorage.originalValue,10);b.DBAllocatedStorage.modifiable=_.str.include(b.DBEngine.value,"sqlserver")}},rds_create:{partialUrl:"partials/environment/configuration/edit/rds-create.html",optionsFilter:function(a){return"aws:ec2:vpc"===a.namespace},
validateForm:function(){return _.isUndefined(d.vpcConfig)||d.vpcConfig.validateInputs(d.input)},prepareOptions:function(a){d.input={configurationSource:amzn.beanstalk.constants.CONFIG_SOURCE_SOLUTION_STACK,solutionStack:{solutionStackName:d.environment.solutionStackName}};d.rdsConfig.initialize(d.input);d.vpcConfig&&(d.input.includeRds=!0,d.input.excludeEc2=!0,d.input.excludeElb=!0,d.input.vpcId=_.find(a,function(a){return"VPCId"===a.option.name}).value,d.vpcConfig.initialize(d.input,d))},processMessage:function(a){var b=
[];a.templateSpecification={templateSnippets:[]};u.addRdsOptions(a.templateSpecification,b,d.input);d.vpcConfig&&u.addRdsVpcOptions(b,d.input);a.optionSettings=a.optionSettings.concat(_.invoke(b,"serialize"));return!0}},updates_deployments:{partialUrl:"partials/environment/configuration/edit/updates-deployments.html",optionsFilter:function(a){var b="aws:autoscaling:updatepolicy:rollingupdate"===a.namespace,c="aws:autoscaling:asg"===a.namespace&&"MaxSize"===a.name,d="aws:autoscaling:asg"===a.namespace&&
"MinSize"===a.name,e="aws:elasticbeanstalk:command"===a.namespace,f="aws:elasticbeanstalk:healthreporting:system"===a.namespace&&"HealthCheckSuccessThreshold"===a.name;return b&&"Timeout"===a.name?!1:b||c||d||e||f},prepareOptions:function(a){_.each("BatchSize MaxBatchSize MaxSize MinInstancesInService MinSize Timeout".split(" "),function(b){b=a[b];_.isNull(b.value)||(b.value=parseInt(b.value,10));_.isNull(b.originalValue)||(b.originalValue=parseInt(b.originalValue,10))});d.input={BatchSize:a.BatchSize.value,
BatchSizeType:a.BatchSizeType.value,UpdateType:a.RollingUpdateEnabled.value?a.RollingUpdateType.value:amzn.beanstalk.constants.DISABLED,MaxBatchSize:a.MaxBatchSize.value,MinInstancesInService:a.MinInstancesInService.value,PauseTime:a.PauseTime.value}},processInputs:function(){var a=d.currentEdit.options,b=d.input,c=b.UpdateType!==amzn.beanstalk.constants.DISABLED,e=a.DeploymentPolicy.value===amzn.beanstalk.constants.ROLLING||a.DeploymentPolicy.value===amzn.beanstalk.constants.ROLLING_WITH_ADDITIONAL_BATCH,
f=b.UpdateType===amzn.beanstalk.constants.TIME,g=b.UpdateType===amzn.beanstalk.constants.HEALTH||f;a.BatchSize.value=e?b.BatchSize:a.BatchSize.originalValue;a.BatchSizeType.value=e?b.BatchSizeType:a.BatchSizeType.originalValue;a.RollingUpdateEnabled.value=c;a.RollingUpdateType.value=c?b.UpdateType:a.RollingUpdateType.originalValue;a.MaxBatchSize.value=g?b.MaxBatchSize:a.MaxBatchSize.originalValue;a.MinInstancesInService.value=g?b.MinInstancesInService:a.MinInstancesInService.originalValue;a.PauseTime.value=
f?b.PauseTime:a.PauseTime.originalValue},processMessage:function(a){var b=a.optionSettings;a.optionsToRemove=a.optionsToRemove||[];a.optionSettings=[];_.each(b,function(b){_.isNull(b.value)?a.optionsToRemove.push({namespace:b.namespace,optionName:b.optionName}):("RollingUpdateEnabled"===b.optionName||"RollingUpdateType"===b.optionName||"MaxBatchSize"===b.optionName||"MaxSize"===b.optionName||"MinInstancesInService"===b.optionName||"MinSize"===b.optionName||"PauseTime"===b.optionName||"Timeout"===
b.optionName||"BatchSize"===b.optionName||"BatchSizeType"===b.optionName||"IgnoreHealthCheck"===b.optionName||"DeploymentPolicy"===b.optionName||"HealthCheckSuccessThreshold"===b.optionName)&&a.optionSettings.push(b)});return a.optionSettings.length||a.optionsToRemove.length},validateForm:function(){var a=d.currentEdit.options,b=d.input;if(d.isSingleInstance)return!0;if(!a.DeploymentPolicy||a.DeploymentPolicy&&(a.DeploymentPolicy.value===amzn.beanstalk.constants.ROLLING||a.DeploymentPolicy.value===
amzn.beanstalk.constants.ROLLING_WITH_ADDITIONAL_BATCH))if(_.isUndefined(b.BatchSizeType)||_.isUndefined(b.BatchSize)||b.BatchSizeType===amzn.beanstalk.constants.FIXED&&b.BatchSize>a.MaxSize.value)return!1;return b.UpdateType!==amzn.beanstalk.constants.DISABLED&&b.UpdateType!==amzn.beanstalk.constants.IMMUTABLE&&b.MinInstancesInService>=a.MaxSize.value?!1:!0}},worker:{partialUrl:"partials/environment/configuration/edit/worker.html",optionsFilter:function(a){return"aws:elasticbeanstalk:sqsd"===a.namespace},
prepareOptions:function(a){var b=["application/json","application/x-www-form-urlencoded","application/xml","text/plain"];b.push(a.MimeType.value);d.input={mimeTypeOptions:_.unique(b),workerMimeType:a.MimeType.value}},processInputs:function(){var a=d.input;d.currentEdit.options.MimeType.value="custom"===a.workerMimeType?a.workerCustomMimeType:a.workerMimeType}}};d.loadDashboard=C;d.loadEdit=function(){d.currentPartialUrl="partials/environment/configuration/edit-configuration.html"};d.showDatabaseCreate=
!1;d.data={};d.warningMessages=[];d.removeStatic=function(a){d.currentEdit.statics=_.reject(d.currentEdit.statics,function(b){return a===b.name})};d.curStatic={};d.addStatic=function(){var a=d.curStatic;if(!a.name&&!a.value)return delete a.nameError,!0;if(!a.name)return a.nameError=w.localize("static_path_required"),!1;var b=_.findWhere(d.currentEdit.statics,{name:a.name});b?b.value=a.value:(a.userDefined=!0,d.currentEdit.statics.push(a));d.curStatic={};return!0};d.removeProperty=function(a){d.currentEdit.envProperties=
_.reject(d.currentEdit.envProperties,function(b){return a===b.name})};d.curProperty={};d.addProperty=function(){var a=d.curProperty;if(!a.name&&!a.value)return delete a.nameError,!0;if(!a.name)return a.nameError=w.localize("property_name_required"),!1;var b=_.findWhere(d.currentEdit.envProperties,{name:a.name});b?b.value=a.value:(a.userDefined=!0,d.currentEdit.envProperties.push(a));d.curProperty={};return!0};d.editClicked=function(a){b.search("edit",a);J(a)||C()};var G;d.validateConfiguration=function(){d.currentEdit.processInputs&&
d.currentEdit.processInputs();d.curProperty={};d.curStatic={};G={applicationName:P,environmentName:T,optionSettings:[],optionsToRemove:[]};var a=amzn.beanstalk.utils.deepClone(d.currentEdit.statics),b=amzn.beanstalk.utils.deepClone(d.currentEdit.envProperties),f=!1;_.each(d.currentEdit.options,function(c){if(c.value!==c.originalValue){if(!(""===c.originalValue&&(!c.value||0===c.value.length))){f=!0;var e=c.value;_.isArray(e)&&(e=e.join(","));G.optionSettings.push({namespace:c.option.namespace,optionName:c.option.name,
value:e})}}else U.test(c.option.namespace)?(e=_.findWhere(a,{name:c.option.name}))?e.value===c.originalValue&&d.removeStatic(c.option.name):(f=!0,G.optionsToRemove.push({namespace:c.option.namespace,optionName:c.option.name})):"aws:elasticbeanstalk:application:environment"===c.option.namespace&&((e=_.findWhere(b,{name:c.option.name}))?e.value===c.originalValue&&d.removeProperty(c.option.name):(f=!0,G.optionsToRemove.push({namespace:c.option.namespace,optionName:c.option.name})))});_.each(a,function(a){f=
!0;G.optionSettings.push({namespace:d.currentEdit.options.NodeStaticFiles?"aws:elasticbeanstalk:container:nodejs:staticfiles":d.currentEdit.options.JavaStaticFiles?"aws:elasticbeanstalk:container:java:staticfiles":d.currentEdit.options.StaticFiles?_.isDefined(d.currentEdit.options.GOPATH)?"aws:elasticbeanstalk:container:golang:staticfiles":"aws:elasticbeanstalk:container:python:staticfiles":"aws:elasticbeanstalk:environment:proxy:staticfiles",optionName:a.name,value:a.value||""})});_.each(b,function(a){f=
!0;G.optionSettings.push({namespace:"aws:elasticbeanstalk:application:environment",optionName:a.name,value:a.value||""})});d.currentEdit.scheduledActions&&d.currentEdit.scheduledActions.isDirty()&&(f=!0,G.optionSettings=G.optionSettings.concat(d.currentEdit.scheduledActions.getOptionSettings()),G.optionsToRemove=G.optionsToRemove.concat(d.currentEdit.scheduledActions.getOptionsToRemove()));d.currentEdit.processMessage&&(f=d.currentEdit.processMessage(G,d.currentEdit.options)||f);if(f)R().then(M).then(N).then(Q)["catch"](function(a){return a?
x.alertErrorWithContinue(a).then(function(a){return a?c.when():c.reject()}):c.when()}).then(K)["catch"](function(a){e.error(a.messageKey,{message:amzn.beanstalk.utils.htmlEntities(a.error.message)})})["finally"](function(){D("",!1)});else D("",!1),C()};d.saveConfiguration=function(){d.validateMessage?(D(w.localize("saving_changes"),!0),r.update(Y,{optionSettings:d.validateMessage.optionSettings,optionsToRemove:d.validateMessage.optionsToRemove,templateSpecification:d.validateMessage.templateSpecification}).then(function(a){b.search().confirm&&
b.replace();k.goToEnvironmentDashboard(d.environment)},function(a){e.error("update_settings_alert",{message:amzn.beanstalk.utils.htmlEntities(a.message)},amzn.beanstalk.constants.ALERT_DURATION)})["finally"](function(){D("",!1)})):D("",!1)};d.showProxyServerWarning=function(){return!_.isNull(d.currentEdit)&&d.currentEdit.options.ProxyServer?_.contains(d.currentEdit.options.ProxyServer.option.valueOptions,"none"):!1};d.rootVolumeTypeChange=function(){"io1"===d.currentEdit.options.RootVolumeType.value?
d.currentEdit.isCustomVolumeSize=!0:d.currentEdit.options.RootVolumeIOPS.value=null};var V;d.$watch("environment",function(a,b){d.isEnvironmentUpdating=amzn.beanstalk.utils.isEnvironmentUpdating(a);h.cancel(V);d.isEnvironmentUpdating&&(V=h.autoRefresh(L,amzn.beanstalk.constants.DASHBOARD_ENVIRONMENT_REFRESH_DELAY_FAST))},!0);d.$watch("resources",I,!0);var Z=m.getSelectSuccessCallback(d.data,m.constants.INSTANCE_PROFILES);d.refreshCertificates=m.lookupForSelect(d.data,m.constants.CERTIFICATES).refresh;
d.refreshKeyPairs=m.lookupForSelect(d.data,m.constants.KEY_PAIRS).refresh;d.refreshInstanceProfiles=m.lookupForSelect(d.data,m.constants.INSTANCE_PROFILES,function(a){_.find(a,function(a){return a.displayName===amzn.beanstalk.constants.DEFAULT_INSTANCE_PROFILE||a.value===O})||a.unshift({displayName:w.localize("create_profile"),value:O});return Z(a)},null,!0).refresh;d.refreshServiceRoles=m.lookupForSelect(d.data,m.constants.IAM_ROLES,null,null,!0).refresh;d.refreshSecurityGroups=m.lookupForSelect(d.data,
m.constants.SECURITY_GROUPS).refresh;d.refreshSqsQueues=m.lookupForSelect(d.data,m.constants.SQS_QUEUES).refresh;d.legacy||(d.rdsConfig=new z,_.find(d.configurationSettings.optionSettings,function(a){return"aws:ec2:vpc"===a.namespace&&"VPCId"===a.optionName&&!_.isBlank(a.value)})&&(d.vpcConfig=new E));I();d.getSearch=function(){return angular.toJson(b.search())};d.$watch("getSearch()",function(a,b){if(a!==b){var c=angular.fromJson(a);(!d.data.sections||_.isUndefined(c.edit)||_.isUndefined(c.confirm)&&
!J(c.edit))&&C()}});C()}])})();(function(){amzn.beanstalk.configuration.controller("UpdatesDeploymentsEditController",["$scope","Alerts","ApplicationsService",function(a,b,c){var d=[],e={};a.autoScalingSectionCollapsed=!0;a.constants=amzn.beanstalk.constants;a.isEnhancedPolicies=-1<_.indexOf(a.currentEdit.options.RollingUpdateType.option.valueOptions,amzn.beanstalk.constants.IMMUTABLE);a.isSingleInstance=!!_.findWhere(a.availableOptions,{name:"EnvironmentType",value:amzn.beanstalk.constants.service.environmentType.SINGLE_INSTANCE});
a.processRollingUpdate=function(b){(b===a.constants.HEALTH||b===a.constants.TIME)&&_.each(e,function(c){if(!("PauseTime"===c.optionName&&b!==a.constants.TIME)&&_.isNull(a.input[c.optionName])){var d=parseInt(c.value,10);a.input[c.optionName]=_.isNaN(d)?c.value:d}})};a.currentEdit.options.DeploymentPolicy.value||(a.currentEdit.options.DeploymentPolicy.value=a.isSingleInstance?amzn.beanstalk.constants.ALL_AT_ONCE:amzn.beanstalk.constants.ROLLING);a.currentEdit.options.MaxBatchSize.originalValue||d.push({namespace:"aws:autoscaling:updatepolicy:rollingupdate",
optionName:"MaxBatchSize"});a.currentEdit.options.MinInstancesInService.originalValue||d.push({namespace:"aws:autoscaling:updatepolicy:rollingupdate",optionName:"MinInstancesInService"});a.currentEdit.options.PauseTime.originalValue||d.push({namespace:"aws:autoscaling:updatepolicy:rollingupdate",optionName:"PauseTime"});a.currentEdit.options.RollingUpdateType.originalValue||d.push({namespace:"aws:autoscaling:updatepolicy:rollingupdate",optionName:"RollingUpdateType"});0<d.length?(a.loadingValues=
!0,c.describeSettings({applicationName:a.application.applicationName,environmentName:a.environment.environmentName,options:d,optionSettings:[{namespace:"aws:autoscaling:updatepolicy:rollingupdate",optionName:"RollingUpdateEnabled",value:!0}]}).then(function(b){b&&(b[0]&&b[0].optionSettings)&&(e=b[0].optionSettings,a.processRollingUpdate(a.input.UpdateType))},function(a){b.error("unable_to_retrieve_defaults",{message:amzn.beanstalk.utils.htmlEntities(a.message)})})["finally"](function(){a.loadingValues=
!1})):a.loadingValues=!1}])})();(function(){amzn.beanstalk.environment.controller("EnvironmentDashboardController",["$log","$scope","$templateCache","Alerts","AutoRefresher","BeanstalkLocations","ConfigurationSettings","EnvironmentAlertService","EnvironmentHelper","Environments","EnvironmentsService","Events","FeaturesService","LocalizationService","ReportingService","UploadModal","PlatformsCollection","UpdatePlatformVersionModal","UpdateSolutionStackModal","resolves",function(a,b,c,d,e,f,g,h,k,l,n,p,q,r,m,t,s,v,w,x){var u=amzn.beanstalk.constants.DASHBOARD_EVENT_REFRESH_DELAY,
y=amzn.beanstalk.constants.DASHBOARD_EVENT_REFRESH_DELAY_FAST,B=x.configurationSettings||{},z=x.managedActions||[],E=x.resources||{},A=x.solutionStacks,F=[],C,I=!1,D=0,J;k.injectSelectedApplicationAndEnvironment(b);b.causes=[];b.customPlatforms=x.customPlatforms;b.deployUrl=f.getPathToApplicationVersions(b.application,b.environment);b.editConfigurationUrl=f.getPathToEnvironmentConfiguration(b.environment);b.events=p;b.managedActionsUrl=f.getPathToEnvironmentManagedActionsDashboard(b.environment);
b.eventsUrl=f.getPathToEnvironmentEvents(b.environment);b.isRefreshingEnvironment=!1;b.isRefreshingEvents=!1;b.isUpdating=!1;b.newerStackAvailable=!1;b.monitoringUrl=f.getPathToMonitoring(b.environment);b.platforms=new s(A.solutionStacks,b.environment.tier);b.platformUpdateScheduled=!1;b.closeEnvironmentAlert=function(a){h.hideEnvironmentAlert(b.environment.environmentId,a)};b.fixIt=function(a){m.event("environmentFix:start",{alertId:a});f.goToFixEnvironment(b.environment,a)};b.getEnvironmentCauses=
function(a){return a&&a.causes||[]};b.getTemplatePath=function(a){a="partials/environment/fix/alert-"+a+".html";return c.get(a)?a:"partials/environment/fix/alert-unknown.html"};b.isAlertShown=function(a){return!h.isAlertHidden(b.environment.environmentId,a.alertId)};b.isNewerSolutionStackAvailable=function(a){if(!_.isNull(A.solutionStacks)&&a&&a.solutionStackName&&!amzn.beanstalk.utils.isEnvironmentLegacy(a))return b.platforms.isMoreRecentSolutionStackAvailable(a.solutionStackName)};b.isPlatformUpdatable=
function(){if(!b.environment.isReady()||b.environment.isLegacy())return!1;if(_.isDefined(b.environment.platform)&&b.environment.platform.isCustomPlatform())return b.customPlatforms.platformIsUpgradable(b.environment.platform);var a=b.platforms.getAvailablePlatformVersions(b.environment.solutionStackName),c=_.reject(a,function(a){return a.solutionStackName===b.environment.solutionStackName});return 1<=_.size(c)&&_.size(c)<_.size(a)};b.isPlatformUpdateScheduled=function(){return!_.isEmpty(z)&&z[0].actionType===
amzn.beanstalk.constants.ACTION_TYPES.PLATFORM_UPDATE};b.launchUploadForm=function(){var a=r.localize("upload_and_deploy_title"),c=r.localize("deploy_button_text"),d=r.localize("cancel");t.launchUpload(a,c,d,b.application,b.environment,B,E.instances)};b.refreshClicked=function(){b.isRefreshingEnvironment||b.refreshEnvironment();b.isRefreshingEvents||b.refreshEvents();b.isRefreshingEnvironmentHealth||b.refreshEnvironmentHealth()};b.refreshEvents=function(){b.isUpdating&&(D+=1,F=p.eventsByEnvironmentId[b.environment.environmentId]?
_.clone(p.eventsByEnvironmentId[b.environment.environmentId].events):[]);b.isRefreshingEvents=!0;p.refreshEnvironment(b.environment.environmentId,5)["finally"](function(){b.isRefreshingEvents=!1;var a=!_.isEqual(F,p.eventsByEnvironmentId[b.environment.environmentId].events),c=4<=D&&b.isUpdating;(a||c)&&b.refreshEnvironment()})};b.refreshEnvironment=function(){b.isRefreshingEnvironment=!0;D=0;F=p.eventsByEnvironmentId[b.environment.environmentId]?_.clone(p.eventsByEnvironmentId[b.environment.environmentId].events):
[];return l.refreshEnvironment(b.environment.environmentId)["finally"](function(){b.isRefreshingEnvironment=!1})};b.refreshEnvironmentHealth=function(){var c=b.environment.environmentId;if(!_.isBlank(b.environment.healthStatus))return b.isRefreshingEnvironmentHealth=!0,n.describeEnvironmentHealth(c,{attributeNames:"Causes"}).then(function(a){b.environmentHealth=a},function(b){a.error("Could not retrieve environment health with id "+c+": ",b)})["finally"](function(){b.isRefreshingEnvironmentHealth=
!1})};b.toggleCausesPopover=function(){f.goToEnvironmentHealthDashboard(b.environment)};b.updatePlatformVersion=function(){b.isPlatformUpdatable()&&(b.environment.platform.isCustomPlatform()?v.open(b.environment):w.launchUpdate(b.environment,B,A.solutionStacks))};b.$watch("environment",function(a){"Terminated"===a.status?f.goToAllApplications():(b.isRefreshingEnvironmentHealth||b.refreshEnvironmentHealth(),b.isUpdating=amzn.beanstalk.utils.isEnvironmentUpdating(a),b.newerStackAvailable=b.isNewerSolutionStackAvailable(a),
b.platformUpdateScheduled=b.isPlatformUpdateScheduled(),e.cancel(J),e.cancel(void 0),J=e.autoRefresh(b.refreshEvents,b.isUpdating?y:u),b.environmentHealthString=r.localizeSafe("environment_health_"+(b.environment.health||"").toLowerCase(),null,b.environment.health),b.isUpdating?(b.environmentStatusString=r.localize(amzn.beanstalk.utils.getEnvironmentStatusString(b.environment)),I=!0):I&&(I=!1,g.refreshEnvironment(b.environment.environmentId).then(function(a){B=a},function(a){d.error("unable_to_refresh_configurations",
{message:amzn.beanstalk.utils.htmlEntities(a.message)})})),"Launching"===a.status&&b.experimental&&f.goToLaunchEnvironment(b.environment))},!0);b.$watch("environmentHealth",function(a,c){a!==c&&(b.isRefreshingEnvironment||b.refreshEnvironment(),b.causes=b.getEnvironmentCauses(a),e.cancel(C),C=e.autoRefresh(b.refreshEnvironmentHealth,b.isUpdating?y:u))},!0);b.refreshEvents()}])})();(function(){amzn.beanstalk.environment.controller("AddProfileFixController",["$scope","Alerts","ApplicationsService","BeanstalkLocations","Environments","Externals","ExternalsService","LocalizationService","ReportingService",function(a,b,c,d,e,f,g,h,k){function l(){a.status=h.localize("creating_instance_profile");g.createDefaultInstanceProfile().then(function(b){a.data[p].options=_.reject(a.data[p].options,function(a){return a.value===n});a.data[p].options.push(b);a.input.iamInstanceProfile=b.value;
a.process()},function(c){a.status=null;"AccessDenied"===c.code?a.view="missing":b.error("log_fix_create_profile_alert",{message:amzn.beanstalk.utils.htmlEntities(c.message)})})}var n="%create-default-profile-value%",p=f.constants.INSTANCE_PROFILES;a.alertId=d.getAlertId();a.data={};a.input={};a.status=null;a.view="add";a.cancelHref=d.getPathToEnvironmentDashboard(a.environment);a.cancel=function(){var b="add_profile";"missing"===a.view?b="missing_permissions":"error"===a.view&&(b="unexpected_error");
k.event("environmentFix:cancel:"+b,{alertId:a.alertId});d.goToEnvironmentDashboard(a.environment)};a.process=function(){a.input.iamInstanceProfile===n?l():(a.status=h.localize("alert_fix_validating"),c.validateSettings({applicationName:a.environment.applicationName,environmentName:a.environment.environmentName,optionSettings:[{namespace:"aws:autoscaling:launchconfiguration",optionName:"IamInstanceProfile",value:a.input.iamInstanceProfile}]}).then(function(b){0<b.length?(a.view="warning",a.warningMessages=
b):a.saveConfiguration()},function(a){b.error("validate_settings_alert",{message:amzn.beanstalk.utils.htmlEntities(a.message)},amzn.beanstalk.constants.ALERT_DURATION)})["finally"](function(){a.status=null}))};var q=f.getSelectSuccessCallback(a.data,p),r=f.getSelectFailCallback(a.data,p);a.refreshInstanceProfiles=f.lookupForSelect(a.data,p,function(b){var c=_.find(b,function(a){return a.displayName===amzn.beanstalk.constants.DEFAULT_INSTANCE_PROFILE||a.value===n});c||(c={displayName:h.localize("create_profile"),
value:n},b.unshift(c));a.input.iamInstanceProfile||(a.input.iamInstanceProfile=c.value);return q(b)},function(b){"AccessDenied"===b.code?a.view="missing":(a.view="error",a.error=b);return r(b)}).refresh;a.warningMessages=[];a.displayStatus=null;a.savingConfiguration=!1;a.loadEdit=function(){k.event("environmentFix:cancel:warnings",{alertId:a.alertId});d.goToEnvironmentDashboard(a.environment)};a.saveConfiguration=function(){a.savingConfiguration=!0;a.status=a.displayStatus=h.localize("alert_fix_saving");
e.update(a.environment.environmentId,{optionSettings:[{namespace:"aws:autoscaling:launchconfiguration",optionName:"IamInstanceProfile",value:a.input.iamInstanceProfile}]}).then(function(b){d.goToEnvironmentDashboard(a.environment)},function(a){b.error("alert_failed_update",{message:amzn.beanstalk.utils.htmlEntities(a.message)})})["finally"](function(){a.status=a.displayStatus=null;a.savingConfiguration=!1})}}])})();(function(){amzn.beanstalk.environment.EnvironmentHealthDashboardController={};amzn.beanstalk.environment.controller("EnvironmentHealthDashboardController",["$log","$pageVisibility","$q","$scope","$timeout","$interval","$window","AutoRefresher","Alerts","BeanstalkLocations","Environments","EnvironmentsService","ExternalsService","Health","Modal","RegionUtil","LocalizationService","localizeHealthStatusFilter","scaleTimeToDurationFilter","configurationSettings","environment",function(a,b,c,d,e,f,g,
h,k,l,n,p,q,r,m,t,s,v,w,x,u){var y=amzn.beanstalk.constants.DASHBOARD_HEALTH_REFRESH_DELAY;a=amzn.beanstalk.constants.HEALTH_STATUS_CODES;var B=amzn.beanstalk.constants.DASHBOARD_HEALTH_REFRESH_INSTANCES_LIMIT,z=s.localize("close"),E=s.localize("error_title"),A,F,C,I=s.localize("health_reboot_instance_required"),D=s.localize("health_reboot_instance_confirm"),J=s.localize("health_reboot_instance_title"),M,Q=s.localize("health_terminate_instance_required"),R=s.localize("health_terminate_instance_confirm"),
N=s.localize("health_terminate_instance_title"),K=function(){var a=jQuery(window).height(),b=jQuery("#health-container"),c=jQuery("#health-container table"),c=c&&0<c.length?c[0].scrollWidth:0,a=a-291,a=Math.round(338>a?338:a)+"px";b.css("height",a);b.width()<=c?b.css("overflow-x","auto"):b.css("overflow-x","hidden");714>=b.width()?b.css("margin-bottom","30px"):b.css("margin-bottom","auto")},L=function(){0<d.countDown?(d.countDown-=1,A=e(function(){L()},1E3)):(e.cancel(A),d.autoRefreshChecked?d.reload(!0):
d.countDown=null)},P=function(){d.autoRefreshEnabled||(d.lastRefreshDuration=w(C),d.showLastRefresh=d.showLastRefresh||"0"!==d.lastRefreshDuration.charAt(0),F||(F=f(P,y)))};d.actionSelections={reboot:{name:"reboot",display:"health_action_reboot",execute:function(){if(d.selectedInstance){var a=s.localize("health_reboot_instance_question",{instanceId:d.selectedInstance});m.confirm(a,J,D).then(function(a){a&&q.rebootInstances(d.selectedInstance).then(function(){k.info("health_reboot_instance_started");
d.clearInstanceSelection()},function(a){d.reportError("unable_to_reboot_instance",a)})})}else m.alertError(null,J,I,E,null,z,!0)}},terminate:{name:"terminate",display:"health_action_terminate",execute:function(){if(d.selectedInstance){var a=s.localize("health_terminate_instance_question",{instanceId:d.selectedInstance});m.confirm(a,N,R).then(function(a){a&&q.terminateInstances(d.selectedInstance).then(function(){k.info("health_terminate_instance_started");d.clearInstanceSelection()},function(a){d.reportError("unable_to_terminate_instance",
a)})})}else m.alertError(null,N,Q,E,null,z,!0)}}};d.statusSelections=[{key:"total",value:"Total",name:s.localize("health_status_remove_filter"),menuName:s.localize("health_status_filter_by"),overallName:s.localize("health_status_total"),disabled:!0}];d.statusSummary=[{key:"total",name:s.localize("health_status_total")}];_.each(a,function(a,b){var c="No Data"===b?"noData":b.toLowerCase(),e=v(b);d.statusSummary.push({key:c,name:e});d.statusSelections.push({key:c,value:b,name:e,menuName:s.localize("health_status_menu_prefix",
{name:e})});if("warning"===c||"degraded"===c)e=s.localize("health_status_filter_or_worse",{name:e}),d.statusSelections.push({key:c+"OrWorse",value:b,name:e,menuName:s.localize("health_status_menu_prefix",{name:e}),showWorse:!0})});d.autoRefreshChecked=!0;d.autoRefreshStarted={};d.countDown=0;d.environment=u;d.hideDetails={};d.hideDetailsAll=!1;d.instanceSelection={};d.loadingHealth=null;d.refreshing=!1;d.reloadOptions={};d.selectedStatus=d.statusSelections[0];d.showCauses=!0;d.changeInstanceSelection=
function(a){d.selectedInstance===a?d.selectedInstance=d.instanceSelection[a]?a:null:(d.instanceSelection[d.selectedInstance]=!1,d.selectedInstance=a)};d.clearInstanceSelection=function(){d.selectedInstance=null;_.each(d.instanceSelection,function(a,b,c){c[b]=!1})};d.filterByStatus=function(a){_.each(d.statusSelections,function(b){b.disabled&&(b.disabled=!1);b.key===a.key&&(b.disabled=!0)});d.reloadOptions.filterBy=a;d.reload(!1)};d.reload=function(a){d.healthEnabled&&(d.pageVisible?(d.refreshing=
a,d.loadingHealth=!0,a&&e.cancel(A),c.all([r.loadEnvironmentHealthData(u.environmentId,a),r.loadInstancesHealthData(u.environmentId,a,d.reloadOptions)]).then(function(b){d.environmentHealth=b[0];d.instancesHealth=b[1];C||e(function(){K()},500);C=C&&!a?C:(new Date).getTime();d.instancesHealth.original.length<B?d.autoRefreshEnabled=!0:(d.autoRefreshEnabled=!1,P());d.autoRefreshEnabled&&(d.autoRefreshChecked&&a)&&(M=d.instancesHealth.refreshedAt>d.environmentHealth.refreshedAt?d.instancesHealth.refreshedAt:
d.environmentHealth.refreshedAt,b=Math.ceil((y-((new Date).getTime()-M))/1E3),d.countDown=0<b&&9>b?b:9,L())},function(a){d.reportError("unable_to_retrieve_health",a)})["finally"](function(){d.refreshing=!1;d.loadingHealth=!1})):(d.countDown=9,L()))};d.reportError=function(a,b){b.message=amzn.beanstalk.utils.htmlEntities(b.message);"unable_to_retrieve_health"===a&&g.clientReporting.fault(_.string.contains(b.message,"Rate exceeded")?"health:rateExceeded":"health:retrieveError",b);g.clientReporting.fault("health:error",
b);k.error(a,b)};d.sortBy=function(a){d.reloadOptions.sortReverse=d.reloadOptions.sortKey!==a?!1:!d.reloadOptions.sortReverse;d.reloadOptions.sortKey=a;d.reload(!1)};d.toggleDetails=function(a){a?(d.hideDetails[a]=!d.hideDetails[a],d.hideDetailsAll=_.every(d.hideDetails)):(d.hideDetailsAll=!d.hideDetailsAll,d.hideDetails.overall=d.hideDetailsAll,_.each(d.instancesHealth.list,function(a){a.causes&&0<a.causes.length&&(d.hideDetails[a.instanceId]=d.hideDetailsAll)}))};d.processDeploymentPopover=function(a){d.deploymentPopover=
a&&a.hasDeployment?a:null;return!!d.deploymentPopover};d.processInstancePopover=function(a){d.instancePopover=a;return!!d.instancePopover};d.processXrayPopover=function(a){d.xrayPopover=d.xrayEnabled&&0<a;return!!d.xrayPopover};d.openXray=function(a,b,c){if(d.xrayEnabled&&0<b){var e='service("'+(d.xrayTracingName||d.environment.cname.toLowerCase())+'")';"http.status"===a?(e+=" AND "+a+" >= "+c,500!==c&&(e+=" AND "+a+" < "+(c+100))):e+=" AND "+a+" >= "+b;g.open(g.location.origin+"/xray/home?region="+
t.getCurrentRegion()+"#/traces?timeRange=PT1M&filter="+encodeURIComponent(e))}};d.$watch("environment.environmentId",function(){var a=_.findWhere(x.optionSettings,{namespace:"aws:elasticbeanstalk:healthreporting:system",optionName:"SystemType"}),b=_.findWhere(x.optionSettings,{namespace:"aws:elasticbeanstalk:xray",optionName:"XRayEnabled"});d.healthEnabled=a&&"enhanced"===a.value.toLowerCase();d.xrayEnabled=b&&"true"===b.value;d.xrayEnabled&&((a=_.findWhere(x.optionSettings,{namespace:"aws:elasticbeanstalk:application:environment",
optionName:"AWS_XRAY_TRACING_NAME"}))||(a=_.findWhere(x.optionSettings,{namespace:"aws:elasticbeanstalk:application:environment",optionName:"XRAY_TRACING_NAME"})),d.xrayTracingName=a?a.value:null);_.isNull(d.xrayTracingName)&&_.isNull(d.environment.cname)&&(d.xrayEnabled=!1);d.healthEnabled&&(C=null,d.autoRefreshEnabled=!1,d.enableAutoRefresh=!0,d.hideDetails={overall:!1},d.hideDetailsAll=!1,d.pageVisible=!0,d.reloadOptions={sortKey:"launchedAt",sortReverse:!1},d.reload(!0))});d.$watch("autoRefreshChecked",
function(a){a?null===d.countDown&&d.reload(!0):(e.cancel(A),d.countDown=null)});jQuery(window).resize(K);d.$on("$destroy",function(){F&&f.cancel(F);A&&e.cancel(A);jQuery(window).off("resize",K)});b.$on("hide",function(){d.pageVisible=!1});b.$on("show",function(){d.pageVisible=!0})}])})();(function(){amzn.beanstalk.EnvironmentHelper={};amzn.beanstalk.environment.service("EnvironmentHelper",["$log","BeanstalkLocations","Applications","Environments","RegionUtil","Alerts",function(a,b,c,d,e,f){var g=amzn.beanstalk.constants.ALERT_DURATION;return{injectSelectedApplication:function(d){var e=b.getApplicationName();e?_.has(c.applicationsByName,e)?(d.application=c.applicationsByName[e],d.$on(amzn.beanstalk.constants.APPLICATION_CHANGED,function(a,b){b.applicationName===e&&(d.application=b)}),
d.$on(amzn.beanstalk.constants.APPLICATION_DELETED,function(c,d){d.applicationName===e&&(a.info("Application with name "+e+" deleted; going to all applications page."),b.goToAllApplications())})):(f.error("no_such_application",{applicationName:amzn.beanstalk.utils.htmlEntities(e)},g),a.warn("Missing application with name: "+e),b.goToAllApplications("no_such_application",{applicationName:e})):(f.error("no_application_selected",{},g),a.error("No application was selected"),b.goToAllApplications("no_application_selected",
{}))},injectSelectedApplicationAndEnvironment:function(a){var e=b.getApplicationName(),l=b.getEnvironmentId(),n,p;_.isUndefined(l)||(n=d.environmentsById[l],!_.isUndefined(n)&&_.isUndefined(e)&&(e=n.applicationName),p=c.applicationsByName[e]);_.isUndefined(n)||_.isUndefined(p)?(a.application={applicationName:""},a.environment={environmentId:l,health:"grey",solutionStackName:""},f.error("no_such_environment",{environmentId:l},g),b.goToAllApplications("no_such_environment",{environmentId:l})):(a.environment=
n,a.application=p,a.$on(amzn.beanstalk.constants.ENVIRONMENT_CHANGED,function(c,d){d.environmentId===l&&(d.isTerminated()?b.goToAllApplications():a.environment=d)}),a.$on(amzn.beanstalk.constants.ENVIRONMENT_DELETED,function(a,c){c.environmentId===l&&b.goToAllApplications()}))},injectSelectedEnvironment:function(c){var e=b.getEnvironmentId();e?_.has(d.environmentsById,e)?(c.environment=d.environmentsById[e],c.$on(amzn.beanstalk.constants.ENVIRONMENT_CHANGED,function(a,d){d.environmentId===e&&(d.isTerminated()?
b.goToAllApplications():c.environment=d)}),c.$on(amzn.beanstalk.constants.ENVIRONMENT_DELETED,function(c,d){d.environmentId===e&&(a.info("Environment with ID "+e+" deleted; going to all applications page."),b.goToAllApplications())})):(f.error("no_such_environment",{environmentId:amzn.beanstalk.utils.htmlEntities(e)},g),a.warn("Invalid environmentId"),b.goToAllApplications()):(f.error("no_environment_selected",{},g),a.error("No environment was selected"),b.goToAllApplications())}}}])})();(function(){amzn.beanstalk.environment.events={};var a=50,b=2*a;amzn.beanstalk.environment.controller("EnvironmentEventsController",["$scope","$timeout","ApplyManagedActionModal","AutoRefresher","BeanstalkLocations","ConfigurationSettings","EnvironmentHelper","EnvironmentsService","Events","EventSeverities","FeaturesService","LocalizationService","ManagedUpdates","configurationSettings",function(c,d,e,f,g,h,k,l,n,p,q,r,m,t){function s(a){var b=_.findWhere(a.optionSettings,{optionName:"ManagedActionsEnabled",
namespace:"aws:elasticbeanstalk:managedactions"});c.managedUpdatesSupported=!_.isUndefined(b);c.managedUpdatesEnabled=c.managedUpdatesSupported&&"true"===b.value;c.managedUpdatesEnabled&&(c.preferredStartTime=_.findWhere(a.optionSettings,{namespace:"aws:elasticbeanstalk:managedactions",optionName:"PreferredStartTime"}))}function v(a){return Math.ceil(a/c.timeScaling)}function w(a){c.historyRefreshing=!0;c.managedUpdates.refreshHistory(a).then(function(){c.historyRefreshing=!1})}function x(){c.numEventsDisplayed=
a;c.events.refreshEnvironment(c.environment.environmentId,b,c.startTime*c.timeScaling,c.endTime*c.timeScaling,c.selectedSeverity)}k.injectSelectedApplication(c);k.injectSelectedEnvironment(c);var u,y;c.actionTypes=amzn.beanstalk.constants.ACTION_TYPES;c.actionStatuses=amzn.beanstalk.constants.ACTION_STATUSES;c.configurationPath=g.getPathToEnvironmentConfiguration(c.environment);c.events=n;c.historyRefreshing=!1;c.isEnvironmentUpdating=amzn.beanstalk.utils.isEnvironmentUpdating;c.localize=r.localize;
c.managedUpdates=new m;c.numEventsDisplayed=a;c.pendingUpdateRefreshing=!1;c.selectedSeverity=_.first(p.severityLevels);c.severities=p;c.timeScaling=6E4;c.terminated=c.environment.isTerminated();f.autoRefresh(function(){c.maxTime===c.endTime&&(n.loadLatestEvents(c.environment.environmentId,c.selectedSeverity),c.maxTime=c.endTime=v(moment.utc().valueOf()),y=!0)},amzn.beanstalk.constants.EVENTS_REFRESH_DELAY);f=moment.utc();c.minTime=c.absoluteMinTime=c.startTime=function(a){return Math.floor(a/c.timeScaling)}(f.clone().subtract(7,
"weeks").valueOf());c.maxTime=c.endTime=v(f.clone().valueOf());c.hasMoreEvents=function(){return!(!n.eventsByEnvironmentId[c.environment.environmentId]||!(n.eventsByEnvironmentId[c.environment.environmentId].nextToken||n.eventsByEnvironmentId[c.environment.environmentId].events.length>c.numEventsDisplayed))};c.hasMoreHistory=function(){return c.managedUpdates.hasMoreHistory()};c.loadMoreEventsClicked=function(){var d=c.environment.environmentId;c.numEventsDisplayed+=a;!_.isUndefined(n.eventsByEnvironmentId[d].nextToken)&&
!_.isNull(n.eventsByEnvironmentId[d].nextToken)&&c.numEventsDisplayed>n.eventsByEnvironmentId[c.environment.environmentId].events.length-3*a&&c.events.loadMoreEvents(d,b,c.startTime*c.timeScaling,c.endTime*c.timeScaling,c.selectedSeverity)};c.loadMoreHistoryClicked=function(){var a=c.environment.environmentId;c.historyRefreshing=!0;c.managedUpdates.loadMoreHistory(a).then(function(){c.historyRefreshing=!1})};c.managedActionDialog=function(){e.launchApply(c.environment,c.managedUpdates.pendingUpdate)};
c.refresh=x;c.refreshEventsClicked=function(){var a=moment.utc(),a=v(a.clone().valueOf());c.maxTime===c.endTime&&a!==c.endTime?c.endTime=c.maxTime=a:(c.maxTime=a,x())};c.refreshHistoryClicked=function(){w(c.environment.environmentId)};c.$watch("startTime + '-' + endTime",function(){y?y=!1:(u&&d.cancel(u),u=d(x,500))});c.$watch("environment",function(a){a.isTerminated()||h.refreshEnvironment(c.environment.environmentId).then(function(a){s(a)})},!0);t&&(s(t),c.managedUpdatesEnabled&&(w(c.environment.environmentId),
c.pendingUpdateRefreshing=!0,c.managedUpdates.refreshPendingUpdate(c.environment.environmentId).then(function(){c.pendingUpdateRefreshing=!1})))}])})();(function(){amzn.beanstalk.environment.controller("EnvironmentLogsController",["$q","$scope","$timeout","$window","Alerts","EnvironmentHelper","Logs","LocalizationService","EnvironmentsService",function(a,b,c,d,e,f,g,h,k){var l=amzn.beanstalk.constants.BUNDLE,n=amzn.beanstalk.constants.TAIL;f.injectSelectedEnvironment(b);b.refreshingLogs=!1;if(!_.isEmpty(b.environment)){b.logs=new g(b.environment);b.actions=[{name:n,display:"tail_logs"}];_.contains(b.logs.infoTypes,l)&&b.actions.push({name:l,display:"bundle_logs"});
b.refresh=function(a,c){b.refreshingLogs=!0;b.logs.wait(a,c).then(function(){b.logs.orderByTime()},function(a){e.error("logs_retrieve_error_alert",{message:amzn.beanstalk.utils.htmlEntities(a.message)},1E4)})["finally"](function(){b.refreshingLogs=!1})};var p=function(a){k.describeResources(b.environment.environmentId).then(function(c){var d=_.isNull(b.logs.collection)?0:b.logs.collection.length;b.refresh(d+c.instances.length,a)},function(a){e.error("logs_retrieve_error_alert",{message:amzn.beanstalk.utils.htmlEntities(a.message)},
1E4);b.refreshingLogs=!1})};b.requestNewLogs=function(a){(a!==n||a!==l)&&d.clientReporting.assert("EnvironmentLogsController:actionSelected",{unknownAction:a});b.refreshingLogs=!0;b.logs.request(a).then(function(a){p(27)},function(a){e.error("logs_request_error_alert",{message:amzn.beanstalk.utils.htmlEntities(a.message)},1E4);b.refreshingLogs=!1})};b.refresh()}}])})();(function(){function a(a,b){return _.map(amzn.beanstalk.monitoring.getMetricLabelValues(a),function(e){return e+" ("+b.localizeSafe(a.labelType+"_"+e)+")"}).join(", ")}function b(b,d,e,f,g,h,k,l,n,p,q,r,m){function t(){return _.chain(r.dimensions).clone().extend(amzn.beanstalk.monitoring.dimensionsFromResourceForSnippet(q,r.namespace)).map(function(a,b){return{Name:b,Value:a}}).value()}function s(){var a={Resources:{}};a.Resources[b.input.name]={Type:"AWS::CloudWatch::Alarm",Properties:_.chain(b.input.properties).reduce(function(a,
b,c){null!==b&&"undefined"!==typeof b&&(a[c]=b);return a},{}).extend({MetricName:r.metricName,Namespace:r.namespace,Period:b.period,Statistic:r.statistic,Dimensions:t(),AlarmActions:b.input.onAlarm?[b.input.snsTopic]:[],OKActions:b.input.onOK?[b.input.snsTopic]:[],InsufficientDataActions:b.input.onInsufficientData?[b.input.snsTopic]:[]}).value()};return angular.toJson(a)}d.injectSelectedApplication(b);d.injectSelectedEnvironment(b);var v=_.chain(e.alarms).filter(function(a){return a.metricName!==
r.metricName||a.namespace!==r.namespace||!_.isEqual(amzn.beanstalk.monitoring.convertAlarmDimensions(a.dimensions),r.dimensions)?!1:!m||m.alarmName!==a.alarmName}).pluck("alarmName").value();d=p.lookupForSelect(b,p.constants.SNS_TOPICS);this.add=_.bind(function(){!b.input.snsTopic&&(b.input.onAlarm||b.input.onOK||b.input.onInsufficientData)?(b.status=k.localize("creating_topic"),b.input.newTopicName=b.input.newTopicName||this.getDefaultTopicName(),p.createSnsTopic(b.input.newTopicName,b.input.newTopicEmail).then(this.createTopicSuccess,
this.createTopicFailure)):this.updateEnvironment()},this);this.createTopicFailure=function(a){l.error("create_topic_alert",{message:amzn.beanstalk.utils.htmlEntities(a.message)},amzn.beanstalk.constants.ALERT_DURATION);delete b.status};this.createTopicSuccess=_.bind(function(a){b.input.snsTopic=a.value;this.updateEnvironment()},this);this.getDefaultTopicName=function(){var a=_.chain(b.application.applicationName).prune(50,"").slugify().camelize().value(),d=_.chain(b.environment.environmentName).prune(50,
"").slugify().camelize().value(),e=_.prune(q.logicalResourceId,50,"");return _.join("-","ElasticBeanstalkNotifications",a,d,e)};this.onPeriodChange=_.bind(function(a,b){a!==b&&(this.refresh(),g.graphPeriodChanged(a))},this);this.refresh=function(){delete b.data;this.retrieveGraphData()};this.retrieveGraphData=function(){b.endTime=moment.utc().valueOf();b.startTime=moment.utc(b.endTime).subtract(b.period*amzn.beanstalk.monitoring.constants.NUMBER_OF_POINTS*(60===b.period?2:1),"seconds").valueOf();
var a=_.extendCopy(b.graphDef.dimensions,amzn.beanstalk.monitoring.dimensionsFromResource(q,b.graphDef.namespace)),a=_.extend({period:b.period,statistics:[b.graphDef.statistic]},amzn.beanstalk.monitoring.addParameterPrefix(a));h.getMetricStatistics(b.graphDef.namespace,b.graphDef.metricName,moment.utc(b.startTime),moment.utc(b.endTime),a).then(function(a){b.data=a},function(a){l.error("metric_error_alert",{message:amzn.beanstalk.utils.htmlEntities(a.message)},1E4)})};this.updateEnvironment=_.bind(function(){b.status=
k.localize("updating_environment");n.update(b.environment.environmentId,{templateSpecification:{templateSnippets:[{snippetName:b.input.name+amzn.beanstalk.constants.SNIPPET_SUFFIX,snippetContents:s(),order:500,mappings:[]}]}}).then(this.updateSuccess,this.updateFailure)["finally"](function(){delete b.status})},this);this.updateFailure=function(a){l.error("alarm_edit_alert",{message:amzn.beanstalk.utils.htmlEntities(a.message)},amzn.beanstalk.constants.ALERT_DURATION)};this.updateSuccess=function(a){g.goToEnvironmentDashboard(a,
"alarm_editing",{name:b.input.name})};b.add=this.add;b.cancel=function(){g.goToManageAlarms(b.environment)};b.editMode=!!m;b.getEditLink=function(a){return g.getPathToEditAlarm(b.application,b.environment,a.logicalResourceId)};b.graphDef=r;b.input={properties:{}};b.localize=k.localize;b.operators=_.map(amzn.beanstalk.monitoring.OPERATORS,function(a,b){return{operator:a,name:b}});b.otherAlarmResources=f.filter(b.environment.environmentId,function(a){return"AWS::CloudWatch::Alarm"===a.type&&_.contains(v,
a.physicalResourceId)});b.period=amzn.beanstalk.monitoring.constants.DEFAULT_PERIOD;b.periodAsMinutes=function(){return b.period/60};b.periodSelections=amzn.beanstalk.monitoring.TIME_PERIODS;b.refreshTopics=d.refresh;b.metricLabels=a(r,k);b.$watch("input.properties.Threshold",function(a){_.isNumber(a)?b.inputAsAlarms=[{threshold:a}]:b.inputAsAlarms=[]});b.$watch("period",this.onPeriodChange);b.$watch("period",function(a){b.evaluationPeriodSelections=_.filter(_.map([1,2,3,4,5],function(b){return{seconds:a*
b,periods:b}}),function(a){return 86400>=a.seconds});b.input.properties.EvaluationPeriods&&86400<b.input.properties.EvaluationPeriods*a&&delete b.input.properties.EvaluationPeriods})}amzn.beanstalk.monitoring.alarmcontrollers={};amzn.beanstalk.monitoring.controller("ManageAlarmsController",["$scope","EnvironmentHelper","Alarms","Resources","MetricsService","Alerts","Environments","Modal","LocalizationService","BeanstalkLocations","AutoRefresher",function(b,d,e,f,g,h,k,l,n,p,q){function r(a){b.alarms=
_.keyedOn(_.reject(a,function(a){return _.isNull(amzn.beanstalk.monitoring.findResourceForAlarm(a,b.resources.resources))}),"alarmName");b.alarmResources=_.chain(b.resources.resources).where({type:"AWS::CloudWatch::Alarm"}).reject(function(a){return!_.has(b.alarms,a.physicalResourceId)}).value();b.defs=_.reduce(b.alarmResources,function(a,d){var e=b.alarms[d.physicalResourceId],f=amzn.beanstalk.monitoring.findResourceForAlarm(e,b.resources.resources);a[d.physicalResourceId]=amzn.beanstalk.monitoring.metricDefinitionFromAlarm(e,
f);return a},{});b.filters=m.slice();_.each(_.uniq(_.pluck(b.alarms,"metricName")).sort(),function(a){b.filters.push({key:"metric_alarms_filter",metricName:a,filter:function(d){return b.alarms[d.physicalResourceId].metricName===a}})});b.filter||(p.getFilter()?b.filter=_.find(b.filters,function(a){return _.strLeft(a.key,"_alarms_filter")===p.getFilter()?"metric_alarms_filter"!==a.key?!0:a.metricName===p.getGraphMetricName():!1})||m[0]:b.filter=m[0]);_.each(b.alarms,function(a,d){b.startTimes[d]=moment.utc(b.endTime).subtract(a.period*
amzn.beanstalk.monitoring.constants.NUMBER_OF_POINTS*(60===a.period?2:1),"seconds").valueOf();var e=_.reduce(a.dimensions,function(a,b){a[b.name]=b.value;return a},{}),e=_.extend({period:a.period,statistics:[a.statistic]},amzn.beanstalk.monitoring.addParameterPrefix(e));g.getMetricStatistics(a.namespace,a.metricName,moment.utc(b.startTimes[d]),moment.utc(b.endTime),e).then(function(a){b.data[d]=a},function(a){h.error("metric_error_alert",{message:amzn.beanstalk.utils.htmlEntities(a.message)},amzn.beanstalk.constants.ALERT_DURATION)})})}
var m=[{key:"all_alarms_filter",filter:function(){return!0}},{key:"in_alarm_alarms_filter",filter:function(a){return"ALARM"===b.alarms[a.physicalResourceId].stateValue}}];d.injectSelectedApplication(b);d.injectSelectedEnvironment(b);f.injectResources(b.environment.environmentId,b);var t=e.getEnvironmentView(b.environment.environmentId);b.data={};b.endTime=moment.utc().valueOf();b.startTimes={};b.getEditLink=function(a){return p.getPathToEditAlarm(b.application,b.environment,a)};b.getPathToMonitoringDashboard=
function(){return p.getPathToMonitoring(b.environment)};b.removeClicked=function(a){l.confirm(n.localize("delete_alarm_question",{name:a}),n.localize("delete_alarm_title"),n.localize("delete_alarm_confirm",{name:a})).then(function(d){d&&k.update(b.environment.environmentId,{templateSpecification:{templateSnippets:[{snippetName:a+amzn.beanstalk.constants.SNIPPET_SUFFIX,snippetContents:"",order:-1,mappings:[]}]}}).then(function(b){p.goToEnvironmentDashboard(b,"alarm_deleting",{name:a})},function(a){h.error("delete_alarm_error_alert",
{message:amzn.beanstalk.utils.htmlEntities(a.message)},amzn.beanstalk.constants.ALERT_DURATION)})})};b.metricLabels=function(b){return a(b,n)};q.autoRefresh(function(){t.refresh().then(r)},amzn.beanstalk.constants.ALARM_REFRESH_DELAY,!1);b.$watch("resources",function(){r(t.alarms)},!0)}]);amzn.beanstalk.monitoring.controller("EditAlarmController",["$scope","EnvironmentHelper","Alarms","Resources","BeanstalkLocations","MetricsService","LocalizationService","Alerts","Environments","Externals",function(a,
d,e,f,g,h,k,l,n,p){function q(a){if(0===a.dimensions.length||"AWS/ElasticBeanstalk"===a.namespace)return function(b){return _.contains(amzn.beanstalk.monitoring.namespacesFromResource(b),a.namespace)};var b=_.chain(a.dimensions).filter(function(a){return _.contains(amzn.beanstalk.monitoring.PHYS_ID_NAMES,a.name)}).pluck("value").value();return function(a){return _.contains(b,a.physicalResourceId)}}var r=e.getEnvironmentView(g.getEnvironmentId()),m=f.findByLogicalId(g.getEnvironmentId(),g.getLogicalId());
if(m)if(e=r.findByPhysicalId(m.physicalResourceId)){var m=_.find(_.concat(e.alarmActions,e.okactions,e.insufficientDataActions),function(a){return _.startsWith(a,"arn:aws:sns")}),t=f.find(g.getEnvironmentId(),q(e));if(t){var s=amzn.beanstalk.monitoring.metricDefinitionFromAlarm(e,t);d=new b(a,d,r,f,g,h,k,l,n,p,t,s,e);a.input={onAlarm:_.contains(e.alarmActions,m),onOK:_.contains(e.okactions,m),onInsufficientData:_.contains(e.insufficientDataActions,m),snsTopic:m,name:g.getLogicalId(),properties:{Threshold:e.threshold,
AlarmDescription:e.alarmDescription,ComparisonOperator:e.comparisonOperator,EvaluationPeriods:e.evaluationPeriods}};a.period=e.period||a.period;d.refresh()}else l.error("no_such_resource_for_alarm",{alarmName:amzn.beanstalk.utils.htmlEntities(e.alarmName)},amzn.beanstalk.constants.ALERT_DURATION),g.goBack()}else l.error("no_such_alarm",m,amzn.beanstalk.constants.ALERT_DURATION),g.goBack();else l.error("no_such_resource_alarm",{logicalId:g.getLogicalId()},amzn.beanstalk.constants.ALERT_DURATION),g.goBack()}]);
amzn.beanstalk.monitoring.controller("AddAlarmController",["$scope","EnvironmentHelper","Resources","Alarms","BeanstalkLocations","MetricsService","LocalizationService","Alerts","Environments","Externals",function(a,d,e,f,g,h,k,l,n,p){var q=e.findByLogicalId(g.getEnvironmentId(),g.getLogicalId());if(q){var r=new amzn.beanstalk.monitoring.MetricDefinition(g.getGraphNS(),g.getGraphMetricName(),g.getLogicalId(),g.getGraphStatistic(),null,g.getGraphDimensions());f=f.getEnvironmentView(g.getEnvironmentId());
d=new b(a,d,f,e,g,h,k,l,n,p,q,r);d.updateFailure=function(a){l.error("alarm_add_alert",{message:amzn.beanstalk.utils.htmlEntities(a.message)},amzn.beanstalk.constants.ALERT_DURATION)};d.updateSuccess=function(b){g.goToEnvironmentDashboard(b,"alarm_creating",{name:a.input.name})};a.cancel=function(){g.goToEnvironmentMonitoring(a.environment)};a.input.newTopicName=d.getDefaultTopicName();a.period=g.getGraphPeriod()||a.period;d.refresh()}else l.error("no_such_resource_graph",a.graphDef,amzn.beanstalk.constants.ALERT_DURATION),
g.goBack()}])})();(function(){amzn.beanstalk.monitoring.controllers={};amzn.beanstalk.monitoring.controller("EnvironmentMonitoringController",["$scope","EnvironmentHelper","Resources","Alarms","BeanstalkLocations","MetricsService","LocalizationService","SettingsService","settings","$log","$q","AvailableMetrics","Alerts","AutoRefresher","configurationSettings",function(a,b,c,d,e,f,g,h,k,l,n,p,q,r,m){function t(){h.putSettings([a.application.applicationName,B,"metrics",z.METRICS_SETTINGS_VERSION],k).then(function(a){k.versionTag=
a},function(a){l.error("Error saving settings: "+a.message)})}function s(a){if(_.isEmpty(a))return{time:null,value:g.localize("no_data"),unit:null};var b=_.max(a[0].data,function(a){return a[0]});return{time:b[0],value:b[1],unit:a[0].unit}}function v(b,c,e,f){function g(a){return _.map(a,function(a){return amzn.beanstalk.monitoring.metricDefinitionFromObject(a)})}function l(b){var c=e();b&&_.each(d.byEnvironmentId[a.environment.environmentId],function(b){var d=amzn.beanstalk.monitoring.findResourceForAlarm(b,
a.resources.resources);d&&c.push(amzn.beanstalk.monitoring.metricDefinitionFromAlarm(b,d))});return c=_.uniq(c,!1,function(a){return a.toKey()})}var h={current:k.settings[b]?g(k.settings[b]):l(f),values:{},editing:!1,add:function(a,b,d,e,f){var g=new amzn.beanstalk.monitoring.MetricDefinition(b.namespace,b.metricName,a.logicalResourceId,d,e,f);if(_.find(h.current,function(a){return a.toKey()===g.toKey()}))return q.error("metric_exists_alert",{},amzn.beanstalk.constants.ALERT_DURATION),!1;h.current.push(g);
c(g).then(function(a){h.values[g.toKey()]=a});return!0},updateData:function(){_.each(h.current,function(a){c(a).then(function(b){h.values[a.toKey()]=b})})},refresh:function(){h.values={};h.updateData()},refreshClicked:function(){h.refresh()},remove:function(a){h.current=_.reject(h.current,function(b){return _.isEqual(a,b)});delete h.values[a.toKey()]},editClicked:function(){h.editing=!0},saveClicked:function(){amzn.beanstalk.utils.arraysEqual(h.current,k.settings[b])||(k.settings[b]=h.current.slice(),
t());h.editing=!1},cancelClicked:function(){amzn.beanstalk.utils.arraysEqual(h.current,k.settings[b])||(h.current=k.settings[b]?g(k.settings[b]):l(f),h.refresh());h.editing=!1}};return h}function w(a){return _.chain(a).pairs().sortBy(function(a){return a[0]}).map(function(a){return a.join("=")}).value().join("|")}function x(a){return _.chain(a).sortBy("name").map(function(a){return a.name+"="+a.value}).value().join("|")}function u(b){var c=_.isEmpty(E),d=_.chain(E).values().flatten().reject(function(a){return"ALARM"===
a.stateValue}).groupBy("alarmName").value();E=_.groupBy(b,function(a){return _.join("|",a.namespace,a.metricName,x(a.dimensions))});b=_.where(b,{stateValue:"ALARM"});var f=_.filter(b,function(a){return c||_.has(d,a.alarmName)});1===f.length?(b=_.findWhere(a.resources.resources,{physicalResourceId:f[0].alarmName})||{logicalResourceId:g.localize("an_alarm")},q.alert("new_alarm_fired",{alarm:b.logicalResourceId,link:e.getPathToManageAlarms(a.environment,"in_alarm")},"alert-error",null,"alarm_fire_alert_title",
!1)):_.isEmpty(f)?_.isEmpty(b)&&(q.removeAlert("new_alarm_fired"),q.removeAlert("new_alarms_fired")):q.alert("new_alarms_fired",{num:f.length,link:e.getPathToManageAlarms(a.environment,"in_alarm")},"alert-error",null,"alarm_fire_alert_title",!1)}function y(){for(var b=0,c=amzn.beanstalk.monitoring.TIME_PERIODS.length-1;a.graphTimeRange/amzn.beanstalk.monitoring.TIME_PERIODS[b]>amzn.beanstalk.monitoring.MAX_DATA_POINTS&&b<amzn.beanstalk.monitoring.TIME_PERIODS.length;)b+=1;for(;1>a.graphTimeRange/
amzn.beanstalk.monitoring.TIME_PERIODS[c]&&0<c;)c-=1;_.each(a.graphPeriodSelections,function(a,d,e){e[d].disabled=d<b||d>c});var d=a.graphPeriod,d=d.value>a.graphPeriodSelections[b].value?d:a.graphPeriodSelections[b],d=d.value<a.graphPeriodSelections[c].value?d:a.graphPeriodSelections[c];a.graphPeriod=d}b.injectSelectedApplication(a);b.injectSelectedEnvironment(a);c.injectResources(a.environment.environmentId,a);a.legacy=amzn.beanstalk.utils.isEnvironmentLegacy(a.environment);a.legacy&&q.error("no_legacy_alarms",
{domain:amzn.beanstalk.constants.DOCS_DOMAIN},amzn.beanstalk.constants.LONG_ALERT_DURATION);var B=a.environment.environmentId,z=amzn.beanstalk.monitoring.constants;a.localize=g.localize;a.rangeSelections=amzn.beanstalk.monitoring.TIME_RANGES;a.periodSelections=amzn.beanstalk.monitoring.TIME_PERIODS;a.graphPeriodSelections=_.map(amzn.beanstalk.monitoring.TIME_PERIODS,function(a){return{value:a,disabled:!1}});a.overviewPeriod=k.settings.overviewPeriod||3600;a.graphTimeRange=k.settings.graphTimeRange||
10800;a.graphPeriod={value:k.settings.graphPeriodValue||60,disabled:!1};a.refreshAvailableMetrics=function(a){return p.refresh(B,a)};a.loadMetrics=function(a){var b=p.byEnvironmentId[B];return!_.has(b,a.logicalResourceId)?p.refresh(B,a):n.when(b[a.logicalResourceId])};a.availableMetrics=p.expectEnvironment(B);a.graphs=new v("graphDefs",function(b){var c=n.defer(),d=moment.utc().subtract(a.graphTimeRange,"seconds"),e=moment.utc(),g=_.findWhere(a.resources.resources,{logicalResourceId:b.logicalId});
if(!g)return q.error("no_such_resource_graph",b,amzn.beanstalk.constants.ALERT_DURATION),c.reject("No graph with logicalId "+b.logicalId),c.promise;g=_.extendCopy(b.dimensions,amzn.beanstalk.monitoring.dimensionsFromResource(g,b.namespace));g=_.extend({period:a.graphPeriod.value,statistics:[b.statistic]},amzn.beanstalk.monitoring.addParameterPrefix(g));f.getMetricStatistics(b.namespace,b.metricName,d,e,g).then(function(a){c.resolve({data:a,startTime:d.valueOf(),endTime:e.valueOf()})},function(a){c.reject(a)});
return c.promise},function(){var b=[],c=_.findWhere(m.optionSettings,{namespace:"aws:elasticbeanstalk:healthreporting:system",optionName:"SystemType"});c&&"enhanced"===c.value.toLowerCase()&&b.push(new amzn.beanstalk.monitoring.MetricDefinition("AWS/ElasticBeanstalk","EnvironmentHealth",a.environment.environmentName,z.statistics.MAXIMUM,"Environment Health"));var c=_.findWhere(a.resources.resources,{logicalResourceId:"AWSEBLoadBalancer"}),d=_.findWhere(a.resources.resources,{logicalResourceId:"AWSEBAutoScalingGroup"});
c&&(b.push(new amzn.beanstalk.monitoring.MetricDefinition("AWS/ELB","Latency","AWSEBLoadBalancer",z.statistics.AVERAGE)),b.push(new amzn.beanstalk.monitoring.MetricDefinition("AWS/ELB","RequestCount","AWSEBLoadBalancer",z.statistics.SUM,"Sum Requests")));d&&(b.push(new amzn.beanstalk.monitoring.MetricDefinition("AWS/EC2","CPUUtilization","AWSEBAutoScalingGroup",z.statistics.AVERAGE,"CPU Utilization")),b.push(new amzn.beanstalk.monitoring.MetricDefinition("AWS/EC2","NetworkIn","AWSEBAutoScalingGroup",
z.statistics.MAXIMUM,"Max Network In")),b.push(new amzn.beanstalk.monitoring.MetricDefinition("AWS/EC2","NetworkOut","AWSEBAutoScalingGroup",z.statistics.MAXIMUM,"Max Network Out")));return b},!0);a.$watch("graphs.current",function(b){b?a.groupedGraphs=_.reduce(b,function(a,b,c,d){1===c%2?a.push([d[c-1],b]):c===d.length-1&&a.push([b]);return a},[]):delete a.groupedGraphs},!0);a.overviews=new v("overviewDefs",function(b){var c=n.defer(),d=moment.utc().subtract(2*a.overviewPeriod,"seconds"),e=moment.utc(),
g=_.findWhere(a.resources.resources,{logicalResourceId:b.logicalId});if(!g)return q.error("no_such_resource_overview",b,amzn.beanstalk.constants.ALERT_DURATION),c.reject("No overview with logicalId "+b.logicalId),c.promise;g=_.extendCopy(b.dimensions,amzn.beanstalk.monitoring.dimensionsFromResource(g,b.namespace));g=_.extend({period:a.overviewPeriod,statistics:[b.statistic]},amzn.beanstalk.monitoring.addParameterPrefix(g));f.getMetricStatistics(b.namespace,b.metricName,d,e,g).then(function(a){c.resolve(s(a))},
function(a){c.reject(a)});return c.promise},function(){var b=[],c=_.findWhere(a.resources.resources,{logicalResourceId:"AWSEBLoadBalancer"}),d=_.findWhere(a.resources.resources,{logicalResourceId:"AWSEBAutoScalingGroup"});c&&b.push(new amzn.beanstalk.monitoring.MetricDefinition("AWS/ELB","HealthyHostCount","AWSEBLoadBalancer",z.statistics.AVERAGE,"Healthy Host Count"));d&&b.push(new amzn.beanstalk.monitoring.MetricDefinition("AWS/EC2","CPUUtilization","AWSEBAutoScalingGroup",z.statistics.AVERAGE,
"CPU Utilization"));c&&(b.push(new amzn.beanstalk.monitoring.MetricDefinition("AWS/ELB","Latency","AWSEBLoadBalancer",z.statistics.AVERAGE)),b.push(new amzn.beanstalk.monitoring.MetricDefinition("AWS/ELB","RequestCount","AWSEBLoadBalancer",z.statistics.SUM,"Sum Requests")));d&&(b.push(new amzn.beanstalk.monitoring.MetricDefinition("AWS/EC2","NetworkIn","AWSEBAutoScalingGroup",z.statistics.MAXIMUM,"Max Network In")),b.push(new amzn.beanstalk.monitoring.MetricDefinition("AWS/EC2","NetworkOut","AWSEBAutoScalingGroup",
z.statistics.MAXIMUM,"Max Network Out")));return b},!1);a.getLink=function(b){return a.graphs.editing?e.getPathToMonitoring(a.environment):e.getRelativePathToGraphDetail(a.application,a.environment,b.namespace,b.metricName,b.logicalId,b.statistic,a.graphPeriod.value,a.graphTimeRange,b.dimensions)};a.goToAlarm=function(b){return e.goToAlarm(a.application,a.environment,b.namespace,b.metricName,b.logicalId,b.statistic,a.graphPeriod.value,b.dimensions)};var E={};u(d.byEnvironmentId[a.environment.environmentId]);
r.autoRefresh(function(){d.refreshEnvironment(a.environment.environmentId).then(u)},amzn.beanstalk.constants.ALARM_REFRESH_DELAY,!1);a.hasAlarm=function(b){var c=_.findWhere(a.resources.resources,{logicalResourceId:b.logicalId});if(!c)return!1;b=_.join("|",b.namespace,b.metricName,w(_.extendCopy(b.dimensions,amzn.beanstalk.monitoring.dimensionsFromResource(c,b.namespace))));return _.has(E,b)};a.isInAlarm=function(b){var c=_.findWhere(a.resources.resources,{logicalResourceId:b.logicalId});if(!c)return!1;
b=_.join("|",b.namespace,b.metricName,w(_.extendCopy(b.dimensions,amzn.beanstalk.monitoring.dimensionsFromResource(c,b.namespace))));return!!_.findWhere(E[b],{stateValue:"ALARM"})};a.goToManageAlarms=function(){e.goToManageAlarms(a.environment,"in_alarm")};a.refreshGraphs=function(){y();a.graphs.refresh()};a.onGraphPeriodChange=function(b){b&&b.value!==a.graphPeriod.value&&(a.graphPeriod={value:b.value,disabled:b.disabled},k.settings.graphPeriodValue=a.graphPeriod.value,a.refreshGraphs(),t())};a.$watch("graphTimeRange",
function(b,c){a.refreshGraphs();b!==c&&(k.settings.graphTimeRange=a.graphTimeRange,t())});a.$watch("overviewPeriod",function(b,c){a.overviews.refresh();b!==c&&(k.settings.overviewPeriod=a.overviewPeriod,t())});a.toggleDeploymentsClicked=function(){l.error("Totally hiding those deployments")};r.autoRefresh(function(){a.graphs.updateData();a.overviews.updateData()},amzn.beanstalk.constants.MONITORING_REFRESH_DELAY,!1)}]);amzn.beanstalk.monitoring.controller("GraphDetailController",["$scope","EnvironmentHelper",
"resources","BeanstalkLocations","MetricsService","LocalizationService","Alerts","$timeout","AutoRefresher",function(a,b,c,d,e,f,g,h,k){function l(a){return!!a&&moment(a,"YYYY-MM-DDTHH:mm:ssZ").isValid()}function n(){var b=_.findWhere(c.resources,{logicalResourceId:a.graphDef.logicalId});b?(b=_.extendCopy(a.graphDef.dimensions,amzn.beanstalk.monitoring.dimensionsFromResource(b,a.graphDef.namespace)),b=_.extend({period:a.period,statistics:[a.graphDef.statistic]},amzn.beanstalk.monitoring.addParameterPrefix(b)),
e.getMetricStatistics(a.graphDef.namespace,a.graphDef.metricName,moment.utc(a.startTime),moment.utc(a.endTime),b).then(function(b){q=null;a.data=b},function(a){q=null;g.error("metric_error_alert",{message:amzn.beanstalk.utils.htmlEntities(a.message)},1E4)})):g.error("no_such_resource_graph",a.graphDef,amzn.beanstalk.constants.ALERT_DURATION)}function p(b){q&&h.cancel(q);q=h(function(){b||delete a.data;n()},r?0:500);r=!1}var q,r;b.injectSelectedApplication(a);b.injectSelectedEnvironment(a);a.localize=
f.localize;a.periodSelections=amzn.beanstalk.monitoring.TIME_PERIODS;a.period=d.getGraphPeriod()||amzn.beanstalk.monitoring.constants.DEFAULT_PERIOD;a.statistics=amzn.beanstalk.monitoring.constants.statistics;a.graphDef=new amzn.beanstalk.monitoring.MetricDefinition(d.getGraphNS(),d.getGraphMetricName(),d.getLogicalId(),d.getGraphStatistic(),null,d.getGraphDimensions());b=moment.utc();a.minTime=b.clone().subtract(9,"hours").valueOf();a.absoluteMinTime=b.clone().subtract(14,"days").valueOf();a.maxTime=
b.clone().valueOf();d.getRelativeTime()?(a.endTime=b.clone().valueOf(),a.startTime=b.clone().subtract(d.getRelativeTime(),"seconds").valueOf()):(a.startTime=l(d.getStartTime())?moment.utc(d.getStartTime()).valueOf():b.clone().subtract(3,"hours").valueOf(),a.endTime=l(d.getEndTime())?moment.utc(d.getEndTime()).valueOf():b.clone().valueOf());a.jumpTo=function(b,c){a.endTime=a.maxTime=moment.utc().valueOf();a.startTime=moment.utc(a.endTime).subtract(b,c).valueOf();a.minTime=moment.utc(a.endTime).subtract(3*
b,c).valueOf();a.absoluteMinTime=moment.utc(a.endTime).subtract(14,"days").valueOf();d.relativeTimeChanged(moment.duration(b,c).asSeconds());r=!0};a.$watch("period",function(a,b){a!==b&&(r=!0,p(),d.graphPeriodChanged(a))});a.$watch("graphDef.statistic",function(a,b){a!==b&&(r=!0,p(),d.graphStatisticChanged(a))});a.$watch("startTime + '-' + endTime",function(a,b){a!==b&&!r&&d.relativeTimeChanged(null);p()});k.autoRefresh(function(){p(!0)},amzn.beanstalk.constants.MONITORING_REFRESH_DELAY,!1)}])})();(function(){amzn.beanstalk.monitoring.directives={};amzn.beanstalk.monitoring.directive("addMetric",["LocalizationService","AvailableMetrics",function(a,b){return{replace:!0,restrict:"E",scope:{addRequested:"&",availableMetrics:"=",loadMetrics:"&",refreshAvailableMetrics:"&",resources:"=",title:"@"},templateUrl:"partials/environment/monitoring/add-metric.html",link:function(b){var d={Average:"Avg",Maximum:"Max",Minimum:"Min",SampleCount:"Count",Sum:"Sum"},e=amzn.beanstalk.monitoring.constants,f=function(b){if(!(this instanceof
f))return new f(b);var c=_.keys(b).join(", ");this.group=_.isBlank(c)?void 0:c;this.label=_.isEmpty(b)?a.localize("no_dimension"):_.values(b).join(", ");this.value=b},g=function(){b.newStatistic&&(b.newMetric&&!b.descriptionChanged)&&(b.newDescription=b.newStatistic.shortName+" "+b.newMetric.metricName.replace(/_/g," "))},h=function(f){b.statistics=_.map(e.statistics,function(b,c){return{name:a.localize("statistics_"+b.toLowerCase()),shortName:d[b],value:b}});f=_.findWhere(b.statistics,{value:f});
f.name=a.localize("statistics_default",{name:amzn.beanstalk.utils.htmlEntities(f.name)});b.newStatistic=f};b.add=function(){b.addRequested({$description:b.newDescription,$dimensions:b.newDimensions.value,$metric:b.newMetric,$resource:b.newResource,$statistic:b.newStatistic.value})?(b.status=a.localize("added_metric_status",{description:amzn.beanstalk.utils.htmlEntities(b.newDescription)}),b.newStatistic=e.statistics.AVERAGE,b.newMetric=null,b.newDescription=null,delete b.statistics,delete b.newStatistic,
b.descriptionChanged=!1,b.addMetricForm.resetValidation()):b.status=null};b.getMetricDimensionOptions=function(){return _.isDefined(b.newMetric)?_.map(b.newMetric.dimensionOptions,f):[]};b.groupByNamespace=function(a){if("AWS/ElasticBeanstalk"===a.namespace)return"Environment";if(_.startsWith(a.namespace,"ElasticBeanstalk"))return"CloudWatch Logs"};b.newResourceHasMetrics=function(){return _.isNull(b.newResource)||!_.has(b.availableMetrics,b.newResource.logicalResourceId)||"ready"!==b.availableMetrics[b.newResource.logicalResourceId].state?
!1:!_.isEmpty(b.availableMetrics[b.newResource.logicalResourceId].data)};b.onDescriptionChange=function(){b.descriptionChanged=!0};b.refreshMetrics=function(){b.refreshAvailableMetrics({$resource:b.newResource}).then(function(){b.newMetric=_.first(b.availableMetrics[b.newResource.logicalResourceId].data)})};b.$watch("availableMetrics[newResource.logicalResourceId].data",function(a){a&&b.newMetric&&(b.newMetric=_.find(a,function(a){return _.isEqual(a,b.newMetric)}))});b.$watch("newMetric",function(a){a?
(b.newDimensions=a.dimensionOptions&&1===a.dimensionOptions.length?new f(_.first(a.dimensionOptions)):new f({}),a=new amzn.beanstalk.monitoring.MetricDefinition(a.namespace,a.metricName),h(a.defaultStatistic||e.statistics.AVERAGE),g()):b.newDimensions=new f({})});b.$watch("newResource",function(a){a&&(b.loadMetrics({$resource:a}).then(function(){b.newMetric=_.first(b.availableMetrics[b.newResource.logicalResourceId].data)}),b.descriptionChanged||(b.newDescription=null))});b.$watch("newStatistic",
g);b.newMetric=null;b.newResource=null}}}]);amzn.beanstalk.monitoring.directive("awsMetricOverview",["LocalizationService",function(a){return{restrict:"E",scope:{metricDef:"=",metricTime:"=",metricUnit:"=",metricValue:"=",editing:"=",removeClicked:"&",inAlarm:"="},templateUrl:"partials/environment/monitoring/overview-hero.html",replace:!0,link:function(b){b.getIncludePath=function(){var a=amzn.beanstalk.monitoring.constants.statistics,d=amzn.beanstalk.monitoring.constants.units;if(!b.metricUnit)return"partials/environment/monitoring/heroes/generic.html";
var e=b.metricDef.statistic.toLocaleLowerCase();if(a.SAMPLE_COUNT.toLowerCase()===e)return"partials/environment/monitoring/heroes/generic.html";a=(b.metricDef.unit||b.metricUnit).toLocaleLowerCase();return d.LABELS===a?"partials/environment/monitoring/heroes/labels.html":_.endsWith(a,d.BITS)||_.endsWith(a,d.BYTES)?"partials/environment/monitoring/heroes/bytes.html":d.PERCENT===a?"partials/environment/monitoring/heroes/percent.html":_.endsWith(a,d.SECONDS)?"partials/environment/monitoring/heroes/time.html":
"partials/environment/monitoring/heroes/generic.html"};b.metricTimeAsString=function(){return moment(b.metricTime).format(a.localize("overviewTimeFormat"))}}}}]);amzn.beanstalk.monitoring.directive("awsMetricGraph",["LocalizationService","scaleBytesFilter","labelsFilter","$window","$timeout",function(a,b,c,d,e){var f=function(b){return moment(b).format(a.localize("smallGraphTimeFormat"))};return{scope:{addAlarmClicked:"&",addAlarmVisible:"=",alarms:"=",editing:"=",graphData:"=",graphDef:"=",graphSize:"=",
hasAlarms:"=",hideHeader:"@",inAlarm:"=",maxTime:"=",minTime:"=",removeClicked:"&",seeAlarmsClicked:"&",showHover:"@"},templateUrl:function(a,b){return"partials/environment/monitoring/"+b.graphSize+"-graph.html"},link:function(a,h){function k(c,d){if(a.graphData){var e=a.graphData[0].unit.toLocaleLowerCase();return b(c,e,d.tickDecimals)}}function l(b){return c(b,a.graphDef)}function n(){var b,c=a.graphDef.unit||(0<a.graphData.length?a.graphData[0].unit.toLocaleLowerCase():null);if(c===r.units.LABELS)b=
l;else if(c&&(_.endsWith(c,r.units.BYTES)||_.endsWith(c,r.units.BITS))&&a.graphDef.statistic!==r.statistics.SAMPLE_COUNT)b=k;return b}function p(){var b;_.isEmpty(a.alarms)||(b=_.isArray(a.alarms)?_.max(_.pluck(a.alarms,"threshold")):a.alarms.threshold);if(m){var c=m.getOptions().yaxes[0].max,d=1.2*b;m.getOptions().yaxes[0].max=b&&b>m.getYAxes()[0].datamax?d:void 0;return c!==d}return!1}function q(){p()&&(m.setupGrid(),m.draw())}var r=amzn.beanstalk.monitoring.constants,m=null,t={legend:{show:!1},
xaxis:{mode:"time",color:"rgba(68, 68, 68, 1.0)",tickColor:"rgba(238, 238, 238, 1.0)",tickFormatter:f},yaxis:{color:"rgba(68, 68, 68, 1.0)",tickColor:"rgba(238, 238, 238, 1.0)"},series:{lines:{show:!0,fill:!0,fillColor:"rgba(51, 102, 153, 0.15)"},points:{show:!0,fill:!0,fillColor:"rgba(51, 102, 153, 1.0)",radius:3},hoverable:"true"===a.showHover},colors:["rgba(51, 102, 153, 1.0)"],grid:{borderWidth:0,labelMargin:12,markings:function(){function b(a){return{yaxis:{from:a.threshold,to:a.threshold},color:"#ff0000"}}
return _.isEmpty(a.alarms)?[]:_.isArray(a.alarms)?_.map(a.alarms,b):[b(a.alarms)]},hoverable:"true"===a.showHover}},s,v;"true"===a.showHover&&(s=h.find("div.hover-point"),v=$(d));a.$watch("alarms",q,!0);a.$watch("graphData",function(b){b&&0!==b.length&&(m?e(function(){var c=n();m.setData(b);p();m.getOptions().xaxes[0].max=a.maxTime;m.getOptions().xaxes[0].min=a.minTime?moment.utc(a.minTime).subtract(1,"minutes").valueOf():a.minTime;c&&(m.getOptions().yaxes[0].tickFormatter=c);m.setupGrid();m.draw()}):
e(function(){var c=h.find("div.chart");c&&!(0>=c.width())&&(t.xaxis.max=a.maxTime,t.xaxis.min=a.minTime?moment.utc(a.minTime).subtract(1,"minutes").valueOf():a.minTime,t.yaxis.tickFormatter=n(),m=$.plot(c,b,t),q(),"true"===a.showHover&&h.find("div.chart").bind("plothover",function(b,c,d){if(d){a.$apply(function(){var b=n()||function(a){return a.toFixed(3)};a.hoverItem={time:d.datapoint[0],value:b(d.datapoint[1],{tickDecimals:3})}});b=s.outerWidth();c=s.outerHeight();var e=v.width()+v.scrollLeft(),
f=v.height()+v.scrollTop();s.css("left",d.pageX+b+5<e?d.pageX+5:d.pageX-(b+5));s.css("top",d.pageY+c+5<f?d.pageY+5:d.pageY-(c+5));s.show()}else s.hide(),s.css("left","0").css("top","0")}))}))},!0)}}}]);amzn.beanstalk.monitoring.directive("uniqueLogicalId",function(){return{require:"ngModel",link:function(a,b,c,d){function e(a,b){_.findWhere(b,{logicalResourceId:a})?d.$setValidity("resourceExists",!1):d.$setValidity("resourceExists",!0)}c.uniqueLogicalId&&(d.$parsers.unshift(function(b){e(b,a.resources);
return b}),a.$watch("resources",function(a){e(d.$viewValue,a)}))}}})})();(function(){amzn.beanstalk.application.controller("SaveConfigController",["$scope","Alerts","BeanstalkLocations","EnvironmentHelper","LocalizationService","SavedConfigurations",function(a,b,c,d,e,f){d.injectSelectedEnvironment(a);d.injectSelectedApplication(a);var g=function(a){a="TooManyConfigurationTemplatesException"===a.code?e.localize("too_many_configuration_templates"):a.message;b.error("unable_save_configuration_message",{message:amzn.beanstalk.utils.htmlEntities(a)})};a.inProgress=!1;a.cancelRequested=
function(){c.goBack()};a.saveConfiguration=function(){a.configName&&(a.inProgress=!0,f.createSavedConfiguration({applicationName:a.application.applicationName,description:a.configDescription,environmentId:a.environment.environmentId,templateName:a.configName}).then(function(){c.goToApplicationConfigurations(a.application.applicationName)},g)["finally"](function(){a.inProgress=!1}))}}])})();(function(){amzn.beanstalk.environment.SwapCNAMEsController={};amzn.beanstalk.environment.controller("SwapCNAMEsController",["$scope","EnvironmentHelper","Environments","EnvironmentsService","BeanstalkLocations","Alerts",function(a,b,c,d,e,f){b.injectSelectedApplication(a);a.hasDefaultEnvironment=!!e.getEnvironmentId();a.inProgress=!1;a.sourceEnvironments=_.filter(c.environmentsByApplication[a.application.applicationName],amzn.beanstalk.utils.isEnvironmentSwappable);a.destinationEnv=2<=a.sourceEnvironments.length?
a.sourceEnvironments[1]:null;a.hasDefaultEnvironment?(b.injectSelectedEnvironment(a),a.sourceEnv=a.environment):a.sourceEnv=1<=a.sourceEnvironments.length?a.sourceEnvironments[0]:null;a.destinationEnvironments=_.filter(a.sourceEnvironments,function(b){return a.sourceEnv?b.environmentId!==a.sourceEnv.environmentId:!0});a.cancelRequested=function(){a.hasDefaultEnvironment?e.goToEnvironmentDashboard(a.sourceEnv):e.goToAllApplications()};a.sourceEnvironmentChanged=function(){a.destinationEnvironments=
_.filter(a.sourceEnvironments,function(b){return a.sourceEnv?a.sourceEnv.environmentId!==b.environmentId:!0});a.sourceEnv&&(a.destinationEnv&&a.sourceEnv.environmentId===a.destinationEnv.environmentId)&&(a.destinationEnv=null)};a.swapCNAMEs=function(){a.inProgress=!0;d.swapCNAMEs(a.sourceEnv.environmentId,a.destinationEnv.environmentId).then(function(){c.refreshEnvironment(a.sourceEnv.environmentId);c.refreshEnvironment(a.destinationEnv.environmentId);f.info("swap_cname_success",{destination:amzn.beanstalk.utils.htmlEntities(a.destinationEnv.environmentName),
source:amzn.beanstalk.utils.htmlEntities(a.sourceEnv.environmentName)},amzn.beanstalk.constants.ALERT_DURATION);a.hasDefaultEnvironment?e.goToEnvironmentDashboard(a.sourceEnv):e.goToAllApplications();a.inProgress=!1},function(b){f.error("swap_cname_failure",{message:amzn.beanstalk.utils.htmlEntities(b.message)},amzn.beanstalk.constants.ALERT_DURATION);a.inProgress=!1})}}])})();(function(){amzn.beanstalk.environment.controller("TerminateEnvironmentModalController",["$scope","ConfigurationOptionsService","Environments","LocalizationService","Resources","ebStatusIndicator",function(a,b,c,d,e,f){a.environment=a.dialog.context.environment;a.errorMessage=null;a.environmentHasTerminationDependencies=function(){return a.environment.hasCname()||_.isDefined(a.database)||a.logStreamingEnabled()?!0:!1};a.getDatabaseEndpoint=function(){return!_.isDefined(a.database)?"":d.localize("card_rds_value_endpoint",
_.reduce(a.database.properties,function(a,b){a[b.name]=b.value;return a},{}))};a.logRetentionEnabled=function(){return a.logStreamingEnabled&&"false"===a.deleteOnTerminate.value};a.logStreamingEnabled=function(){return _.isDefined(a.streamLogs)&&"true"===a.streamLogs.value};a.terminateEnvironment=function(){c.terminate(a.environment.environmentId).then(function(){a.dialog.resolve(a.environment)},function(b){a.errorMessage=d.localize("unable_to_terminate_environment",{environmentName:amzn.beanstalk.utils.htmlEntities(a.environment.environmentName),
message:amzn.beanstalk.utils.htmlEntities(b.message)})})};f.setMessage("resolving_resources_status");e.getOrFetchResourcesForEnvironment(a.environment.environmentId).then(function(c){a.database=_.findWhere(c.resources,{logicalResourceId:"AWSEBRDSDatabase"});f.setMessage("describing_configuration_settings_status");return b.describeSettings({applicationName:a.environment.applicationName,environmentName:a.environment.environmentName})}).then(function(b){b=_.isArray(b)?_.first(b):b;a.dbDeletionPolicy=
_.findWhere(b.optionSettings,{namespace:"aws:rds:dbinstance",optionName:"DBDeletionPolicy"});a.streamLogs=_.findWhere(b.optionSettings,{namespace:"aws:elasticbeanstalk:cloudwatch:logs",optionName:"StreamLogs"});a.deleteOnTerminate=_.findWhere(b.optionSettings,{namespace:"aws:elasticbeanstalk:cloudwatch:logs",optionName:"DeleteOnTerminate"});a.retentionInDays=_.findWhere(b.optionSettings,{namespace:"aws:elasticbeanstalk:cloudwatch:logs",optionName:"RetentionInDays"})})["finally"](f.clear)}])})();(function(){amzn.beanstalk.environment.controller("UploadModalController",["$q","$scope","Alerts","Applications","ApplicationsService","BeanstalkLocations","ConfigurationOptionsService","Environments","LocalizationService","OptionSetting","UploadModal",function(a,b,c,d,e,f,g,h,k,l,n){b.batchSize=null;b.batchSizeType=null;b.batchSizeDisplay=100;b.constants=amzn.beanstalk.constants;b.deploymentCollapsed=!0;b.deploymentPolicy=null;b.deploymentStatus=null;b.deployUrl="";b.errorMessage=null;b.healthThreshold=
null;b.input={};b.ignoreHealthCheck=null;b.maxSize=null;b.modal=n;b.submitted=!1;b.uploader={};var p=function(a){b.deploymentStatus=k.localize("creating_application_version_status",{versionLabel:amzn.beanstalk.utils.htmlEntities(b.versionLabel)});return e.createVersion(b.modal.application.applicationName,b.versionLabel,a,"")},q=function(){var a=[];if(b.modal.hasRollingDeployments){b.deploymentPolicy&&b.deploymentPolicy.isDirty()&&a.push(b.deploymentPolicy.serialize());if(!b.deploymentPolicy||b.deploymentPolicy.value===
amzn.beanstalk.constants.ROLLING||b.deploymentPolicy.value===amzn.beanstalk.constants.ROLLING_WITH_ADDITIONAL_BATCH)b.batchSize&&b.batchSize.isDirty()&&a.push(b.batchSize.serialize()),b.batchSizeType&&b.batchSizeType.isDirty()&&a.push(b.batchSizeType.serialize());b.ignoreHealthCheck&&b.ignoreHealthCheck.isDirty()&&a.push(b.ignoreHealthCheck.serialize());b.healthThreshold&&b.healthThreshold.isDirty()&&a.push(b.healthThreshold.serialize())}return a},r=function(){var a=q(),a={environmentId:b.modal.environment.environmentId,
optionSettings:a,versionLabel:b.versionLabel};b.deploymentStatus=k.localize("deploying_status",{environmentId:b.modal.environment.environmentId,versionLabel:amzn.beanstalk.utils.htmlEntities(b.versionLabel)});return h.update(b.modal.environment.environmentId,a)},m=function(c){var d=a.defer();_.isObject(c)&&(c=c.message);b.deploymentStatus=null;b.errorMessage=c;return d.promise},t=function(c){return function(d){var e=a.defer();b.deploymentStatus=null;b.error(c,d);b.uploader.reset();return e.promise}},
s=function(c){if(!_.isEmpty(c)){var d=a.defer();c=_.findWhere(c,{severity:"error"});b.deploymentStatus=null;b.errorMessage=_.isUndefined(c)?null:c.optionName+": "+c.message;return d.promise}b.deploymentStatus=k.localize("uploading_status");return b.uploader.upload()},v=function(){var c=q();b.deploymentStatus=k.localize("validating_settings_status");if(!_.isEmpty(c))return e.validateSettings({applicationName:b.modal.application.applicationName,environmentName:b.modal.environment.environmentName,optionSettings:c});
c=a.defer();c.resolve(!0);return c.promise};b.cancel=b.close=function(){b.deploymentStatus=null;b.errorMessage=null;b.modal.open=!1;b.submitted=!1;b.uploadAndDeployForm.resetValidation();b.uploader.reset();b.versionLabel=null};b.deploy=function(){b.errorMessage=null;b.noFileSelected=null;b.submitted=!0;var c=a.defer();b.uploader.hasFileSelected()?b.uploadAndDeployForm.$invalid?c.reject(k.localize("please_correct_errors")):c.resolve(!0):(b.noFileSelected=k.localize("select_a_file_prompt"),c.reject(k.localize("select_a_file_prompt")));
c.promise.then(v,m).then(s,m).then(p,t("unable_to_upload")).then(r,t("unable_to_create_application_version_error")).then(b.close,t("unable_to_deploy_application_version"))};b.error=function(a,c){b.errorMessage=k.localize(a,{message:amzn.beanstalk.utils.htmlEntities(c.message)})};b.fileChanged=function(a){_.isEmpty(b.versionLabel)&&(b.versionLabel=_.strLeftBack(a,"."))};b.$watch("modal",function(a){if(b.modal.open&&b.modal.hasRollingDeployments){b.batchSize=new l(_.findWhere(n.optionSettings,{namespace:"aws:elasticbeanstalk:command",
optionName:"BatchSize"}));b.batchSizeType=new l(_.findWhere(n.optionSettings,{namespace:"aws:elasticbeanstalk:command",optionName:"BatchSizeType"}));if(a=_.findWhere(n.optionSettings,{namespace:"aws:elasticbeanstalk:command",optionName:"DeploymentPolicy"}))b.deploymentPolicy=new l(a),b.deploymentPolicy.value||(b.deploymentPolicy.value=amzn.beanstalk.constants.ROLLING);b.healthThreshold=new l(_.findWhere(n.optionSettings,{namespace:"aws:elasticbeanstalk:healthreporting:system",optionName:"HealthCheckSuccessThreshold"}));
b.ignoreHealthCheck=new l(_.findWhere(n.optionSettings,{namespace:"aws:elasticbeanstalk:command",optionName:"IgnoreHealthCheck"}));b.maxSize=new l(_.findWhere(n.optionSettings,{namespace:"aws:autoscaling:asg",optionName:"MaxSize"}));b.loadingValues=!0;g.describeOptions({applicationName:b.modal.application.applicationName,environmentName:b.modal.environment.environmentName,options:[{namespace:"aws:elasticbeanstalk:command",optionName:"DeploymentPolicy"},{namespace:"aws:elasticbeanstalk:healthreporting:system",
optionName:"HealthCheckSuccessThreshold"}]}).then(function(a){if(a&&a.options){var c=_.findWhere(a.options,{name:"DeploymentPolicy"});a=_.findWhere(a.options,{name:"HealthCheckSuccessThreshold"});b.isEnhancedPolicies=c&&-1<_.indexOf(c.valueOptions,amzn.beanstalk.constants.IMMUTABLE);b.healthThresholdValues=a?a.valueOptions:["Ok"]}},function(a){c.error("unable_to_retrieve_defaults",{message:amzn.beanstalk.utils.htmlEntities(a.message)})})["finally"](function(){b.loadingValues=!1})}},!0);b.$watch("modal.application",
function(a){a&&(b.deployUrl=f.getPathToApplicationVersions(a))},!0)}])})();(function(){amzn.beanstalk.module.controller("ApplicationListController",["$scope","$timeout","$window","Alerts","Applications","ApplicationsService","BeanstalkLocations","CreateNewEnvironmentModal","Environments","LocalizationService","ebDialog",function(a,b,c,d,e,f,g,h,k,l,n){d=g.getApplicationName();a.appsFilter={applicationName:g.getApplicationNameFilter()||d};a.data={apps:e,envs:k};a.onAction=function(d,e){"delete"===d?n.open("partials/application/delete-application-modal.html",{application:e},
{display:"modal"}).then(function(c){b(a.refresh,amzn.beanstalk.constants.DELETE_APPLICATION_REFRESH_DELAY)}):"createEnv"===d?h.open(e):"applicationVersion"===d?g.goToApplicationVersions(e):"savedConfig"===d?g.goToApplicationConfigurations(e.applicationName):"terminatedEnv"===d?g.goToRestoreEnvironment(e):c.clientReporting.assert("applicationList:onAction",{unknownAction:d})};a.refresh=function(){e.refresh();k.refresh()};a.$on("$routeUpdate",function(){a.appsFilter.applicationName=g.getApplicationNameFilter()});
a.$watch("data.apps.applications",function(a){(!a||0===a.length)&&g.goToFirstRun()});a.$watch("appsFilter.applicationName",function(a){g.setApplicationNameFilter(a)});d&&g.setApplicationName()}]);amzn.beanstalk.components.directive("chevronDisplay",["SettingsService",function(a){return{link:function(b,c){var d={settings:{},versionTag:1};b.fullWidth=!1;b.showSidebar=!0;var e=function(){b.fullWidth=c.width()===c.children()[0].clientWidth};b.toggleSidebar=function(){b.showSidebar=!b.showSidebar;d.settings.versionDismissed=
b.showSidebar?-1:amzn.beanstalk.constants.APP_SIDEBAR_DISPLAY_VERSION;a.putSettings(amzn.beanstalk.constants.APP_SIDEBAR_DISPLAY,d).then(function(a){d.versionTag=a});e()};c.bind("resize",function(){b.$apply(e)});a.getSettings(amzn.beanstalk.constants.APP_SIDEBAR_DISPLAY).then(function(a){a&&(d=a,a.settings.versionDismissed&&(b.showSidebar=amzn.beanstalk.constants.APP_SIDEBAR_DISPLAY_VERSION>a.settings.versionDismissed))})}}}]);amzn.beanstalk.components.directive("applicationDisplay",["preload","$log",
"BeanstalkLocations",function(a,b,c){return{replace:!0,restrict:"E",scope:{application:"=",environments:"=",onAction:"&",onEnvironment:"&"},templateUrl:"partials/application-display.html",link:function(a,b,f){a.actions=[{name:"createEnv",display:"create_env_action"},{name:"delete",display:"delete_app_action"},{name:"applicationVersion",display:"view_application_versions_action"},{name:"savedConfig",display:"view_saved_configurations_action"},{name:"terminatedEnv",display:"restore_terminated_env_action"}];
a.pathToApplicationOverview=c.getPathToApplicationOverview(a.application.applicationName);a.showSwapCnames=1<_.filter(a.environments,amzn.beanstalk.utils.isEnvironmentSwappable).length;a.swapCnamesUrl=c.getPathToSwapCNAMEs(a.application.applicationName);a.actionSelected=function(b){a.onAction({action:b})};a.getPathToEnvironment=function(a){return c.getPathToEnvironmentDashboard(a)}}}}])})();(function(){amzn.beanstalk.application.savedConfigurations={};amzn.beanstalk.application.controller("SavedConfigurationsController",["$scope","Alerts","BeanstalkLocations","EnvironmentHelper","Environments","LocalizationService","SavedConfigurations",function(a,b,c,d,e,f,g){d.injectSelectedApplication(a);a.configSelection={};a.environments=e;a.loadFormVisible=!1;a.loadInfo={};a.loadInProgress=!1;a.noEnvironmentSelected=!1;a.savedConfigurations=g;d=e.environmentsById;var h=c.getEnvironmentId(),k=_.keys(d);
h?a.loadInfo.environment=d[h]:1===k.length&&(a.loadInfo.environment=d[k[0]]);_.each(a.application.configurationTemplates,function(b){g.getSettings(a.application.applicationName,b)});a.closeLoadForm=function(){a.loadFormVisible=!1};a.deleteConfigurations=function(){var b=a.getSelectedConfigurations();_.isEmpty(b)||c.goToDeleteConfigurations(a.application,b)};a.getSelectedConfigurationName=function(){var b=a.getSelectedConfigurations();return 1===b.length?b[0]:f.localize("must_select_one_configuration")};
a.getSelectedConfigurations=function(){return _.reduce(a.configSelection,function(a,b,c){b&&a.push(c);return a},[])};a.launchEnvironment=function(){var b=a.getSelectedConfigurationName();b&&c.goToGettingStarted(a.application.applicationName,null,b)};a.loadSavedConfiguration=function(){var d=a.getSelectedConfigurations(),f=a.loadInfo.environment;if(1===d.length)if(!f||amzn.beanstalk.utils.isEnvironmentUpdating(f))a.noEnvironmentSelected=!0;else{var g=f.environmentId,h=d[0];a.loadInProgress=!0;e.update(g,
{environmentId:g,templateName:h}).then(function(){a.loadFormVisible=!1;a.loadInfo={};c.goToEnvironmentDashboard(f,"configuration_loading",{templateName:h})},function(a){b.error("unable_load_configuration_message",{message:amzn.beanstalk.utils.htmlEntities(a.message)})})["finally"](function(){a.loadInProgress=!1})}};a.singleTemplateSelected=function(){return 1===a.getSelectedConfigurations().length};a.toggleLoadForm=function(){a.loadFormVisible=!a.loadFormVisible};a.$watch("application.configurationTemplates",
function(){a.hasNoTemplates=!a.application.configurationTemplates||0===a.application.configurationTemplates.length});a.getEnvironments=a.environments.environmentsByApplication[a.application.applicationName]||[]}])})();(function(){amzn.beanstalk.collections.factory("KeyValueOptionsCollection",[function(){var a=function(a){return _.reduce(a,function(a,b){a[b.optionName]=b.value;return a},{})},b=function(){return""===this.optionName&&""===this.value},c=function(){var b=null,c=[];this.collection=[];this.resetValidationMessages=function(){b=null;_.invoke(this.collection,"resetValidationMessages")};this.serialize=function(){if(_.isNull(b)){var f=a(c),g=a(this.collection);delete g[""];b=amzn.beanstalk.utils.diff(f,g)}return b};
this.withOptionSettings=function(a){c=[].concat(a);this.collection=_.map(c,function(a){return this.create(a.optionName,a.value)},this);return this.add("","")}};c.collects=function(a){return a.namespace===this.NAMESPACE};c.identify=function(a){return a.optionName};c.useDescription=function(a){_.isBlank(this.DESCRIPTION_ID)&&(this.DESCRIPTION_ID=a)};c.prototype.add=function(a,b){_.findWhere(this.collection,{optionName:a})||this.collection.push(this.create(a,b));return this};c.prototype.count=function(){return _.chain(this.collection).reject(function(a){return a.isBlank()}).size().value()};
c.prototype.create=function(a,c){var f=this.optionsFactory.createFromDescription(this.constructor.DESCRIPTION_ID||"",c);f.isBlank=b;f.optionName=a;f.parent=this;return f};c.prototype.find=function(a){return _.findWhere(this.collection,{optionName:_.isObject(a)?a.optionName:a})};c.prototype.findOptionSetting=function(a){return this.find(a)};c.prototype.getKeys=function(){return _.chain(this.collection).reject(function(a){return a.isBlank()}).pluck("optionName").value()};c.prototype.getOptionSettings=
function(){return this.isDisabled()?[]:_.chain(this.serialize()).where({operation:"set"}).map(function(a){return{namespace:this.constructor.NAMESPACE,optionName:a.path.join(""),value:a.value}},this).value()};c.prototype.getOptionsToRemove=function(){return this.isDisabled()?[]:_.chain(this.serialize()).where({operation:"delete"}).map(function(a){return{namespace:this.constructor.NAMESPACE,optionName:a.path.join("")}},this).value()};c.prototype.isDisabled=function(){return!1};c.prototype.remove=function(a){var b=
_.isObject(a)?a.optionName:a;this.collection=_.reject(this.collection,function(a){return a.optionName===b})};c.prototype.removeByIndex=function(a){-1<a&&this.collection.splice(a,1)};c.prototype.validate=function(){return _.reduce(this.collection,function(a,b){return a||b.validationMessages.isSeverityError()},!1)};c.prototype.withFactory=function(a){this.optionsFactory=a;return this};return c}])})();(function(){amzn.beanstalk.environment.controller("CloneEnvironmentController",["$route","$scope","Applications","ApplicationVersions","BeanstalkLocations","CreateEnvironment","Environments","LocalizationService","PlatformFilters","Platforms","ebStatusIndicator",function(a,b,c,d,e,f,g,h,k,l,n){b.checkAvailabilityErrorMessage=null;b.environment=g.environmentsById[e.getEnvironmentId()];b.environmentNames=_.pluck(g.environmentsById,"environmentName");b.request=(new f).withApplication(c.find(b.environment.applicationName)).withTier(b.environment.tier);
b.request.autofillEnvironmentName(b.environment.environmentName);b.request.configurationTemplate.setSourceEnvironment(b.environment);b.request.cnameprefix.autofill(b.environment.hasCname()?_.first(b.environment.cname.split(".")):null);b.request.description.autofill(h.localize("clone_description",{originalEnvironmentName:b.environment.environmentName}));b.request.versionLabel.value=d.find(b.environment.applicationName,b.environment.versionLabel);var p=function(a){b.errorMessage=amzn.beanstalk.utils.htmlEntities(a.message);
b.errorTitle=h.localize(_.underscored(a.code).replace(/_exception$/,""))};b.cancel=function(){e.goToEnvironmentDashboard(b.environment)};b.checkAvailabilityButtonDisabled=function(){return b.request.cnameprefix.hasBeenChecked()||_.isBlank(b.request.cnameprefix.value)};b.checkDnsAvailability=function(){return b.request.cnameprefix.checkAvailability().then(function(){b.checkAvailabilityErrorMessage=null},function(a){b.checkAvailabilityErrorMessage=a.message})};b.cloneEnvironment=function(){b.errorMessage=
null;b.request.configurationOptions.setValidationMessages(null,!0);b.validateForm()&&(n.setMessage("validating_settings_status"),b.checkDnsAvailability().then(function(){return b.request.getValidateConfigurationSettingsRequest().exec()}).then(function(a){b.request.configurationOptions.setValidationMessages(a,!0)}).then(function(){if(b.validateForm())return n.setMessage("creating_environment_status",{environmentName:b.request.environmentName.value}),b.request.exec().then(function(a){e.goToEnvironmentDashboard(a,
"environment_creating",a)})})["catch"](p)["finally"](n.clear))};b.validateForm=function(){return b.cloneEnvironmentForm?(_.each(b.cloneEnvironmentForm,function(a,b){!_.startsWith(b,"$")&&_.isFunction(a.$validate)&&a.$validate()}),b.cloneEnvironmentForm.$valid):!0};b.$watch("request.environmentName.value",function(a){b.request.isWebServerTier()&&b.request.cnameprefix.autofill(_.slugify(a))});c=new k;c.platformName.operator="=";c.platformName.set(b.environment.platform.platformName);n.setMessage("resolving_solution_stacks_status");
l.fetch(c).then(function(a){var c="true"===e.getUpgrade();b.group=a.getGroupForPlatform(b.environment.platform);b.request.configurationTemplate.platform=c?_.first(b.group.platformVersions):b.environment.platform}).then(function(){n.setMessage("describing_configuration_options_status");return b.request.getDescribeConfigurationOptionsRequest().exec().then(function(a){b.request.configurationOptions.withOptions(a.options)})}).then(function(){return b.request.configurationOptions.deserialize(a.current.locals.configurationSettings.optionSettings)})["catch"](p)["finally"](n.clear);
_.isUndefined(b.environment)&&e.goToAllApplications("no_such_environment",{environmentId:e.getEnvironmentId()})}])})();(function(){amzn.beanstalk.configuration.controller("DeploymentPanelController",["$controller","$scope",function(a,b){var c=amzn.beanstalk.constants.DISABLED,d=amzn.beanstalk.constants.TIME,e;a("ConfigurationPanelController",{$scope:b});e=b.options.elasticbeanstalkCommandBatchSizeType.value||"Percentage";b.batchSizeFixed=1;b.batchSizePercentage=100;b["batchSize"+e]=b.options.elasticbeanstalkCommandBatchSize.value||b["batchSize"+e];b.rollingUpdateType=b.options.autoscalingUpdatepolicyRollingupdateRollingUpdateEnabled.value?
b.options.autoscalingUpdatepolicyRollingupdateRollingUpdateType.value:c;b.pauseTimeError=null;b.request.configurationOptions.isLoadBalanced()&&(e=b.request.getDescribeConfigurationSettingsRequest(),e.configurationOptions.options.autoscalingUpdatepolicyRollingupdateRollingUpdateEnabled.value=!0,e.configurationOptions.options.autoscalingUpdatepolicyRollingupdateRollingUpdateType.value=d,e.configurationOptions.describe([{namespace:"aws:autoscaling:updatepolicy:rollingupdate",optionName:"MaxBatchSize"},
{namespace:"aws:autoscaling:updatepolicy:rollingupdate",optionName:"MinInstancesInService"},{namespace:"aws:autoscaling:updatepolicy:rollingupdate",optionName:"PauseTime"}]),e.exec().then(function(a){b.request.configurationOptions.setValues(a.optionSettings)}));b.rollingUpdateTypeChange=function(a){var d=a!==c;if(b.options.autoscalingUpdatepolicyRollingupdateRollingUpdateEnabled.value=d)b.options.autoscalingUpdatepolicyRollingupdateRollingUpdateType.value=a};b.submit=function(){var a=b.options.elasticbeanstalkCommandBatchSizeType.value||
"Percentage";b.options.elasticbeanstalkCommandDeploymentPolicy&&b.options.elasticbeanstalkCommandDeploymentPolicy.isRolling()&&(b.options.elasticbeanstalkCommandBatchSize.value=b["batchSize"+a]);b.save()}}])})();(function(){amzn.beanstalk.gettingStarted.controller("FirstRunController",["$scope","BeanstalkLocations",function(a,b){a.getStarted=function(){b.goToGettingStarted()}}])})();(function(){amzn.beanstalk.gettingStarted.controller("GettingStartedController",["$q","$scope","$window","Alerts","ApplicationVersion","ApplicationVersions","BeanstalkLocations","ConfigurationPresets","CreateApplication","CreateApplicationVersion","CreateEnvironment","Externals","ExternalsService","Modal","LocalizationService","clog","ebStatusIndicator",function(a,b,c,d,e,f,g,h,k,l,n,p,q,r,m,t,s){var v=amzn.beanstalk.constants.DEFAULT_INSTANCE_PROFILE,w=amzn.beanstalk.constants.DEFAULT_SERVICE_ROLE,
x=function(a){b.createApplicationVersion.withApplication(a);b.environmentRequest.withApplication(a)},u=function(a){c.clientReporting.info("exp112015:environment:create",{environmentId:a.environmentId});g.goToLaunchEnvironment(a)},y=function(a){b.environmentRequest.configurationOptions.withOptions(a.options)},B=function(a){return b.environmentRequest.configurationOptions.deserialize(a.optionSettings)},z=function(a){a.messageKey?d.error(a.messageKey,a.error):d.alert("message",a,"alert-error",void 0,
_.underscored(a.code))},E=function(c){if(c&&c.additionalInfo){var d;c.additionalInfo.createRequired&&(s.setMessage("creating_instance_profile"),d="create_instance_profile_alert");c.additionalInfo.updateRequired&&(s.setMessage("updating_instance_profile"),d="update_instance_profile_alert");if(c.additionalInfo.createRequired||c.additionalInfo.updateRequired)return q.updateDefaultInstanceProfile().then(function(a){b.environmentRequest.configurationOptions.options.autoscalingLaunchconfigurationIamInstanceProfile.withInstanceProfile(a.value)},
function(b){return a.reject({error:b,messageKey:d})})}},A=function(c){if(c&&c.additionalInfo){var d;c.additionalInfo.createRequired&&(s.setMessage("creating_service_role"),d="create_service_role_alert");c.additionalInfo.updateRequired&&(s.setMessage("updating_service_role"),d="update_service_role_alert");if(c.additionalInfo.createRequired||c.additionalInfo.updateRequired)return q.updateDefaultServiceRole().then(function(a){b.environmentRequest.configurationOptions.options.elasticbeanstalkEnvironmentServiceRole.withServiceRole(a.value)},
function(b){return a.reject({error:b,messageKey:d})})}},F=function(){var c=b.createApplication.applicationName.value;if(b.applicationVersionSource.isExistingVersion())return b.applicationVersion.isNullObject()?(b.environmentRequest.versionLabel.errors.reset(),b.environmentRequest.versionLabel.errors.set("version_label_required",!0),a.reject({code:"ValidationError",message:m.localize("version_label_required")})):b.applicationVersion;if(b.applicationVersionSource.isNewVersion())return b.createApplicationVersion.setNewVersion().dryRun();
if(b.applicationVersionSource.isSampleApplication())return f.hasSampleApplication(c)?f.getSampleApplication(c):b.createApplicationVersion.setSampleApplication().dryRun()},C=function(){var c=b.environmentRequest.configurationOptions.options.autoscalingLaunchconfigurationIamInstanceProfile;if(c.isAutogenerated())return a.when({additionalInfo:{createRequired:!0}});if(!c.value||c.value===v&&c.isDirty())return s.setMessage("validating_instance_profile"),q.validateDefaultInstanceProfile().then(null,function(b){return a.reject({error:b,
messageKey:"validate_instance_profile_alert"})})},I=function(){var c=b.environmentRequest.configurationOptions.options.elasticbeanstalkEnvironmentServiceRole;if(c.isAutogenerated())return a.when({additionalInfo:{createRequired:!0}});if(!c.value||c.value===w&&c.isDirty())return s.setMessage("validating_service_role"),q.validateDefaultServiceRole().then(null,function(b){return a.reject({error:b,messageKey:"validate_service_role_alert"})})};b.cancel=function(){t.log("btnCancel","1","create","quickStartWebApp");
g.goBack()};b.create=function(){t.log("appVersion"+_.classify(b.applicationVersionSource.value),"1","create","quickStartWebApp");var c=a.when(C()).then(E).then(I).then(A)["catch"](function(b){return b?r.alertErrorWithContinue(b).then(function(b){return b?a.when():a.reject()}):a.when()}).then(function(){var a=b.createApplication.applicationName.value;if(b.applicationVersionSource.isExistingVersion())return b.applicationVersion;if(b.applicationVersionSource.isNewVersion())return s.setMessage("creating_application_version_status",
{versionLabel:amzn.beanstalk.utils.htmlEntities(b.createApplicationVersion.versionLabel.value)}),b.createApplicationVersion.exec();if(b.applicationVersionSource.isSampleApplication()){if(f.hasSampleApplication(a))return f.getSampleApplication(a);s.setMessage("creating_application_version_status",{versionLabel:amzn.beanstalk.utils.htmlEntities(b.createApplicationVersion.versionLabel.value)});return b.createApplicationVersion.setSampleApplication().exec()}}).then(function(a){b.applicationVersionSource.value=
"existing";b.applicationVersion=a;b.environmentRequest.withApplicationVersion(a)}).then(function(){s.setMessage("creating_environment_status",{environmentName:amzn.beanstalk.utils.htmlEntities(b.environmentRequest.environmentName.value)});return b.environmentRequest.exec().then(u)});c["catch"](z);c["finally"](s.clear);return c};b.loadAdvancedView=function(){b.view="partials/experimental/getting-started/advanced-configuration.html"};b.loadBasicView=function(){b.view="partials/experimental/getting-started/basic-environment.html"};
b.loadView=function(a){b.view=a};b.overwriteApplicationVersion=function(a){angular.copy(a,b.applicationVersion);return b.applicationVersion};b.overwriteCreateApplicationVersion=function(a){angular.copy(a,b.createApplicationVersion);return b.createApplicationVersion};b.overwriteEnvironmentRequest=function(a){a!==b.environmentRequest&&angular.copy(a,b.environmentRequest);return b.environmentRequest};b.overwritePresets=function(a){b.presets=new h(a);return b.presets};b.preconfigure=function(){s.setMessage("creating_application_status");
var a=b.createApplication.exec().then(x).then(F).then(function(a){return b.environmentRequest.withApplicationVersion(a).resetConfiguration().dryRun()}).then(function(){s.setMessage("describing_configuration_options_status");return b.environmentRequest.getDescribeConfigurationOptionsRequest().exec().then(y)}).then(function(){s.setMessage("describing_configuration_settings_status");return b.environmentRequest.getDescribeConfigurationSettingsRequest().exec().then(B)});a["catch"](z);a["finally"](s.clear);
return a};b.$on(amzn.beanstalk.constants.CANCEL_MODIFICATIONS,function(){b.loadAdvancedView()});b.$on(amzn.beanstalk.constants.SAVE_MODIFICATIONS,function(a,c){b.presets.customize(c).then(function(a){b.overwriteEnvironmentRequest(a);b.loadAdvancedView()})});b.applicationVersionSource={isExistingVersion:function(){return"existing"===this.value},isNewVersion:function(){return"new"===this.value},isSampleApplication:function(){return"sample"===this.value},setExistingVersion:function(){this.value="existing";
return this},setNewVersion:function(){this.value="new";return this},setSampleApplication:function(){this.value="sample";return this},value:"sample"};b.applicationVersion=new e;b.createApplication=new k;b.createApplicationVersion=new l;b.environmentRequest=new n;b.presets=new h(b.environmentRequest);b.experimentEnabled=amzn.beanstalk.constants.EXPERIMENT_ENABLED;b.mode=g.getMode();b.view="partials/experimental/getting-started/basic-environment.html";_.each(["gettingStarted","newApplication","newEnvironment"],
function(a){b["is"+_.capitalize(a)+"Mode"]=function(){return b.mode===a};b["set"+_.capitalize(a)+"Mode"]=function(){b.mode=a}})}])})();(function(){amzn.beanstalk.gettingStarted.controller("UploadPanelController",["$q","$scope","ebDialog","CreateApplicationVersion","LocalizationService",function(a,b,c,d,e){b.errorMessage=null;b.dateNumber=moment().format("YYYYMMDD");b.s3Domain="https://"+amzn.beanstalk.constants.S3_DOMAIN;b.uploader={};var f=function(a){b.error(a.message,a)},g=function(a){_.isDefined(a)&&(b.createApplicationVersion.sourceBundle.value=a);return a},h=function(){b.createApplicationVersion.validate();b.createApplicationVersion.sourceBundle.isUpload()&&
b.createApplicationVersion.sourceBundle.errors.set("s3_location_required",!b.hasFileSelected());if(b.createApplicationVersion.isValid())return c.resolve(b.createApplicationVersion)};b.cancel=function(){b.createApplicationVersion.versionLabel.value="";b.errorMessage=null;b.uploader.reset();c.close()};b.error=function(a,c){b.errorMessage=e.localize(a,{message:amzn.beanstalk.utils.htmlEntities(c.message)})};b.fileChanged=function(a,c){b.createApplicationVersion.sourceBundle.source="upload";b.createApplicationVersion.sourceBundle.errors.reset();
b.createApplicationVersion.sourceBundle.errors.set("s3_location_filesize",536870912<c);_.isEmpty(b.createApplicationVersion.versionLabel.value)&&b.createApplicationVersion.versionLabel.autofill(_.strLeftBack(a,"."))};b.hasFileSelected=function(){return _.result(b.uploader,"hasFileSelected")||!1};b.s3UrlChanged=function(){var a=b.createApplicationVersion.sourceBundle.parse();_.isDefined(a)&&b.createApplicationVersion.versionLabel.autofill(a.s3Key.replace(/\//g,".").substr(0,99));b.createApplicationVersion.sourceBundle.validate()};
b.submit=function(){b.createApplicationVersion.versionLabel.autofilled=null;a.when(b.createApplicationVersion.sourceBundle.isUpload()&&b.hasFileSelected()?_.result(b.uploader,"upload"):null).then(g).then(h)["catch"](f)};b.$watch("dialog.context",function(a){a instanceof d&&(b.createApplicationVersion=a)})}])})();(function(){amzn.beanstalk.services.provider("BeanstalkLocations",function(){function a(a,b,d){b&&(a+="?"+c.APP_NAME+"="+encodeURIComponent(b),d&&(a+="&"+c.ENV_ID+"="+d));return a}function b(a){return _.reduce(a,function(a,b,c){a[c]=amzn.beanstalk.utils.htmlEntities(b);return a},{})}var c={APP_NAME:"applicationName",APP_NAME_FILTER:"applicationNameFilter",ENV_ID:"environmentId",ENV_NAME:"environmentName",GRAPH_NS:"graphNamespace",GRAPH_METRIC_NAME:"metricName",LOGICAL_ID:"logicalId",GRAPH_STATISTIC:"statistic",
GRAPH_PERIOD:"period",START_TIME:"startTime",END_TIME:"endTime",RELATIVE_TIME:"relativeTime",APPLICATION_VERSIONS:"versions",CONFIGURATIONS:"configs",FILTER:"filter",ALERT_ID:"alertId",ENVIRONMENT_TYPE:"environmentType",INSTANCE_TYPE:"instanceType",SOURCE_URL:"sourceBundleUrl",STACK_NAME:"solutionStackName",RESOURCE_TYPE:"resourceType",RESOURCE_IDENTIFIER:"resourceIdentifier",RDS_AVAILABILITY:"rdsMultiAZDatabase",RDS_DELETION_POLICY:"rdsDBDeletionPolicy",RDS_ENGINE:"rdsDBEngine",RDS_INSTANCE:"rdsDBInstanceClass",
RDS_STORAGE:"rdsDBAllocatedStorage",INCLUDE_RDS:"withRds",INCLUDE_VPC:"withVpc",TEMPLATE_NAME:"templateName",TIER_NAME:"tierName",RESPONSE:"response",UPGRADE:"upgrade"},d={GETTING_STARTED:function(a,b,d){var h={},k="";_.isString(a)&&(h[c.APP_NAME]=a);_.isString(b)&&(h[c.TIER_NAME]=b);_.isString(d)&&(h[c.TEMPLATE_NAME]=d);return k=_.isEmpty(h)?"/gettingStarted":"/newEnvironment?"+_.map(h,function(a,b){return b+"="+a}).join("&")},ALL_APPS:"/applications",FIRST_RUN:"/welcome",NEW_APP:"/newApplication",
NEW_ENV:function(b){return a("/newEnvironment",b)},ENVIRONMENT:function(b,c){return a("/environment",b,c)},ENVIRONMENT_DASHBOARD:function(b,c){return a("/environment/dashboard",b,c)},ENVIRONMENT_HEALTH_DASHBOARD:function(b,c){return a("/environment/health",b,c)},APPLICATION_OVERVIEW:function(b){return a("/application/overview",b)},RESOURCE_REDIRECT:function(a,b){var d="/redirect";a&&(d+="?"+c.RESOURCE_TYPE+"="+a,b&&(d+="&"+c.RESOURCE_IDENTIFIER+"="+b));return d},ENVIRONMENT_CONFIGURATION:function(b,
c){return a("/environment/configuration",b,c)},ENVIRONMENT_LOGS:function(b,c){return a("/environment/logs",b,c)},ENVIRONMENT_CLONE:function(b,c,d){b=a("/environment/clone",b,c);_.isBoolean(d)&&(b+="&upgrade="+encodeURIComponent(d));return b},FIX_ENVIRONMENT:function(b,d,g){b=a("/environment/fix",b,d);g&&(b+="&"+c.ALERT_ID+"="+g);return b},ENVIRONMENT_MONITORING:function(b,c){return a("/environment/monitoring",b,c)},GRAPH_DETAIL:function(b,d,g,h,k,l,n,p,q,r,m){b=a("/environment/monitoring/graph/"+
g+"/"+k,b,d);h&&(b+="&"+c.GRAPH_METRIC_NAME+"="+h);l&&(b+="&"+c.GRAPH_STATISTIC+"="+l);n&&(b+="&"+c.GRAPH_PERIOD+"="+n);p&&(b+="&"+c.START_TIME+"="+p);q&&(b+="&"+c.END_TIME+"="+q);r&&(b+="&"+c.RELATIVE_TIME+"="+r);m&&(b+="&"+_.map(m,function(a,b){return"dimension."+b+"="+a}).join("&"));return b},MANAGE_ALARMS:function(b,d,g,h){b=a("/environment/monitoring/alarms",b,d);g&&(b+="&"+c.FILTER+"="+g,h&&(b+="&"+c.GRAPH_METRIC_NAME+"="+h));return b},EDIT_ALARM:function(b,c,d){return a("/environment/monitoring/alarms/edit/"+
b,c,d)},ADD_ALARM:function(b,d,g,h,k,l,n,p){b=a("/environment/monitoring/newAlarm/"+g+"/"+k,b,d);h&&(b+="&"+c.GRAPH_METRIC_NAME+"="+h);l&&(b+="&"+c.GRAPH_STATISTIC+"="+l);p&&(b+="&"+c.GRAPH_PERIOD+"="+p);n&&(b+="&"+_.map(n,function(a,b){return"dimension."+b+"="+a}).join("&"));return b},ENVIRONMENT_EVENTS:function(b,c){return a("/environment/events",b,c)},ENVIRONMENT_MANAGED_ACTIONS_DASHBOARD:function(b,c){return a("/environment/managedActions",b,c)},TAGS:function(b,c){return a("/environment/tags",
b,c)},SWAP_CNAMES:function(b,c){return a("/environment/swapUrl",b,c)},SAVE_CONFIG:function(b,c){return a("/environment/saveConfig",b,c)},APPLICATION:function(b){return a("/application",b)},APPLICATION_VERSIONS:function(b,c){return a("/application/versions",b,c)},DELETE_APPLICATION_VERSIONS:function(b,d){var g=a("/application/versions/delete",b);d&&(g+="&"+c.APPLICATION_VERSIONS+"="+encodeURIComponent(d));return g},DELETE_CONFIGURATIONS:function(b,d){var g=a("/application/configs/delete",b);d&&(g+=
"&"+c.CONFIGURATIONS+"="+encodeURIComponent(d));return g},APPLICATION_CONFIGURATIONS:function(b,c){return a("/application/configurations",b,c)},LAUNCH_ENVIRONMENT:function(b,c){return a("/launchEnvironment",b,c)},RESTORE_ENVIRONMENT:function(b){return a("/application/restore",b)}};return{$get:["$location","$route","$window","Alerts","$rootScope",function(a,f,g,h,k){return{goToEnvironmentDashboard:function(c,f,g){a.url(d.ENVIRONMENT_DASHBOARD(c.applicationName,c.environmentId));if(f)var q=k.$on("$routeChangeSuccess",
function(){h.info(f,b(g));q()})},goToEnvironmentHealthDashboard:function(b){a.url(d.ENVIRONMENT_HEALTH_DASHBOARD(b.applicationName,b.environmentId))},goToEnvironmentLookup:function(d,f,g){a.url("/environment/dashboard?"+c.ENV_ID+"="+d);if(f)var q=k.$on("$routeChangeSuccess",function(){h.error(f,b(g),amzn.beanstalk.constants.ALERT_DURATION);q()})},goToLaunchEnvironment:function(c,f,g){a.url(d.LAUNCH_ENVIRONMENT(c.applicationName,c.environmentId));if(f)var q=k.$on("$routeChangeSuccess",function(){h.info(f,
b(g));q()})},getPathToEnvironmentDashboard:function(a){return"#"+d.ENVIRONMENT_DASHBOARD(a.applicationName,a.environmentId)},goToApplicationOverview:function(c,f,g){a.url(d.APPLICATION_OVERVIEW(c));if(f)var q=k.$on("$routeChangeSuccess",function(){h.error(f,b(g),amzn.beanstalk.constants.ALERT_DURATION);q()})},getPathToApplicationOverview:function(a){return"#"+d.APPLICATION_OVERVIEW(a)},goToFixEnvironment:function(b,c){a.url(d.FIX_ENVIRONMENT(b.applicationName,b.environmentId,c))},goToEnvironmentConfiguration:function(b){a.url(d.ENVIRONMENT_CONFIGURATION(b.applicationName,
b.environmentId))},goToEnvironmentLogs:function(b){a.url(d.ENVIRONMENT_LOGS(b.applicationName,b.environmentId))},goToEnvironmentMonitoring:function(b){a.url(d.ENVIRONMENT_MONITORING(b.applicationName,b.environmentId))},goToEnvironmentEvents:function(b){a.url(d.ENVIRONMENT_EVENTS(b.applicationName,b.environmentId))},goToApplicationVersions:function(b,c){a.url(d.APPLICATION_VERSIONS(b.applicationName,c?c.environmentId:null))},goToApplicationConfigurations:function(b,c){a.url(d.APPLICATION_CONFIGURATIONS(b,
c))},goToDeleteApplicationVersions:function(b,c){var f=_.pluck(c,"versionLabel");a.url(d.DELETE_APPLICATION_VERSIONS(b.applicationName,angular.toJson(f)))},goToDeleteConfigurations:function(b,c){a.url(d.DELETE_CONFIGURATIONS(b.applicationName,angular.toJson(c)))},getPathToEnvironmentHealthDashboard:function(a){return"#"+d.ENVIRONMENT_HEALTH_DASHBOARD(a.applicationName,a.environmentId)},getPathToEnvironmentLogs:function(a){return"#"+d.ENVIRONMENT_LOGS(a.applicationName,a.environmentId)},getPathToEnvironmentEvents:function(a){return"#"+
d.ENVIRONMENT_EVENTS(a.applicationName,a.environmentId)},getPathToEnvironmentManagedActionsDashboard:function(a){return"#"+d.ENVIRONMENT_MANAGED_ACTIONS_DASHBOARD(a.applicationName,a.environmentId)},getPathToTags:function(a){return"#"+d.TAGS(a.applicationName,a.environmentId)},getPathToEnvironmentConfiguration:function(a){return"#"+d.ENVIRONMENT_CONFIGURATION(a.applicationName,a.environmentId)},getPathToApplicationVersions:function(a,b){return"#"+d.APPLICATION_VERSIONS(a.applicationName,b?b.environmentId:
null)},getPathToApplicationConfigurations:function(a){return"#"+d.APPLICATION_CONFIGURATIONS(a.applicationName)},getPathToRestoreEnvironment:function(a){return"#"+d.RESTORE_ENVIRONMENT(a.applicationName)},goToAllApplications:function(c,f,g){g=!_.isUndefined(g)?g:amzn.beanstalk.constants.ALERT_DURATION;a.url(d.ALL_APPS);if(c)var q=k.$on("$routeChangeSuccess",function(){h.error(c,b(f),g);q()})},getPathToResource:function(){return d.RESOURCE_REDIRECT},getPathToAllApplications:function(){return"#"+d.ALL_APPS},
goToGettingStarted:function(b,c,f){a.url(d.GETTING_STARTED(b,c,f))},goToFirstRun:function(){a.url(d.FIRST_RUN)},goToNewApplication:function(){a.url(d.NEW_APP)},getPathToNewApplication:function(){return"#"+d.NEW_APP},goToCreateEnvironment:function(b){a.url(d.NEW_ENV(b.applicationName))},goToPrevConsole:function(){a.search("tierSelection",null);g.location.reload()},getPathToCreateEnvironment:function(a){return"#"+d.NEW_ENV(a)},getUpgrade:function(){if(f.current&&f.current.params)return f.current.params[c.UPGRADE]},
getEnvironmentType:function(){if(f.current&&f.current.params)return f.current.params[c.ENVIRONMENT_TYPE]},getInstanceType:function(){if(f.current&&f.current.params)return f.current.params[c.INSTANCE_TYPE]},getSolutionStackName:function(){if(f.current&&f.current.params)return f.current.params[c.STACK_NAME]},getSourceUrl:function(){if(f.current&&f.current.params)return f.current.params[c.SOURCE_URL]},getApplicationName:function(){if(f.current&&f.current.params)return f.current.params[c.APP_NAME]},getApplicationNameFilter:function(){if(f.current&&
f.current.params)return f.current.params[c.APP_NAME_FILTER]},getEnvironmentId:function(){if(f.current&&f.current.params)return f.current.params[c.ENV_ID]},getApplicationVersions:function(){if(f.current&&f.current.params&&f.current.params[c.APPLICATION_VERSIONS])return angular.fromJson(f.current.params[c.APPLICATION_VERSIONS])},getSelectedConfigurations:function(){if(f.current&&f.current.params&&f.current.params[c.CONFIGURATIONS])return angular.fromJson(f.current.params[c.CONFIGURATIONS])},getAlertId:function(){if(f.current&&
f.current.params)return f.current.params[c.ALERT_ID]},getGraphNS:function(){if(f.current&&f.current.params)return f.current.params[c.GRAPH_NS].replace("|","/")},getGraphMetricName:function(){if(f.current&&f.current.params)return f.current.params[c.GRAPH_METRIC_NAME]},getLogicalId:function(){if(f.current&&f.current.params)return f.current.params[c.LOGICAL_ID]},getGraphStatistic:function(){if(f.current&&f.current.params)return f.current.params[c.GRAPH_STATISTIC]},getGraphPeriod:function(){if(f.current&&
f.current.params)return parseInt(f.current.params[c.GRAPH_PERIOD],10)},getStartTime:function(){if(f.current&&f.current.params)return f.current.params[c.START_TIME]},getEndTime:function(){if(f.current&&f.current.params)return f.current.params[c.END_TIME]},getRelativeTime:function(){if(f.current&&f.current.params){var a=f.current.params[c.RELATIVE_TIME];if(/^[0-9]+$/.test(a))return parseInt(a,10)}},getGraphDimensions:function(){if(f.current&&f.current.params)return _.reduce(f.current.params,function(a,
b,c){_.startsWith(c,"dimension.")&&(a[c.substr(10)]=b);return a},{})},graphStatisticChanged:function(b){a.search(c.GRAPH_STATISTIC,b);a.replace()},graphPeriodChanged:function(b){a.search(c.GRAPH_PERIOD,b);a.replace()},relativeTimeChanged:function(b){a.search(c.RELATIVE_TIME,b);a.replace()},getIncludeRds:function(){if(f.current&&f.current.params)return f.current.params[c.INCLUDE_RDS]},getIncludeVpc:function(){if(f.current&&f.current.params)return f.current.params[c.INCLUDE_VPC]},getRdsAvailability:function(){if(f.current&&
f.current.params)return f.current.params[c.RDS_AVAILABILITY]},getRdsDeletionPolicy:function(){if(f.current&&f.current.params)return f.current.params[c.RDS_DELETION_POLICY]},getRdsEngine:function(){if(f.current&&f.current.params)return f.current.params[c.RDS_ENGINE]},getRdsInstance:function(){if(f.current&&f.current.params)return f.current.params[c.RDS_INSTANCE]},getRdsStorage:function(){if(f.current&&f.current.params)return f.current.params[c.RDS_STORAGE]},getTierName:function(){if(f.current&&f.current.params)return f.current.params[c.TIER_NAME]},
getRelativePathToGraphDetail:function(a,b,c,e,f,g,h,k,v){return"#"+d.GRAPH_DETAIL(a.applicationName,b.environmentId,c.replace("/","|"),e,f,g,h,null,null,k,v)},goToAlarm:function(b,c,f,g,h,k,t,s){a.url(d.ADD_ALARM(b.applicationName,c.environmentId,f.replace("/","|"),g,h,k,s,t))},getPathToMonitoring:function(a){return"#"+d.ENVIRONMENT_MONITORING(a.applicationName,a.environmentId)},getFilter:function(){if(f.current&&f.current.params)return f.current.params[c.FILTER]},goToManageAlarms:function(b,c,f){a.url(d.MANAGE_ALARMS(b.applicationName,
b.environmentId,c,f))},getPathToManageAlarms:function(a,b,c){return"#"+d.MANAGE_ALARMS(a.applicationName,a.environmentId,b,c)},getPathToEditAlarm:function(a,b,c){return"#"+d.EDIT_ALARM(c,a.applicationName,b.environmentId)},getPathToSwapCNAMEs:function(a,b){return"#"+d.SWAP_CNAMES(a,b)},goToSwapCNAMEs:function(b){a.url(d.SWAP_CNAMES(b.applicationName,b.environmentId))},goToSwapCnames:function(b){a.url(d.SWAP_CNAMES(b.applicationName))},goToSaveConfig:function(b){a.url(d.SAVE_CONFIG(b.applicationName,
b.environmentId))},goToCloneEnvironment:function(b,c){a.url(d.ENVIRONMENT_CLONE(b.applicationName,b.environmentId,c))},goToRestoreEnvironment:function(b){a.url(d.RESTORE_ENVIRONMENT(b.applicationName))},getMode:function(){return f.current.mode},goBack:function(a){1===g.history.length?a():g.history.back()},setApplicationNameFilter:function(b){var d=a.search();_.isBlank(b)?(delete d[c.APP_NAME_FILTER],a.search(d)):a.search(c.APP_NAME_FILTER,b)},setApplicationName:function(b){b?a.search(c.APP_NAME,b):
(b=a.search(),delete b[c.APP_NAME],a.search(b))}}}],getAllAppsPathConfig:function(){return d.ALL_APPS},getNewApplicationPathConfig:function(){return d.NEW_APP},getApplicationPathConfig:function(){return d.APPLICATION()},getApplicationVersionsPathConfig:function(){return d.APPLICATION_VERSIONS()},getDeleteApplicationVersionsPathConfig:function(){return d.DELETE_APPLICATION_VERSIONS()},getDeleteConfigurationsPathConfig:function(){return d.DELETE_CONFIGURATIONS()},getApplicationConfigurationsPathConfig:function(){return d.APPLICATION_CONFIGURATIONS()},
getCreateEnvironmentPathConfig:function(){return d.NEW_ENV()},getEnvironmentDashboardPathConfig:function(){return d.ENVIRONMENT_DASHBOARD()},getEnvironmentHealthDashboardPathConfig:function(){return d.ENVIRONMENT_HEALTH_DASHBOARD()},getApplicationOverviewPathConfig:function(){return d.APPLICATION_OVERVIEW()},getEnvironmentConfigurationPathConfig:function(){return d.ENVIRONMENT_CONFIGURATION()},getEnvironmentLogsPathConfig:function(){return d.ENVIRONMENT_LOGS()},getFixEnvironmentPath:function(){return d.FIX_ENVIRONMENT()},
getEnvironmentMonitoringPathConfig:function(){return d.ENVIRONMENT_MONITORING()},getSwapCNAMEsConfig:function(){return d.SWAP_CNAMES()},getGraphDetailPathConfig:function(){return d.GRAPH_DETAIL(null,null,":"+c.GRAPH_NS,null,":"+c.LOGICAL_ID)},getSaveConfig:function(){return d.SAVE_CONFIG()},getResourceRedirectPathConfig:function(){return d.RESOURCE_REDIRECT()},getManageAlarmsPathConfig:d.MANAGE_ALARMS,getEditAlarmPathConfig:function(){return d.EDIT_ALARM(":"+c.LOGICAL_ID)},getAddAlarmPathConfig:function(){return d.ADD_ALARM(null,
null,":"+c.GRAPH_NS,null,":"+c.LOGICAL_ID)},getEnvironmentEventsPathConfig:function(){return d.ENVIRONMENT_EVENTS()},getEnvironmentManagedActionsDashboardPathConfig:function(){return d.ENVIRONMENT_MANAGED_ACTIONS_DASHBOARD()},getTagsPathConfig:function(){return d.TAGS()},getGettingStartedPathConfig:function(){return d.GETTING_STARTED()},getEnvironmentClonePathConfig:function(){return d.ENVIRONMENT_CLONE()},getRestoreEnvironmentPathConfig:function(){return d.RESTORE_ENVIRONMENT()}}})})();(function(){amzn.beanstalk.models.factory("Environment",["EnvironmentStatuses","Platform","Tier",function(a,b,c){var d=function(a){if(!(this instanceof d))return new d(a);_.each(a,function(a,b){_.isFunction(a)||(this[b]=!_.isNull(a)&&_.isFunction(a.serialize)?a.serialize():a)},this);delete this.platform},e=function(a){a=a||{};if(!(this instanceof e))return new e(a);this.environmentName=this.environmentId=null;_.extend(this,a,{platform:new b(a.platformArn),tier:new c(a.tier)});this.isNullObject=function(){return 0===
_.keys(a).length};this.serialize=function(){return new d(this)}};e.prototype.getConfigurationLabel=function(){return this.isCustomPlatform()?this.platform.toString():this.solutionStackName};e.prototype.hasCname=function(){return _.isDefined(this.cname)};e.prototype.isAbortable=function(){return this.abortableOperationInProgress};e.prototype.isActionable=function(){return!(this.isTransitioning()||this.isTerminated())};e.prototype.isCustomPlatform=function(){return _.isDefined(this.platform)&&this.platform.isCustomPlatform()};
e.prototype.isLegacy=function(){return amzn.beanstalk.utils.isEnvironmentLegacy(this)};e.prototype.isCnameSwappable=function(){return this.tier.isWebServer()&&this.isReady()};e.prototype.isTransitioning=function(){return _.endsWith(this.status,"ing")};_.each(a.statuses,function(a){e.prototype["is"+a]=function(){return this.status===a}});return e}])})();(function(){amzn.beanstalk.models.factory("Environments",["$log","$q","$rootScope","ApplicationsService","AutoRefresher","Environment","EnvironmentsService","preload","ReportingService",function(a,b,c,d,e,f,g,h,k){var l={environmentsByApplication:{},environmentsById:{},environmentsByName:{}},n={};h=h["all-environments"];var p=function(a,b){l.environmentsByName=_.reduce(_.values(l.environmentsById),function(a,b){a[b.environmentName]=b;return a},{});l.environmentsByApplication=_.groupBy(_.sortBy(_.values(l.environmentsById),
function(a){return a.environmentName.toLowerCase()}),"applicationName");if(b){var d=_.filter(_.values(a),function(a){return _.has(l.environmentsById,a.environmentId)&&!_.isEqual(l.environmentsById[a.environmentId],a)}),e=_.filter(_.values(l.environmentsById),function(b){return!_.has(a,b.environmentId)}),f=_.filter(_.values(a),function(a){return!_.has(l.environmentsById,a.environmentId)});_.each(d,function(a){c.$broadcast(amzn.beanstalk.constants.ENVIRONMENT_CHANGED,l.environmentsById[a.environmentId],
a)});_.each(e,function(a){c.$broadcast(amzn.beanstalk.constants.ENVIRONMENT_ADDED,a)});_.each(f,function(a){c.$broadcast(amzn.beanstalk.constants.ENVIRONMENT_DELETED,a)})}},q=function(a,b){var c=l.environmentsById;l.environmentsById=_.reduce(a,function(a,b){a[b.environmentId]=new f(b);return a},{});p(c,!!b)},r=function(a,b){var c=_.clone(l.environmentsById);if(a)l.environmentsById[b]=new f(a);else{if(!_.has(c,b))return;delete l.environmentsById[b]}p(c,!0)};l.abortUpdate=function(c){return g.abortUpdate(c).then(_.bind(function(){return this.refreshEnvironment(c)},
this),function(d){a.error("Could not abort the current operation for environment with id "+c+": ",d);return b.reject(d)})};l.create=function(a){return g.create(a).then(function(a){r(a,a.environmentId);return a},b.reject)};l.dedup=function(a){for(;this.hasEnvironmentName(a);)a=amzn.beanstalk.utils.incrementVersionNumber(a,40);return a};l.find=function(a){return _.has(this.environmentsById,a)?this.environmentsById[a]:null};l.getEnvironmentNames=function(){return _.keys(this.environmentsByName)};l.getHttpsPort=
function(a){n[a.environmentId]||(n[a.environmentId]=d.describeSettings({applicationName:a.applicationName,environmentName:a.environmentName,options:[{namespace:"aws:elb:loadbalancer",optionName:"LoadBalancerHTTPSPort"}]}).then(function(a){if(!a||0===a.length)return b.reject();a=a[0];if(_.isBlank(a.optionSettings))return b.reject();a=_.find(a.optionSettings,function(a){return"LoadBalancerHTTPSPort"===a.optionName});return!a||!a.value?b.reject():a.value},b.reject));return n[a.environmentId]};l.hasEnvironmentName=
function(a){return _.has(this.environmentsByName,a)};l.rebuild=function(a){return g.rebuild(a).then(_.bind(function(){this.refreshEnvironment(a);return!0},this),b.reject)};l.refresh=function(){return g.describeEnvironments(null,{includeDeleted:!0}).then(function(a){q(a.environments,!0);return a.environments},function(c){a.warn("Could not retrieve environments: ",c);return b.reject(c)})};l.refreshEnvironment=function(c){return g.describeEnvironments(null,{environmentIds:[c],includeDeleted:!0}).then(function(a){a=
a&&a.environments?a.environments[0]:null;r(a,c);return a},function(d){a.error("Could not retrieve environment with id "+c+": ",d);return b.reject(d)})};l.getAppTerminatedEnvironments=function(c,d){return g.describeEnvironments(c,{includeDeleted:!0,includeDeletedBackTo:d}).then(function(a){return _.filter(a.environments,function(a){if(amzn.beanstalk.utils.isEnvironmentTerminated(a))return new f(a)})},function(c){a.warn("Could not retrieve environments: ",c);return b.reject(c)})};l.restart=function(c){return g.restart(c).then(_.bind(function(){return this.refreshEnvironment(c)},
this),function(d){a.error("Could not update environment with id "+c+": ",d);return b.reject(d)})};l.isRestorable=function(a){a instanceof f||(a=new f(a));if(amzn.beanstalk.utils.isEnvironmentLegacy(a))return!1;var b=l.environmentsByName[a.environmentName];return _.isUndefined(b)||b.environmentId===a.environmentId?a.isTerminated():b.isTerminated()&&a.isTerminated()};l.restore=function(a){var c=a.environmentId;return g.rebuild(c).then(_.bind(function(){r(a,c);return this.refreshEnvironment(c)},this),
function(a){a.message=a.message.replace("rebuild","restore");return b.reject(a)})};l.terminate=function(a){var c=this.environmentsById[a].serialize();return g.terminate(a).then(function(b){_.each(b,function(a,c){_.isNull(a)&&delete b[c]});var d=_.extend(c,b);r(d,a);return d},b.reject)};l.update=function(c,d){return g.update(c,d).then(function(a){r(a,c);return a},function(d){a.error("Could not update environment with id "+c+": ",d);return b.reject(d)})};if(h){var m=angular.fromJson(h);m.Error?k.fault("preload:environmentDataError",
{preloadData:h}):q(m.environments)}else l.refresh();e.autoRefresh(l.refresh,amzn.beanstalk.constants.ENVIRONMENTS_REFRESH_RATE,!0);return l}])})();(function(){amzn.beanstalk.models.factory("Logs",["$q","$timeout","LocalizationService","Log","UtilService",function(a,b,c,d,e){return function(c){var g=c.environmentId,h=amzn.beanstalk.constants.BUNDLE,k=amzn.beanstalk.constants.TAIL;this.collection=[];this.infoTypes=[k];c=amzn.beanstalk.utils.structifySolutionStack(c.solutionStackName);"iis"===c.platformName.toLowerCase()||c.isLegacy||this.infoTypes.push(h);var l=function(a){return _.reduce(a,function(a,b){return a.concat(_.map(b.environmentInfo,
function(a){return new d(a)}))},[])},n=_.bind(function(a,c,d){this.fetch().then(function(e){e.length<a&&0<c?b(function(){n(a,c-1,d)},750):d.resolve(e)},function(a){d.reject(a)})},this);this.orderByTime=function(){this.collection=_.sortBy(this.collection,function(a){return a.sampleTimestamp})};this.request=function(a){return e.requestEnvironmentInfo({environmentId:g,infoType:a})};this.fetch=function(){var b=_.map(this.infoTypes,function(a){return e.retrieveEnvironmentInfo({environmentId:g,infoType:a||
k})});return a.all(b).then(_.bind(function(a){return this.collection=l(a)},this))};this.wait=function(b,c){var d=a.defer();n(b,c,d);return d.promise}}}])})();(function(){amzn.beanstalk.resolves.cnameDomain={};amzn.beanstalk.resolves.cnameDomain=["$q","UtilService",function(a,b){var c=function(){var a=new Date,b={o:"p",l:"m","0":"2",1:"3"},c="",a=(Math.random()*a).toString(36);_.each(a,function(a){_.has(b,a)?c+=b[a]:"."!==a&&(c+=a)});return c.substring(0,10)},d=0,e=c();return function g(a,e){return a.then(function(a){d+=1;return a.available?(amzn.beanstalk.constants.CNAME_DOMAIN=_.ltrim(a.fullyQualifiedCNAME,e),amzn.beanstalk.constants.CNAME_DOMAIN):2>
d?(e=c(),g(b.checkAvailability(e),e)):amzn.beanstalk.constants.CNAME_DOMAIN})}(b.checkAvailability(e),e)}]})();(function(){amzn.beanstalk.resolves.environmentDashboard=["$q","loaderStatusService","BeanstalkLocations","ConfigurationSettings","EnvironmentsService","FeaturesService","Platforms","Resources","Util",function(a,b,c,d,e,f,g,h,k){var l=c.getEnvironmentId(),n={},p;c=[];var q=function(a){return function(b){return n[a]=b}};f=function(a){n.configurationSettings=a;return"true"===(_.findWhere(a.optionSettings,{namespace:"aws:elasticbeanstalk:managedactions",optionName:"ManagedActionsEnabled"})||{}).value?
(p=e.describeManagedActions(l,{status:amzn.beanstalk.constants.ACTION_STATUSES.SCHEDULED}).then(q("managedActions")),b.setStatus("managed-actions-resolve","resolving_managed_actions_status",{},p),p):a};_.has(d.settingsByEnvironmentId,l)?c.push(a.when(d.settingsByEnvironmentId[l]).then(f)):(p=d.refreshEnvironment(l).then(f),b.setStatus("configuration-settings-resolve","resolving_configuration_settings_status",{},p),c.push(p));_.has(h.resourcesByEnvironmentId,l)?c.push(a.when(h.resourcesByEnvironmentId[l]).then(q("resources"))):
(p=h.refreshEnvironment(l).then(q("resources")),b.setStatus("resources-resolve","resolving_resources_status",{},p),c.push(p));_.isNull(k.solutionStacks)?(p=k.refreshSolutionStacks().then(q("solutionStacks")),b.setStatus("solution-stacks-resolve","resolving_solution_stacks_status",{},p),c.push(p)):c.push(a.when({solutionStacks:k.solutionStacks}).then(q("solutionStacks")));d=g.fetchCustomPlatforms();b.setStatus("custom-platforms-resolve","resolving_custom_platforms_status",{},d);c.push(d.then(q("customPlatforms")));
return a.all(c).then(function(a){return n})}]})();(function(){amzn.beanstalk.resolves.environmentNavigationResolve={};amzn.beanstalk.resolves.service("EnvironmentNavigations",["$rootScope","$q","ConfigurationOptionsService",function(a,b,c){var d={namespace:"aws:elasticbeanstalk:healthreporting:system",optionName:"SystemType"},e={namespace:"aws:elasticbeanstalk:managedactions",optionName:"ManagedActionsEnabled"},f=["hideAlarmsLink","hideHealthLink","hideManagedActionsLink","hideTagsLink"],g={navigationsByEnvironmentId:[]},h=function(a){return _.isNull(a)?
!1:_.reduce(f,function(b,c){return _.has(a,c)&&b},!0)};g.get=function(a){var f=a.environmentId,n=_.has(this.navigationsByEnvironmentId,f)?this.navigationsByEnvironmentId[f]:null;return h(n)?b.when(n):a.isTerminated()?b.when({hideAlarmsLink:!0,hideHealthLink:!0,hideManagedActionsLink:!0,hideTagsLink:!0}):c.describeSettings({applicationName:a.applicationName,environmentName:a.environmentName,options:[d,e]}).then(function(b){var c=a.isLegacy();b=b[0].optionSettings;return g.set(f,{hideAlarmsLink:c,hideHealthLink:!_.findWhere(b,
d),hideManagedActionsLink:!_.findWhere(b,e),hideTagsLink:c})})};g.has=function(a){return _.isObject(a)&&_.has(a,"environmentId")?this.has(a.environmentId):_.has(this.navigationsByEnvironmentId,a)};g.set=function(a,b){return this.navigationsByEnvironmentId[a]=b};a.$on(amzn.beanstalk.constants.ENVIRONMENT_CHANGED,function(a,b,c){g.has(c)&&g.get(b)});return g}]);amzn.beanstalk.resolves.environmentNavigationResolve=["$q","BeanstalkLocations","Environments","EnvironmentNavigations","LocalizationService",
"loaderStatusService",function(a,b,c,d,e,f){if(b=b.getEnvironmentId()){if(!_.has(c.environmentsById,b))return a.reject({message:e.localize("no_such_environment",{environmentId:amzn.beanstalk.utils.htmlEntities(b)})})}else return a.reject({message:e.localize("no_environment_selected")});a=d.get(c.environmentsById[b]);f.setStatus("environment-navigation-resolve","resolving_environment_status",{},a);return a}]})();(function(){amzn.beanstalk.resolves.resolveEnvironment={};amzn.beanstalk.resolves.resolveEnvironment=["$q","BeanstalkLocations","Environments","loaderStatusService",function(a,b,c,d){b=b.getEnvironmentId();if(_.has(c.environmentsById,b))return a.when(c.environmentsById[b]);a=c.refreshEnvironment(b);d.setStatus("environment-resolve","resolving_environment_status",{},a);return a}]})();(function(){amzn.beanstalk.resolves.solutionStacks={};amzn.beanstalk.resolves.solutionStacks=["$q","loaderStatusService","Util",function(a,b,c){a=_.isNull(c.solutionStacks)?c.refreshSolutionStacks():amzn.beanstalk.utils.getSuccessfulPromise(a,{solutionStacks:c.solutionStacks});b.setStatus("solution-stacks-resolve","resolving_solution_stacks_status",{},a);return a}]})();(function(){amzn.beanstalk.resolves.tiers={};amzn.beanstalk.resolves.tiers=["$q","loaderStatusService","Tiers",function(a,b,c){a=amzn.beanstalk.utils.getSuccessfulPromise(a,c.collection);b.setStatus("tiers-resolve","resolving_tiers_status",{},a);return a}]})();(function(){amzn.beanstalk.wizards={};amzn.beanstalk.wizards=angular.module("beanstalkWizards",[]);amzn.beanstalk.wizards.service("WizardBase",["BeanstalkLocations","$log","EnvironmentHelper","OptionsInputMapper","LocalizationService","ApplicationsService","Applications","Environments","Alerts","ReportingService","PreferencesService","$window","$q",function(a,b,c,d,e,f,g,h,k,l,n,p,q){function r(){this.partialUrl="partials/environment/configuration/confirm.html"}return{decorateScope:function(m){function p(a){a.initialize&&
(a.initialize(m.input,m),m.checkVisibilities());var b=_.indexOf(m.data.steps,a);b>m.furthestStep&&(m.furthestStep=b);A=a;l.event("wizardStepChange",{step:a.id})}function s(a,b){var c=m.data.steps[a];a===b?p(c):!c||!c.isVisible()?s(a+1,b):c.processContinueRequest(m.input).then(function(d){d?s(a+1,b):(k.info("step_needs_more_info"),p(c))},function(){k.info("step_needs_more_info");p(c)})}function v(a){k.error("unable_to_launch_environment",{message:amzn.beanstalk.utils.htmlEntities(a.message)});m.changeInProgress=
!1;m.creationStatus=m.displayStatus=null;l.event("wizardStepChange",{step:"createFailed"})}function w(c){b.info("Environment creation completed successfully.");m.creationStatus=m.displayStatus=null;a.goToEnvironmentDashboard(c,"environment_creating",c);l.event("wizardStepChange",{step:"createSuccess"})}function x(){m.creationStatus=m.displayStatus=e.localize("creating_environment_status",{versionLabel:amzn.beanstalk.utils.htmlEntities(m.input.applicationVersionLabel)});C=d.convertValidationToCreateMessage(m.input,
C);h.create(C).then(w,v)}function u(){x()}function y(a){m.input.applicationVersionLabel+="-"+(Math.floor(9E5*Math.random())+1E5);f.createVersion(m.input.applicationName,m.input.applicationVersionLabel,m.input.uploadedLocation).then(u,v)}function B(){if("existing"===m.input.sourceType)x();else{var a=null,b=v;"sample"===m.input.sourceType?m.input.applicationVersionLabel=e.localize("sample_version_label"):"upload"===m.input.sourceType?(b=m.input.launchApplication?e.localize("default_version_label"):
m.input.environmentName+e.localize("version_name_suffix"),a=m.input.uploadedLocation,m.input.applicationVersionLabel=b,b=y):"url"===m.input.sourceType&&(a=m.input.uploadedLocation,b=y);m.creationStatus=m.displayStatus=e.localize("creating_application_version_status",{versionLabel:amzn.beanstalk.utils.htmlEntities(m.input.applicationVersionLabel)});f.createVersion(m.input.applicationName,m.input.applicationVersionLabel,a).then(u,b)}}function z(a){a&&a.length?(m.warningMessages=a,A=new r,m.changeInProgress=
!1,m.creationStatus=m.displayStatus=null):B()}if(!m.input||!m.data||!m.data.steps)throw Error("Cannot decorate a wizard scope without steps and input.");var E=a.getApplicationName();E&&_.has(g.applicationsByName,E)&&c.injectSelectedApplication(m);m.creationStatus=m.displayStatus=null;m.data.changeInProgress=!1;m.showQsOptInAlert=amzn.beanstalk.constants.EXPERIMENT_ENABLED;m.closeQsOptInAlert=function(){m.showNewDesignInfo=!1};m.qsOptIn=function(){m.qsUpdatingPrefs=!0;n.setQuickStartPreference(!0).then(function(){a.goToNewConsole(m.input)})};
m.data.stepsById=_.reduce(m.data.steps,function(a,b){a[b.id]=b;return a},{});m.checkVisibilities=function(){_.each(m.data.steps,function(a){a.updateVisibility(m.input)})};m.furthestStep=0;var A;p(_.first(m.data.steps));m.getSelectedStep=function(){return A};var F=function(a){if(a){var b=[],c=_.last(m.data.steps);_.each(m.data.steps,function(a){a.isVisible()&&(a.initialize&&a!==A&&a!==c)&&(a.initialize(m.input,m),m.checkVisibilities(),b.push(a.processContinueRequest(m.input).then(function(b){return{step:a,
valid:b}})))});q.all(b).then(function(a){a=_.reduce(a,function(a,b){b.valid||a.push(b.step);return a},[]);p(0===a.length?c:_.first(a))})}};m.continueRequested=function(){m.changeInProgress=!0;A.processContinueRequest(m.input).then(function(a){m.changeInProgress=!1;if(a){var c,d=!1;for(a=0;a<m.data.steps.length;a+=1){var e=m.data.steps[a];if(e===A)d=!0;else if(d&&e.isVisible()){c=e;break}}c?p(c):b.error("Unable to select the desired step! The step: "+A.id+" had no next visible step.")}},function(){m.changeInProgress=
!1})};m.backRequested=function(){var a,c,d;for(c=0;c<m.data.steps.length;c+=1){d=m.data.steps[c];if(d===A)break;d.isVisible()&&(a=d)}a?p(a):b.error("Unable to find a previous step. Current step: "+A.id)};m.cancelRequested=function(){a.goToAllApplications();l.event("wizardStepChange",{step:"canceled"})};m.continueOrDone=function(){m.input.launchEnvironment?m.continueRequested():m.done()};m.done=function(){a.goToAllApplications();l.event("wizardStepChange",{step:"doneNoEnvironment"})};m.launchReview=
function(){m.launchInProgress=!0;A.processContinueRequest(m.input).then(F)["finally"](function(){m.launchInProgress=!1})};m.navigateToStep=function(a){var b=_.indexOf(m.data.steps,A),c=_.indexOf(m.data.steps,a);c>m.furthestStep||(b<c?s(b,c):b!==c&&p(a))};var C;m.reviewCompleted=function(){m.changeInProgress=!0;m.creationStatus=m.displayStatus=e.localize("validating_settings_status");C=d.getValidationMessageFromInputs(m.input);(m.input.solutionStack.isLegacy&&m.input.configurationSource===amzn.beanstalk.constants.CONFIG_SOURCE_SOLUTION_STACK?
amzn.beanstalk.utils.getSuccessfulPromise(q,[]):f.validateSettings(C)).then(z,v);l.event("wizardStepChange",{step:"createStarted"})};m.saveConfiguration=function(){B()};m.loadEdit=function(){A=m.data.stepsById[amzn.beanstalk.wizards.steps.constants.REVIEW]}}}}])})();(function(){amzn.beanstalk.wizards.CreateApplicationController={};amzn.beanstalk.wizards.controller("CreateApplicationController",["$scope","BeanstalkLocations","Tiers","WizardBase","wizards.steps.ApplicationInfo","wizards.steps.EnvironmentTier","wizards.steps.ChooseEnvironment","wizards.steps.ApplicationVersion","wizards.steps.EnvironmentInfo","wizards.steps.ResourceSelection","wizards.steps.ConfigurationDetails","wizards.steps.EnvironmentTags","wizards.steps.WorkerDetails","wizards.steps.RdsConfiguration",
"wizards.steps.VpcConfiguration","wizards.steps.Permissions","wizards.steps.Review",function(a,b,c,d,e,f,g,h,k,l,n,p,q,r,m,t,s){var v=amzn.beanstalk.constants.service.environmentType.LOAD_BALANCED,w=amzn.beanstalk.constants.service.environmentType.SINGLE_INSTANCE,x=b.getApplicationName(),u=b.getTierName(),y=function(a){var b={o:"p",l:"m","0":"2",1:"3"},c=new Date,c=(Math.random()*c).toString(36),d="";_.each(c,function(a){_.has(b,a)?d+=b[a]:"."!==a&&(d+=a)});return d.substring(0,a)};a.data={steps:[new e,
new f,new g,new h,new k,new l,new n,new p,new q,new r,new m,new t,new s]};a.input={launchApplication:!0,launchEnvironment:!1};if(!_.isUndefined(x)&&(a.input.applicationName=x,a.input.defaultStackName=b.getSolutionStackName()||null,a.input.displayReviewLink=!_.isNull(a.input.defaultStackName),a.input.environmentName=_.camelize(_.slugify(x)).substring(0,13)+"-"+y(5)+"-env",a.input.environmentType=b.getEnvironmentType()===w?w:v,a.input.environmentUrl=a.input.environmentName.toLowerCase(),a.input.includeRds=
"true"===b.getIncludeRds()?!0:!1,a.input.includeVpc="true"===b.getIncludeVpc()?!0:!1,a.input.instanceType=b.getInstanceType(),a.input.launchEnvironment=!0,a.input.rdsAllocatedStorage=parseInt(b.getRdsStorage(),10)||null,a.input.rdsDeletionPolicy=b.getRdsDeletionPolicy()||null,a.input.rdsEngine=b.getRdsEngine()||null,a.input.rdsInstanceClass=b.getRdsInstance()||null,a.input.rdsMultiAz=b.getRdsAvailability()||null,a.input.s3URL=b.getSourceUrl()||null,a.input.sourceType=!_.isNull(a.input.s3URL)?"url":
a.input.displayReviewLink?"sample":null,a.input.tier=c.find(u)||c.find(amzn.beanstalk.constants.WEB_SERVER),!_.isNull(a.input.rdsAllocatedStorage)||!_.isNull(a.input.rdsDeletionPolicy)||!_.isNull(a.input.rdsEngine)||!_.isNull(a.input.rdsInstanceClass)||!_.isNull(a.input.rdsMultiAz)))a.input.includeRds=!0;d.decorateScope(a)}])})();(function(){amzn.beanstalk.wizards.controller("LaunchEnvironmentController",["$scope","WizardBase","BeanstalkLocations","Tiers","wizards.steps.EnvironmentTier","wizards.steps.ChooseEnvironment","wizards.steps.ApplicationVersion","wizards.steps.EnvironmentInfo","wizards.steps.ResourceSelection","wizards.steps.ConfigurationDetails","wizards.steps.EnvironmentTags","wizards.steps.WorkerDetails","wizards.steps.RdsConfiguration","wizards.steps.VpcConfiguration","wizards.steps.Permissions","wizards.steps.Review",
"instanceProfile",function(a,b,c,d,e,f,g,h,k,l,n,p,q,r,m,t,s){var v=c.getApplicationName();c=c.getTierName();a.data={steps:[new e,new f,new g,new h,new k,new l,new n,new p,new q,new r,new m,new t]};a.input={applicationName:v,launchApplication:!1,launchEnvironment:!0};b.decorateScope(a);s&&c&&(a.input.instanceProfile=s,a.input.instanceProfileSource="existing",a.input.tier=d.find(c),a.continueRequested())}])})();(function(){amzn.beanstalk.wizards.steps={};amzn.beanstalk.wizards.steps.StepBase={};amzn.beanstalk.wizards.steps={constants:{}}})();(function(){amzn.beanstalk.wizards.steps.ApplicationInfo={};amzn.beanstalk.wizards.steps.constants.APPLICATION_INFO="appInfoStep";amzn.beanstalk.wizards.factory("wizards.steps.ApplicationInfo",["$log","LocalizationService","$q","Applications","Alerts","BeanstalkLocations",function(a,b,c,d,e,f){return function(){this.id=amzn.beanstalk.wizards.steps.constants.APPLICATION_INFO;this.name=b.localize("application_info_step_name");this.partialUrl="partials/wizards/application-info.html";this.status=null;
this.initialize=function(){this.status=null;this.notNavigable=!0};this.processContinueRequest=function(a){if(!a.applicationName||(100<a.applicationName.length||_.contains(a.applicationName,"/"))||a.applicationDescription&&200<a.applicationDescription.length)return amzn.beanstalk.utils.getSuccessfulPromise(c,!1);this.status=b.localize("creating_application_status");var h=c.defer(),k=this;d.create(a.applicationName,a.applicationDescription).then(function(){f.setApplicationName(a.applicationName);h.resolve(!0);
k.status=null},function(a){e.error("unable_to_create_application_error",{message:amzn.beanstalk.utils.htmlEntities(a.message)});h.resolve(!1);k.status=null});return h.promise};this.getReviewContent=function(a){var c={step:this,settings:[new amzn.sm.components.DefinitionTerm(b.localize("application_name"),a.applicationName)]};a.applicationDescription&&c.settings.push(new amzn.sm.components.DefinitionTerm(b.localize("description"),a.applicationDescription));return c};this.isVisible=function(){return!0};
this.updateVisibility=function(){}}}])})();(function(){amzn.beanstalk.wizards.steps.ApplicationVersion={};amzn.beanstalk.wizards.steps.constants.APPLICATION_VERSION="appVersion";amzn.beanstalk.wizards.factory("wizards.steps.ApplicationVersion",["$log","$q","Alerts","ApplicationsService","BeanstalkLocations","LocalizationService","Util",function(a,b,c,d,e,f,g){var h=amzn.beanstalk.constants.FIXED,k=amzn.beanstalk.constants.PERCENTAGE,l=amzn.beanstalk.constants.ROLLING,n=amzn.beanstalk.constants.ROLLING_WITH_ADDITIONAL_BATCH,p=amzn.beanstalk.constants.IMMUTABLE;
return function(){this.id=amzn.beanstalk.wizards.steps.constants.APPLICATION_VERSION;this.name=f.localize("application_version_step_name");this.partialUrl="partials/wizards/application-version.html";this.s3UrlPattern=/^https?:\/\/(.*?)\.?s3.*\.amazonaws\.com(?:\.cn)?\/(.*)$/m;this.status=this.sourceType=null;this.submitted=!1;this.uploader={};var a=this,r,m=!0,t,s=function(a){a=this.s3UrlPattern.exec(a);var b;_.isNull(a)||(b=a[2].split("/"),b={s3Bucket:_.isBlank(a[1])?b.shift():a[1],s3Key:b.join("/")});
return b};this.applicationSourceTypeChange=function(){delete this.s3LocationError;delete this.noFileError};this.getReviewContent=function(a){var b={settings:[new amzn.sm.components.DefinitionTerm(f.localize("application_source"),a.applicationSource)],step:this};this.hasRollingDeployments&&(a=f.localize(a.deploymentBatchSizeType===k?"rolling_deployment_percentage":"rolling_deployment_fixed",{batchSize:a.deploymentBatchSize}),b.settings.push(new amzn.sm.components.DefinitionTerm(f.localize("deployment_settings"),
a)));return b};this.isVisible=function(){return m};this.processContinueRequest=function(d){this.submitted=!0;if(this.hasRollingDeployments)if(d.deploymentPolicy===l||d.deploymentPolicy===n){if(d.deploymentBatchSizeType===k&&!d.deploymentBatchSizePercentage||d.deploymentBatchSizeType===h&&!d.deploymentBatchSizeFixed)return amzn.beanstalk.utils.getSuccessfulPromise(b,!1);d.deploymentBatchSize=d.deploymentBatchSizeType===k?d.deploymentBatchSizePercentage:d.deploymentBatchSizeFixed}else d.deploymentBatchSizeType=
k,d.deploymentBatchSize=100;if("sample"===d.sourceType)return d.applicationSource=f.localize("sample_application"),amzn.beanstalk.utils.getSuccessfulPromise(b,!0);if("existing"===d.sourceType)return d.applicationVersionLabel?(d.applicationSource=d.applicationVersionLabel,amzn.beanstalk.utils.getSuccessfulPromise(b,!0)):amzn.beanstalk.utils.getSuccessfulPromise(b,!1);if("url"===d.sourceType){var e=_.bind(s,this)(d.s3URL);if(_.isUndefined(e))return this.s3LocationError=!0,amzn.beanstalk.utils.getSuccessfulPromise(b,
!1);d.uploadedLocation=e;d.applicationSource=d.s3URL;d.sourceFileName=d.applicationVersionLabel;d.applicationVersionLabel=e.s3Key.replace(/\//g,".").substr(0,99);return amzn.beanstalk.utils.getSuccessfulPromise(b,!0)}e=this.uploader.hasFileSelected&&this.uploader.hasFileSelected();if(!d.uploadedLocation&&!e)return this.noFileError=!0,amzn.beanstalk.utils.getSuccessfulPromise(b,!1);if(d.uploadedLocation&&!e)return amzn.beanstalk.utils.getSuccessfulPromise(b,!0);this.status=f.localize("uploading_status");
var g=b.defer();d.sourceFileName=this.uploader.getFilename();d.applicationSource=d.sourceFileName;this.uploader.upload().then(function(b){a.status=null;d.uploadedLocation=b;g.resolve(!0)},function(){a.status=null;c.error("unable_to_upload");g.resolve(!1)});return g.promise};this.s3UrlChange=function(){delete this.s3LocationError};this.hasApplicationVersions=function(){return!_.isEmpty(this.versions)};this.updateVisibility=function(a){m=!1!==a.launchEnvironment};this.initialize=function(b,e){r=e;r.constants=
amzn.beanstalk.constants;this.hasRollingDeployments=b.environmentType!==amzn.beanstalk.constants.service.environmentType.SINGLE_INSTANCE&&!b.solutionStack.isLegacy;this.healthThresholdValues=["Ok"];this.isEnhancedPolicies=!1;this.status=null;t||(t=d.describeApplicationVersions(b.applicationName),t.then(function(b){a.versions=b},function(a){c.error("unable_to_load_versions",{applicationName:amzn.beanstalk.utils.htmlEntities(b.applicationName),message:amzn.beanstalk.utils.htmlEntities(a.message)})}));
_.isUndefined(b.sourceType)&&t.then(function(a){b.sourceType=a&&a.length?"existing":"sample"});_.isUndefined(b.applicationVersionLabel)&&t.then(function(a){a&&a[0]&&(b.applicationVersionLabel=a[0].versionLabel)});this.acceptTypes=b.solutionStack&&g.solutionStackDetails[b.solutionStack.solutionStackName]?g.solutionStackDetails[b.solutionStack.solutionStackName].permittedFileTypes:[".zip",".war"];if(this.hasRollingDeployments){var f=_.findWhere(r.avaialbleOptions,{name:"DeploymentPolicy"}),m=_.findWhere(r.avaialbleOptions,
{name:"HealthCheckSuccessThreshold"});this.isEnhancedPolicies=f&&-1<_.indexOf(f.valueOptions,amzn.beanstalk.constants.IMMUTABLE);this.healthThresholdValues=m?m.valueOptions:this.healthThresholdValues}if(this.hasRollingDeployments&&!b.deploymentPolicy)if(b.configurationSource===amzn.beanstalk.constants.CONFIG_SOURCE_SOLUTION_STACK)b.deploymentPolicy=l,b.deploymentBatchSizeFixed=1,b.deploymentBatchSizePercentage=30,b.deploymentBatchSizeType=k,b.deploymentPolicyIsRolling=!0;else if(b.configurationSource===
amzn.beanstalk.constants.CONFIG_SOURCE_SAVED_CONFIG){null===b.deploymentPolicy&&(b.deploymentPolicy=l);if(!this.isEnhancedPolicies&&(b.deploymentPolicy===p||b.deploymentPolicy===n))b.deploymentPolicy=l;b.deploymentPolicy!==l||b.deploymentPolicy!==n?(b.deploymentBatchSize=100,b.deploymentBatchType=k,b.deploymentPolicyIsRolling=!1):b.deploymentPolicyIsRolling=!0;b.deploymentBatchSizeType===h?(b.deploymentBatchSizeFixed=b.deploymentBatchSize,b.deploymentBatchSizePercentage=30):b.deploymentBatchSizeType===
k&&(b.deploymentBatchSizeFixed=1,b.deploymentBatchSizePercentage=b.deploymentBatchSize)}delete this.s3LocationError;delete this.noFileError};e.getApplicationName()&&(t=d.describeApplicationVersions(e.getApplicationName()),t.then(function(b){a.versions=b},function(a){c.error("unable_to_load_versions",{applicationName:amzn.beanstalk.utils.htmlEntities(e.getApplicationName()),message:amzn.beanstalk.utils.htmlEntities(a.message)})}))}}])})();(function(){amzn.beanstalk.wizards.steps.ChooseEnvironment={};amzn.beanstalk.wizards.steps.constants.CHOOSE_ENVIRONMENT="chooseEnv";amzn.beanstalk.wizards.factory("wizards.steps.ChooseEnvironment",["$log","$q","Alerts","ApplicationsService","BeanstalkLocations","LocalizationService","OptionsInputMapper","PlatformsCollection","Util","UtilService",function(a,b,c,d,e,f,g,h,k,l){return function(){var a=amzn.beanstalk.constants.service.environmentType,p,q,r=this,m=!0;this.id=amzn.beanstalk.wizards.steps.constants.CHOOSE_ENVIRONMENT;
this.loadingValues=!1;this.name=f.localize("choose_environment_step_name");this.partialUrl="partials/wizards/choose-environment.html";this.status=null;this.util=k;k.solutionStacks||(p=k.refreshSolutionStacks());this.environmentTypes=[{displayName:f.localize(a.SINGLE_INSTANCE),value:a.SINGLE_INSTANCE},{displayName:f.localize(a.LOAD_BALANCED),value:a.LOAD_BALANCED}];this.initialize=function(a,b){q=b;q.hasConfigurationTemplates=q.hasConfigurationTemplates||!1;_.isUndefined(a.configurationSource)&&(a.configurationSource=
amzn.beanstalk.constants.CONFIG_SOURCE_SOLUTION_STACK);_.isUndefined(a.savedConfiguration)&&(q.application&&q.application.configurationTemplates)&&(q.hasConfigurationTemplates=0<q.application.configurationTemplates.length,a.savedConfiguration=q.application.configurationTemplates[0]);_.isUndefined(a.environmentType)&&(a.environmentType=this.environmentTypes[0].value);_.isUndefined(a.solutionStack)&&(a.solutionStack=null);this.validateConfigSource(a)&&(p?p.then(function(){r.configSourceChanged(a)}):
this.configSourceChanged(a));if(!_.isUndefined(a.defaultStackName)){var c=new h(this.util.solutionStacks,a.tier),c=_.findWhere(c.options,{name:a.defaultStackName});_.isUndefined(c)||(a.solutionStack=c.recommended)}};this.solutionStackChanged=function(){this.solutionStackMissing=this.solutionStackError=this.savedConfigurationError=!1;q.checkVisibilities();this.validateConfigSource(q.input)&&this.configSourceChanged(q.input)};var t=null;this.configSourceChanged=function(a){var b={applicationName:a.applicationName,
options:_.map(g.OPTION_NAME_MAPPINGS,function(a){return _.pick(a,"namespace","optionName")})},h=a.configurationSource,k;if(h===amzn.beanstalk.constants.CONFIG_SOURCE_SOLUTION_STACK)k=b.solutionStackName=a.solutionStack?a.solutionStack.solutionStackName:null;else if(h===amzn.beanstalk.constants.CONFIG_SOURCE_SAVED_CONFIG)k=b.templateName=a.savedConfiguration;else throw Error("Unknown configuration source");if(!t||!(t.source===h&&t.item===k)){this.status=f.localize("retrieving_configuration_options");
this.loadingValues=!0;var m=function(b){b=b[0]||b;var c=e.getEnvironmentType(),d=a.instanceProfile,f=e.getInstanceType(),m=b.options||b.optionSettings;_.extend(a,g.getCreateInputsFromConfiguration(m));_.isUndefined(c)||(a.environmentType=c);a.deploymentPolicy=null;a.rollingUpdateValue=null;a.instanceProfile=d;_.isUndefined(f)||(a.instanceType=f);h===amzn.beanstalk.constants.CONFIG_SOURCE_SOLUTION_STACK&&a.healthReportingSystemType&&(a.healthReportingSystemType=amzn.beanstalk.constants.ENHANCED);h===
amzn.beanstalk.constants.CONFIG_SOURCE_SAVED_CONFIG&&(a.solutionStack=amzn.beanstalk.utils.structifySolutionStack(b.solutionStackName));t={item:k,source:h};q.avaialbleOptions=m;r.loadingValues=!1;r.status=null;q.checkVisibilities()},n=function(a){c.error("unable_to_load_config_options",{message:amzn.beanstalk.utils.htmlEntities(a.message)});r.status=null;r.loadingValues=!1;t=null};if(h===amzn.beanstalk.constants.CONFIG_SOURCE_SOLUTION_STACK)l.describeOptions(b).then(m,n);else if(h===amzn.beanstalk.constants.CONFIG_SOURCE_SAVED_CONFIG)d.describeSettings(b).then(m,
n);else throw Error("Unknown configuration source");}};this.processContinueRequest=function(a){var c=a.configurationSource;if(!a.launchEnvironment)return amzn.beanstalk.utils.getSuccessfulPromise(b,!0);if(a.solutionStack)this.solutionStackError=this.savedConfigurationError=this.solutionStackMissing=!1;else return this.solutionStackMissing=!0,this.savedConfigurationError=c===amzn.beanstalk.constants.CONFIG_SOURCE_SAVED_CONFIG,this.solutionStackError=c===amzn.beanstalk.constants.CONFIG_SOURCE_SOLUTION_STACK,
amzn.beanstalk.utils.getSuccessfulPromise(b,!1);return c===amzn.beanstalk.constants.CONFIG_SOURCE_SAVED_CONFIG&&!a.savedConfiguration||!a.environmentType?amzn.beanstalk.utils.getSuccessfulPromise(b,!1):amzn.beanstalk.utils.getSuccessfulPromise(b,!0)};this.getReviewContent=function(a){var b={step:this,settings:[new amzn.sm.components.DefinitionTerm(f.localize("solution_stack"),a.solutionStack.solutionStackName)]};a.solutionStack.isLegacy||b.settings.push(new amzn.sm.components.DefinitionTerm(f.localize("environment_type"),
f.localize(a.environmentType)));return b};this.isVisible=function(){return m};this.updateVisibility=function(a){m=!1!==a.launchEnvironment};this.validateConfigSource=function(a){var b=a.configurationSource===amzn.beanstalk.constants.CONFIG_SOURCE_SAVED_CONFIG&&a.savedConfiguration;return a.configurationSource===amzn.beanstalk.constants.CONFIG_SOURCE_SOLUTION_STACK&&a.solutionStack||b}}}])})();(function(){amzn.beanstalk.wizards.steps.ConfigurationDetails={};amzn.beanstalk.wizards.steps.constants.CONFIGURATION_DETAILS="configDetailsStep";amzn.beanstalk.wizards.factory("wizards.steps.ConfigurationDetails",["ConfigurationOptionsService","Externals","ExternalsService","$q","LocalizationService","$window",function(a,b,c,d,e,f){return function(){var c=this.data={},h,k,l=!0;this.name=e.localize("config_details_step_name");this.id=amzn.beanstalk.wizards.steps.constants.CONFIGURATION_DETAILS;this.partialUrl=
"partials/wizards/configuration-details.html";this.constants={HEALTH:amzn.beanstalk.constants.HEALTH,TIME:amzn.beanstalk.constants.TIME};var n=b.lookupForSelect(c,b.constants.KEY_PAIRS);c.healthReportingTypes=[{id:amzn.beanstalk.constants.ENHANCED,name:e.localize("health_reporting_enhanced")},{id:amzn.beanstalk.constants.BASIC,name:e.localize("health_reporting_basic")}];b.selectLoading(c,"instanceTypes");this.initialize=function(d,l){k=l;h=d;var n={options:[{namespace:"aws:autoscaling:launchconfiguration",
optionName:"InstanceType"}]};h.environmentType===amzn.beanstalk.constants.service.environmentType.LOAD_BALANCED&&(n.options.push({namespace:"aws:elasticbeanstalk:application",optionName:"Application Healthcheck URL"}),n.optionSettings=[{namespace:"aws:elasticbeanstalk:environment",optionName:"EnvironmentType",value:h.environmentType}]);h.configurationSource===amzn.beanstalk.constants.CONFIG_SOURCE_SOLUTION_STACK?n.solutionStackName=h.solutionStack.solutionStackName:h.configurationSource===amzn.beanstalk.constants.CONFIG_SOURCE_SAVED_CONFIG&&
(n.templateName=h.savedConfiguration,n.applicationName=h.applicationName,n.templateSpecification={templateSource:{configurationTemplate:{templateName:h.savedConfiguration,applicationName:h.applicationName}}});var m=h.environmentType===amzn.beanstalk.constants.service.environmentType.SINGLE_INSTANCE,t=h.solutionStack.isLegacy,s=h.configurationSource===amzn.beanstalk.constants.CONFIG_SOURCE_SOLUTION_STACK,v=h.tier&&h.tier.isWorker();this.canHaveRollingUpdates=!m&&!t;this.canHaveHealthBasedUpdates=!m&&
!v&&!t;if(this.canHaveNonLegacyElbOptions=!m&&!t&&h.tier.isWebServer()){if(s||_.isUndefined(h.crossZoneEnabled))h.crossZoneEnabled=!0;if(s||_.isUndefined(h.connectionDrainingEnabled))h.connectionDrainingEnabled=!0;_.isUndefined(h.connectionDrainingTimeout)&&(h.connectionDrainingTimeout=20)}t||(h.isCustomVolumeSize=!!h.rootVolumeSize,n.options.push({namespace:"aws:autoscaling:launchconfiguration",optionName:"RootVolumeType"},{namespace:"aws:autoscaling:launchconfiguration",optionName:"RootVolumeSize"},
{namespace:"aws:autoscaling:launchconfiguration",optionName:"RootVolumeIOPS"}),b.selectLoading(c,"rootVolumeTypes"));this.canHaveRollingUpdates&&(this.canHaveImmutableUpdate=(m=_.findWhere(k.avaialbleOptions,{name:"RollingUpdateType"}))&&-1<_.indexOf(m.valueOptions,amzn.beanstalk.constants.IMMUTABLE));if(this.canHaveHealthBasedUpdates&&s&&(_.isUndefined(h.rollingUpdatesEnabled)||_.isNull(h.rollingUpdatesEnabled)))h.rollingUpdatesEnabled=!0,h.rollingUpdateType=amzn.beanstalk.constants.HEALTH;h.rollingUpdateValue||
(h.rollingUpdateValue=!h.rollingUpdatesEnabled||!this.canHaveImmutableUpdate&&h.rollingUpdateType===amzn.beanstalk.constants.IMMUTABLE?amzn.beanstalk.constants.DISABLED:h.rollingUpdateType);a.describeOptions(n).then(function(a){var d=_.reduce(a.options,function(a,b){a[b.name]=b;return a},{});d["Application Healthcheck URL"]?c.healthCheckPattern=d["Application Healthcheck URL"].regex.pattern:h.environmentType===amzn.beanstalk.constants.service.environmentType.LOAD_BALANCED&&f.clientReporting.fault("createWizard:configurationDetails:healthCheckUrl",
a);d.InstanceType?(b.getSelectSuccessCallback(c,"instanceTypes")(d.InstanceType.valueOptions),h.instanceType||(h.instanceType=d.InstanceType.defaultValue)):(b.getSelectFailCallback(c,"instanceTypes")(e.localize("unable_to_retrieve_instance_types")),f.clientReporting.fault("createWizard:configurationDetails:instanceTypes",a));d.RootVolumeType?(b.getSelectSuccessCallback(c,"rootVolumeTypes")(d.RootVolumeType.valueOptions),c.rootVolumeTypes.localizedOptions=_.map(c.rootVolumeTypes.options,function(a){return{value:a,
displayName:e.localize(a,{},a)}})):t||(b.getSelectFailCallback(c,"rootVolumeTypes")(e.localize("unable_to_retrieve_instance_types")),f.clientReporting.fault("createWizard:configurationDetails:rootVolumeTypes",a))},function(){b.getSelectFailCallback(c,"instanceTypes");t||b.getSelectFailCallback(c,"rootVolumeTypes")})};this.refreshKeyPairs=function(){n.refresh()};this.rootVolumeTypeChange=function(){"io1"===h.rootVolumeType?h.isCustomVolumeSize=!0:h.rootVolumeIops=null};this.processContinueRequest=
function(a){if(a.connectionDrainingEnabled&&!a.connectionDrainingTimeout||a.healthReportingSystemType===amzn.beanstalk.constants.BASIC&&(a.deploymentPolicy===amzn.beanstalk.constants.IMMUTABLE||a.rollingUpdateValue===amzn.beanstalk.constants.IMMUTABLE||"Ok"!==a.healthCheckSuccessThreshold))return amzn.beanstalk.utils.getSuccessfulPromise(d,!1);this.canHaveRollingUpdates&&(a.rollingUpdatesEnabled=a.rollingUpdateValue!==amzn.beanstalk.constants.DISABLED,a.rollingUpdateType=a.rollingUpdateValue===amzn.beanstalk.constants.DISABLED?
null:a.rollingUpdateValue);return amzn.beanstalk.utils.getSuccessfulPromise(d,!0)};this.getReviewContent=function(a){if(a.launchEnvironment){var b=[new amzn.sm.components.DefinitionTerm(e.localize("instance_type"),a.instanceType),new amzn.sm.components.DefinitionTerm(e.localize("key_pair"),a.keyPair),new amzn.sm.components.DefinitionTerm(e.localize("email_address"),a.email)];a.solutionStack.isLegacy||b.push(new amzn.sm.components.DefinitionTerm(e.localize("root_volume_type"),e.localize(a.rootVolumeType)||
e.localize("root_volume_option_not_set")),new amzn.sm.components.DefinitionTerm(e.localize("root_volume_size"),a.rootVolumeSize||e.localize("root_volume_option_not_set")),new amzn.sm.components.DefinitionTerm(e.localize("root_volume_iops"),a.rootVolumeIops||e.localize("root_volume_option_not_set")));b.push(new amzn.sm.components.DefinitionTerm(e.localize("health_check_url"),a.healthCheckUrl));return{step:this,settings:b}}};this.isVisible=function(){return l};this.updateVisibility=function(a){l=!1!==
a.launchEnvironment}}}])})();(function(){amzn.beanstalk.wizards.steps.constants.ENVIRONMENT_INFO="environmentInfoStep";amzn.beanstalk.wizards.factory("wizards.steps.EnvironmentInfo",["$log","$q","Alerts","Environments","LocalizationService","UtilService",function(a,b,c,d,e,f){var g=amzn.beanstalk.constants.CNAME_DOMAIN;return function(){var a,k=this,l=!0,n=null;this.cnameDomain=g;this.environmentNames=_.reduce(d.environmentsById,function(a,b){amzn.beanstalk.utils.isEnvironmentTerminated(b)||a.push(b.environmentName);return a},
[]);this.id=amzn.beanstalk.wizards.steps.constants.ENVIRONMENT_INFO;this.name=e.localize("environment_info_step_name");this.partialUrl="partials/wizards/environment-info.html";this.showEnvironmentUrl=!1;this.urlCheckError=this.urlAvailable=this.status=null;this.checkAvailability=function(a){if(a){var b=this;this.urlCheckError=null;n=f.checkAvailability(a);n.then(function(a){b.urlAvailable=a.available;return a},function(a){n=null;b.urlCheckError=a.message})}};this.getReviewContent=function(a){var b=
{step:this,settings:[new amzn.sm.components.DefinitionTerm(e.localize("environment_name"),a.environmentName)]};a.tier.isWebServer()&&b.settings.push(new amzn.sm.components.DefinitionTerm(e.localize("environment_url"),"http://"+a.environmentUrl+g));a.environmentDescription&&b.settings.push(new amzn.sm.components.DefinitionTerm(e.localize("description"),a.environmentDescription));return b};this.initialize=function(b,c){this.status=null;a=c;a.environmentNamePattern=amzn.beanstalk.constants.VALID_ENVIRONMENT_NAME_PATTERN;
b.tier.isWebServer()&&(this.showEnvironmentUrl=!0,a.$watch("input.environmentName",function(a,c){var d=c?_.slugify(c):c;if((b.environmentUrl?b.environmentUrl.toLowerCase():b.environmentUrl)===d)b.environmentUrl=a?_.slugify(a):a,k.urlChanged()}));if(!b.environmentName&&b.applicationName){var d=_.camelize(_.slugify(b.applicationName)).substring(0,19),d=d+"-env";a.input.environmentName=d;a.input.environmentUrl=d.toLowerCase()}};this.isVisible=function(){return l};this.processContinueRequest=function(a){var d=
b.defer();if(!a.environmentName||(40<a.environmentName.length||4>a.environmentName.length)||_.contains(_.invoke(this.environmentNames,"toLowerCase"),a.environmentName.toLowerCase())||a.tier.isWebServer()&&!a.environmentUrl||a.environmentDescription&&200<a.environmentDescription.length)return amzn.beanstalk.utils.getSuccessfulPromise(b,!1);if(a.tier.isWebServer()&&!this.urlAvailable){if(!1===this.urlAvailable)return amzn.beanstalk.utils.getSuccessfulPromise(b,!1);this.status=e.localize("checking_cname_status");
n||this.checkAvailability(a.environmentUrl);n.then(function(a){d.resolve(a.available)},function(a){c.error("validate_environment_url_failed_alert",{message:amzn.beanstalk.utils.htmlEntities(a.message)});d.resolve(!0)})["finally"](function(){k.status=null});return d.promise}return amzn.beanstalk.utils.getSuccessfulPromise(b,!0)};this.urlChanged=function(){n=this.urlAvailable=null};this.updateVisibility=function(a){l=!1!==a.launchEnvironment}}}])})();(function(){amzn.beanstalk.wizards.steps.EnvironmentTags={};amzn.beanstalk.wizards.steps.constants.ENVIRONMENT_TAGS="environmentTagsStep";amzn.beanstalk.wizards.factory("wizards.steps.EnvironmentTags",["$q","LocalizationService","TagsCollection",function(a,b,c){return function(){this.data={};this.id=amzn.beanstalk.wizards.steps.constants.ENVIRONMENT_TAGS;this.name=b.localize("environment_tags_step_name");this.partialUrl="partials/wizards/environment-tags.html";var d=!0;this.initialize=function(a,
b){_.isUndefined(a.tags)&&(a.tags=new c,a.tags.addBlankTag())};this.getReviewContent=function(a){if(a.launchEnvironment)return{settings:_.map(a.tags.getTagsToAdd(),function(a){return new amzn.sm.components.DefinitionTerm(a.key,a.value)}),step:this}};this.isVisible=function(){return d};this.processContinueRequest=function(b){b=b.tags.validate();return amzn.beanstalk.utils.getSuccessfulPromise(a,b)};this.updateVisibility=function(a){var b=a.solutionStack&&a.solutionStack.isLegacy;d=!1!==a.launchEnvironment&&
!b}}}])})();(function(){amzn.beanstalk.wizards.steps.EnvironmentTier={};amzn.beanstalk.wizards.steps.constants.ENVIRONMENT_TIER="environmentTier";amzn.beanstalk.wizards.factory("wizards.steps.EnvironmentTier",["$q","$window","Externals","ExternalsService","LocalizationService","RegionUtil","Tier",function(a,b,c,d,e,f,g){var h=amzn.beanstalk.constants.WEB_SERVER,k=amzn.beanstalk.constants.WORKER;return function(){var b;this.id=amzn.beanstalk.wizards.steps.constants.ENVIRONMENT_TIER;this.name=e.localize("environment_tier_step_name");
this.partialUrl="partials/wizards/environment-tier.html";this.status=null;this.initialize=function(a,c){b=c;a.tier=a.tier||null};this.createNewWebServer=function(a){a.tier&&a.tier.isWorker()&&delete a.instanceProfile;a.tier=new g({name:h,type:"Standard"});a.launchEnvironment=!0;b.checkVisibilities();b.continueRequested()};this.createNewWorker=function(a){a.tier&&a.tier.isWebServer()&&delete a.instanceProfile;a.tier=new g({name:k,type:"SQS/HTTP"});a.launchEnvironment=!0;b.checkVisibilities();b.continueRequested()};
this.getReviewContent=function(a){return{settings:[new amzn.sm.components.DefinitionTerm(e.localize("tier"),a.tier.localize())],step:this}};this.isVisible=function(){return!0};this.processContinueRequest=function(b){if(!b.tier)return amzn.beanstalk.utils.getSuccessfulPromise(a,!1);b.launchEnvironment=!0;return amzn.beanstalk.utils.getSuccessfulPromise(a,!0)};this.updateVisibility=function(a){}}}])})();(function(){amzn.beanstalk.wizards.steps.constants.PERMISSIONS="permissions";amzn.beanstalk.wizards.factory("wizards.steps.Permissions",["$log","$q","Externals","ExternalsService","LocalizationService","Modal","RegionUtil",function(a,b,c,d,e,f,g){var h=amzn.beanstalk.constants.DEFAULT_INSTANCE_PROFILE,k=amzn.beanstalk.constants.DEFAULT_SERVICE_ROLE;return function(){var a=this,g,p=!0,q=function(c){if(c&&c.additionalInfo){var f;if(c.additionalInfo.createRequired)g.status=e.localize("creating_instance_profile"),
f="create_instance_profile_alert";else if(c.additionalInfo.updateRequired)g.status=e.localize("updating_instance_profile"),f="update_instance_profile_alert";else return b.when();return d.updateDefaultInstanceProfile().then(function(b){g.input.instanceProfile=b.value;c.additionalInfo.createRequired&&(a.instanceProfiles=_.reject(a.instanceProfiles,function(b){return b.value===a.newRole.value}),_.findWhere(a.instanceProfiles,{value:b.value})||a.instanceProfiles.push({displayName:b.value,value:b.value}))},
function(a){return b.reject({input:"instanceProfile",messageKey:f,error:a})})}return b.when()},r=function(c){if(c&&c.additionalInfo){var f;if(c.additionalInfo.createRequired)g.status=e.localize("creating_service_role"),f="create_service_role_alert";else if(c.additionalInfo.updateRequired)g.status=e.localize("updating_service_role"),f="update_service_role_alert";else return b.when();return d.updateDefaultServiceRole().then(function(b){g.input.serviceRole=b.value;c.additionalInfo.createRequired&&(a.iamRoles=
_.reject(a.iamRoles,function(b){return b.value===a.newRole.value}),_.findWhere(a.iamRoles,{value:b.value})||a.iamRoles.push({displayName:b.value,value:b.value}))},function(a){return b.reject({input:"serviceRole",messageKey:f,error:a})})}return b.when()},m=function(){return"new"===g.input.instanceProfile?b.when({additionalInfo:{createRequired:!0}}):g.input.instanceProfile===h?(g.status=e.localize("validating_instance_profile"),d.validateDefaultInstanceProfile().then(null,function(a){return b.reject({input:"instanceProfile",
messageKey:"validate_instance_profile_alert",error:a})})):b.when()},t=function(){return"new"===g.input.serviceRole?b.when({additionalInfo:{createRequired:!0}}):g.input.serviceRole===k?(g.status=e.localize("validating_service_role"),d.validateDefaultServiceRole().then(null,function(a){return b.reject({input:"serviceRole",messageKey:"validate_service_role_alert",error:a})})):b.when()};this.id=amzn.beanstalk.wizards.steps.constants.PERMISSIONS;this.loadingValues=!1;this.name=e.localize("permissions_step_name");
this.partialUrl="partials/wizards/permissions.html";this.newRole={displayName:e.localize("permissions_new_role"),value:"new"};this.instanceProfiles=c.values[c.constants.INSTANCE_PROFILES];this.iamRoles=c.values[c.constants.IAM_ROLES];this.initialize=function(a,b){var c;g=b;g.status=null;g.errors={};g.selectChanged=function(a){g.errors[a]&&(g.errors[a]=null)};a.instanceProfile||(c=_.find(this.instanceProfiles,function(a){return a.value===h})||this.newRole,a.instanceProfile=c.value,c===this.newRole&&
(_.contains(this.instanceProfiles,this.newRole)||this.instanceProfiles.unshift(this.newRole)));a.serviceRole||(c=_.find(this.iamRoles,function(a){return a.value===k})||this.newRole,c===this.newRole&&(_.contains(this.iamRoles,this.newRole)||this.iamRoles.unshift(this.newRole)),a.serviceRole=c.value)};this.processContinueRequest=function(a){return m().then(q).then(t).then(r).then(function(){return b.when(!0)})["catch"](function(a){return a?f.alertErrorWithContinue(a).then(function(a){return a?b.when(!0):
b.when(!1)}):b.when(!0)})["finally"](function(){g.status=null})};this.getReviewContent=function(a){return{step:this,settings:[new amzn.sm.components.DefinitionTerm(e.localize("permissions_review_service"),a.serviceRole),new amzn.sm.components.DefinitionTerm(e.localize("instance_profile"),a.instanceProfile)]}};this.isVisible=function(){return p};this.updateVisibility=function(a){var b=_.isUndefined(_.findWhere(c.errors,{code:"AccessDenied"}));a=!1!==a.launchEnvironment;p=b&&a}}}])})();(function(){amzn.beanstalk.wizards.steps.RdsConfiguration={};amzn.beanstalk.wizards.steps.constants.RDS_CONFIGURATION="rdsConfigStep";amzn.beanstalk.wizards.factory("wizards.steps.RdsConfiguration",["$log","$q","Alerts","ConfigurationOptionsService","Externals","LocalizationService","RegionUtil",function(a,b,c,d,e,f,g){var h=amzn.beanstalk.constants.RDS_ALLOCATED_STORAGE_MAP,k=amzn.beanstalk.constants.RDS_SNIPPET_URL,l=amzn.beanstalk.constants.SNIPPET_SUFFIX;return function(){function a(b){t.failedToLoad=
!0;t.failedMessage=f.localize("unable_to_load_rds_info",{message:amzn.beanstalk.utils.htmlEntities(b.message)})}function p(a){c.error("unable_to_fetch_rds_configuration_options",{message:amzn.beanstalk.utils.htmlEntities(a.message)});return!1}function q(a){_.each(a.options,function(a){if(_.has(w,a.name))if("DBAllocatedStorage"===a.name){var b=m.rdsEngine,c=w[a.name],d=parseInt(a.defaultValue,10),e=parseInt(a.maxValue,10),f=parseInt(a.minValue,10);a=m[c.input]||d;b?(b=h[b],e=parseInt(b.maxValue,10),
f=parseInt(b.minValue,10),a=a>=f&&a<=e?_.isString(a)?parseInt(a,10):_.isNumber(a)?a:null:_.isString(f)?parseInt(f,10):_.isNumber(f)?f:null):a=_.isString(d)?parseInt(d,10):_.isNumber(d)?d:null;m[c.input]=a;m[c.max]=e;m[c.min]=f}else c=a.defaultValue,e=w[a.name],b=t.data[e.options]=a.valueOptions,_.contains(b,m[e.input])||(m[e.input]=_.contains(b,c)?c:_.first(a.valueOptions))});return!0}var r=this.data={},m,t=this,s=e.lookupForSelect(r,e.constants.RDS_SNAPSHOTS),v=!1;this.data.dbEngineOptions=["mysql"];
this.data.dbEngineVersionOptions=[];this.data.dbInstanceClassOptions=[];this.failedToLoad=!1;this.id=amzn.beanstalk.wizards.steps.constants.RDS_CONFIGURATION;this.name=f.localize("rds_step_name");this.partialUrl="partials/wizards/rds-configuration.html";this.status=null;var w={DBEngine:{input:"rdsEngine",options:"dbEngineOptions"},DBEngineVersion:{input:"rdsEngineVersion",options:"dbEngineVersionOptions"},DBInstanceClass:{input:"rdsInstanceClass",options:"dbInstanceClassOptions"},DBAllocatedStorage:{input:"rdsAllocatedStorage",
max:"rdsAllocatedStorageMaxValue",min:"rdsAllocatedStorageMinValue"}};this.initialize=function(b,c){m=b;var d=_.map(w,function(a,b){return{namespace:"aws:rds:dbinstance",optionName:b}}),e=_.reduce(w,function(a,b,c){b=m[b.input];_.isDefined(b)&&a.push({namespace:"aws:rds:dbinstance",optionName:c,value:b});return a},[]);this.fetchRdsOptions(d,e);_.isUndefined(m.rdsAllocatedStorage)&&(m.rdsAllocatedStorage=5);m.rdsDeletionPolicy||(m.rdsDeletionPolicy="Snapshot");_.isUndefined(m.rdsMultiAz)&&(m.rdsMultiAz=
"false");m.rdsSnapshot||(m.rdsSnapshot="");s.promise.then(null,a)};this.dbEngineChange=function(a){this.fetchRdsOptions([{namespace:"aws:rds:dbinstance",optionName:"DBEngineVersion"},{namespace:"aws:rds:dbinstance",optionName:"DBInstanceClass"},{namespace:"aws:rds:dbinstance",optionName:"DBAllocatedStorage"}],[{namespace:"aws:rds:dbinstance",optionName:"DBEngine",value:a}])};this.dbEngineVersionChange=function(a,b){this.fetchRdsOptions([{namespace:"aws:rds:dbinstance",optionName:"DBInstanceClass"}],
[{namespace:"aws:rds:dbinstance",optionName:"DBEngine",value:a},{namespace:"aws:rds:dbinstance",optionName:"DBEngineVersion",value:b}])};this.fetchRdsOptions=function(a,b,c){t.status=f.localize(c||"fetching_rds_configuration_options");a={applicationName:m.applicationName,options:a,optionSettings:b,templateSpecification:{templateSnippets:[{snippetName:"RDS"+l,sourceUrl:k.replace("{{region}}",g.getCurrentRegion())}]}};m.configurationSource===amzn.beanstalk.constants.CONFIG_SOURCE_ENVIRONMENT?a.environmentName=
m.environmentName:m.configurationSource===amzn.beanstalk.constants.CONFIG_SOURCE_SOLUTION_STACK?a.solutionStackName=m.solutionStack.solutionStackName:m.configurationSource===amzn.beanstalk.constants.CONFIG_SOURCE_SAVED_CONFIG&&(a.templateName=m.savedConfiguration,a.templateSpecification.templateSource={configurationTemplate:{applicationName:m.applicationName,templateName:m.savedConfiguration}});return d.describeOptions(a).then(q,p)["finally"](function(){t.status=null})};this.getReviewContent=function(a){if(a.launchEnvironment)return{step:this,
settings:[new amzn.sm.components.DefinitionTerm(f.localize("db_engine"),a.rdsEngine),new amzn.sm.components.DefinitionTerm(f.localize("db_engine_version"),a.rdsEngineVersion),new amzn.sm.components.DefinitionTerm(f.localize("instance_class"),a.rdsInstanceClass),new amzn.sm.components.DefinitionTerm(f.localize("allocated_storage"),a.rdsAllocatedStorage),new amzn.sm.components.DefinitionTerm(f.localize("deletion_policy"),f.localize(a.rdsDeletionPolicy))]}};this.isVisible=function(){return v};this.processContinueRequest=
function(a){var c=!0;if(this.failedToLoad)return amzn.beanstalk.utils.getSuccessfulPromise(b,!1);if(!a.rdsEngine||!a.rdsEngineVersion||!a.rdsInstanceClass)c=!1;if(!a.rdsAllocatedStorage||5>a.rdsAllocatedStorage||1024<a.rdsAllocatedStorage)c=!1;a.rdsUsername||(c=!1);a.rdsPassword||(c=!1);return amzn.beanstalk.utils.getSuccessfulPromise(b,c)};this.refreshSnapshots=function(){s.refresh()};this.snapshotChanged=function(a){var b=_.find(r.rdsSnapshots.options,function(b){return b.value===a});b&&(m.rdsAllocatedStorage=
b.additionalInfo.allocatedStorage,m.rdsEngine=b.additionalInfo.engine,m.rdsEngineVersion=b.additionalInfo.engineVersion,m.rdsUsername=b.additionalInfo.masterUsername,this.fetchRdsOptions([{namespace:"aws:rds:dbinstance",optionName:"DBEngine"},{namespace:"aws:rds:dbinstance",optionName:"DBEngineVersion"},{namespace:"aws:rds:dbinstance",optionName:"DBInstanceClass"},{namespace:"aws:rds:dbinstance",optionName:"DBAllocatedStorage"}],[{namespace:"aws:rds:dbinstance",optionName:"DBEngine",value:b.additionalInfo.engine},
{namespace:"aws:rds:dbinstance",optionName:"DBEngineVersion",value:b.additionalInfo.engineVersion}]))};this.updateVisibility=function(a){var b=!1===a.launchEnvironment;v=!0===a.includeRds&&!b}}}])})();(function(){amzn.beanstalk.wizards.steps.ResourceSelection={};amzn.beanstalk.wizards.steps.constants.RESOURCE_SELECTION="resourceSelection";amzn.beanstalk.wizards.factory("wizards.steps.ResourceSelection",["LocalizationService","$q",function(a,b){return function(){var c=!0;this.name=a.localize("resource_selection_title");this.id=amzn.beanstalk.wizards.steps.constants.RESOURCE_SELECTION;this.partialUrl="partials/wizards/resource-selection.html";this.initialize=function(a){a.forceRds&&(a.includeRds=
!0)};this.getReviewContent=function(){return null};this.isVisible=function(){return c};this.processContinueRequest=function(){return amzn.beanstalk.utils.getSuccessfulPromise(b,!0)};this.updateVisibility=function(a){var b=a.solutionStack&&a.solutionStack.isLegacy;b&&(a.includeRds=!1,a.includeVpc=!1);c=!1!==a.launchEnvironment&&!b}}}])})();(function(){amzn.beanstalk.wizards.steps.Review={};amzn.beanstalk.wizards.steps.constants.REVIEW="reviewStep";amzn.beanstalk.wizards.factory("wizards.steps.Review",["$log","LocalizationService",function(a,b){return function(){this.name=b.localize("review_step_name");this.id=amzn.beanstalk.wizards.steps.constants.REVIEW;this.partialUrl="partials/wizards/review.html";this.sections=[];this.initialize=function(b,c){this.sections=[];var f=this;_.each(c.data.steps,function(c){if(c!==f&&c.isVisible())if(c.getReviewContent){if(c=
c.getReviewContent(b))f.sections=f.sections.concat(c)}else a.warn("Skipping review content for: "+c.id)})};this.processContinueRequest=function(){throw Error("There is no continuing from the review screen");};var c=!0;this.isVisible=function(){return c};this.updateVisibility=function(a){c=!1!==a.launchEnvironment}}}])})();(function(){amzn.beanstalk.wizards.steps.VpcConfiguration={};amzn.beanstalk.wizards.steps.constants.VPC_CONFIGURATION="vpcConfigStep";amzn.beanstalk.wizards.factory("wizards.steps.VpcConfiguration",["$log","Externals","LocalizationService","$q",function(a,b,c,d){return function(){var a=this.data={},f,g={},h={},k=this,l={},n=!1;this.errors=[];this.id=amzn.beanstalk.wizards.steps.constants.VPC_CONFIGURATION;this.name=c.localize("vpc_configuration_step_name");this.noVpcFound=!1;this.partialUrl="partials/wizards/vpc-configuration.html";
this.subnetsToDisplay={};this.warnings=[];var p=b.getSelectSuccessCallback(a,b.constants.SECURITY_GROUPS),q=b.getSelectSuccessCallback(a,b.constants.SUBNETS),r=function(a){a=_.groupBy(a,function(a){return a.additionalInfo.vpcId});l=_.reduce(a,function(a,b,c){a[c]=_.groupBy(b,function(a){return a.additionalInfo.az});return a},{});f&&f.vpcId&&(k.subnetsToDisplay=l[f.vpcId])};g[b.constants.AVAILABILITY_ZONES]=b.lookupForSelect(a,b.constants.AVAILABILITY_ZONES);g[b.constants.SECURITY_GROUPS]=b.lookupForSelect(a,
b.constants.SECURITY_GROUPS,function(a){_.each(a,function(a){h[a.value]=a;a.additionalInfo.vpcId||(a.additionalInfo.vpcId=c.localize("no_associated_vpc"));a.displayName=a.displayName+"--"+a.value});p(a)});g[b.constants.SUBNETS]=b.lookupForSelect(a,b.constants.SUBNETS,function(a){q(a);r(a)});g[b.constants.VPCS]=b.lookupForSelect(a,b.constants.VPCS);this.initialize=function(c,d){this.errors=[];f=c;d.$watch(function(){return a.vpcs.options},function(){k.noVpcFound=!a.vpcs.options||0===a.vpcs.options.length;
f.vpcId||k.setDefaultVPC()});f.vpcId&&g[b.constants.VPCS].promise.then(function(){k.vpcChanged(f.vpcId)});_.isUndefined(f.vpcInternalLoadBalancer)&&(f.vpcInternalLoadBalancer="public");_.isUndefined(f.usedForEc2)&&(f.usedForEc2={},f.vpcEc2Subnets&&_.each(f.vpcEc2Subnets,function(a){f.usedForEc2[a]=!0}));_.isUndefined(f.usedForElb)&&(f.usedForElb={},f.vpcElbSubnets&&_.each(f.vpcElbSubnets,function(a){f.usedForElb[a]=!0}));_.isUndefined(f.usedForRds)&&(f.usedForRds={},f.vpcRdsSubnets&&_.each(f.vpcRdsSubnets,
function(a){f.usedForRds[a]=!0}));f.hasOwnProperty("vpcAssociatePublicIpAddress")&&(f.configurationSource===amzn.beanstalk.constants.CONFIG_SOURCE_SOLUTION_STACK&&_.isNull(f.vpcAssociatePublicIpAddress))&&(f.vpcAssociatePublicIpAddress=!0);_.isUndefined(f.vpcAssociatePublicIpAddress)&&(f.vpcAssociatePublicIpAddress=!1)};this.areSubnetsInsufficientForElbAndEc2=function(a){var b=f.vpcAssociatePublicIpAddress;return f.environmentType!==amzn.beanstalk.constants.service.environmentType.SINGLE_INSTANCE&&
!b&&this.subnetsToDisplay[a.value]&&2>this.subnetsToDisplay[a.value].length};this.canContinue=function(a){return!this.noVpcFound&&this.vpcHasEnoughSubnetsForEc2()&&this.vpcHasEnoughSubnetsForRds()};this.checkAssociatePublicIpRecommended=function(){var a=function(a,b,c){return a.concat(b?c:[])},b=_.reduce(f.usedForEc2,a,[]),a=_.reduce(f.usedForElb,a,[]),d=c.localize("suggest_associate_public_ip_address");!f.vpcAssociatePublicIpAddress&&0<_.intersection(b,a).length?_.contains(this.warnings,d)||this.warnings.push(d):
this.warnings=_.without(this.warnings,d)};this.getLoadingError=function(){var b=_.find(a,function(a){return"error"===a.state});return b?b.errorMessage:null};this.getReviewContent=function(a){if(a.launchEnvironment)return{settings:[new amzn.sm.components.DefinitionTerm(c.localize("vpc"),a.vpcId),new amzn.sm.components.DefinitionTerm(c.localize("security_group_review"),a.vpcSecurityGroup),new amzn.sm.components.DefinitionTerm(c.localize("associate_public_ip_address"),a.vpcAssociatePublicIpAddress.toString())],
step:this}};this.handleUseForElb=function(a){f.usedForElb[a.value]&&!f.vpcAssociatePublicIpAddress&&(f.usedForEc2[a.value]=!1);this.checkAssociatePublicIpRecommended()};this.handleUseForEc2=function(a){f.usedForEc2[a.value]&&!f.vpcAssociatePublicIpAddress&&(f.usedForElb[a.value]=!1);this.checkAssociatePublicIpRecommended()};this.isRefreshing=function(){return!!_.find(a,function(a){return"loading"===a.state})};this.isVisible=function(){return n};this.processContinueRequest=function(a){return amzn.beanstalk.utils.getSuccessfulPromise(d,
this.validateInputs(a))};this.refresh=function(){_.each(g,function(a){a.refresh()})};this.refreshSecurityGroups=function(){g[b.constants.SECURITY_GROUPS].refresh()};this.securityGroupFilter=function(a){if(f.vpcId){if(a.additionalInfo.vpcId!==f.vpcId)return!1;if(!f.vpcSecurityGroup||!h[f.vpcSecurityGroup]||h[f.vpcSecurityGroup].additionalInfo.vpcId!==f.vpcId)f.vpcSecurityGroup=a.value}return!0};this.setDefaultVPC=function(){g[b.constants.VPCS].promise.then(function(a){a&&0<a.length&&(f.vpcId=a[0].value,
k.vpcChanged(f.vpcId))})};this.updateVisibility=function(a){n=!!a.includeVpc&&!!a.launchEnvironment};this.validateInputs=function(a){var b=!0;k.errors=[];k.warnings=[];var d=l[a.vpcId],e={},f={},g={},h=[],n=[],p=[];_.each(d,function(b,c){_.each(b,function(b){a.usedForElb[b.value]&&(f[c]=!0,n.push(b.value));a.usedForEc2[b.value]&&(e[c]=!0,h.push(b.value));a.usedForRds[b.value]&&(g[c]=!0,p.push(b.value))})});var q=_.keys(f),r=_.keys(e),A=_.difference(r,q),q=_.difference(q,r);a.includeRds&&2>_.keys(g).length&&
(b=!1,k.errors.push(c.localize("rds_in_at_least_two_error")));1>h.length&&!a.excludeEc2&&(b=!1,k.errors.push(c.localize("need_ec2_subnet_error")));h.length>r.length&&(b=!1,d=_.reduce(d,function(a,b,c){1<_.intersection(h,_.pluck(b,"displayName")).length&&a.push(c);return a},[]),k.errors.push(c.localize("only_one_ec2_per_az_error",{azs:d.join(", ")})));a.environmentType!==amzn.beanstalk.constants.service.environmentType.SINGLE_INSTANCE&&!a.excludeElb&&(1>n.length&&(b=!1,k.errors.push(c.localize("need_elb_subnet_error"))),
0<A.length&&(b=!1,k.errors.push(c.localize("need_elb_for_ec2_error",{azs:A.join(", ")}))),0<q.length&&(b=!1,k.errors.push(c.localize("need_ec2_for_elb_error",{azs:q.join(", ")}))));a.vpcElbSubnets=n;a.vpcEc2Subnets=h;a.vpcRdsSubnets=p;return b};this.vpcChanged=function(a){this.subnetsToDisplay=l[a];this.hasEnoughSubnetsForEc2=this.vpcHasEnoughSubnetsForEc2();this.hasEnoughSubnetsForRds=this.vpcHasEnoughSubnetsForRds()};this.vpcHasEnoughSubnetsForEc2=function(){return!f.vpcId?!0:f.environmentType===
amzn.beanstalk.constants.service.environmentType.SINGLE_INSTANCE||f.vpcAssociatePublicIpAddress?!_.isEmpty(this.subnetsToDisplay):0<_.filter(_.values(this.subnetsToDisplay),function(a){return 1<a.length}).length};this.vpcHasEnoughSubnetsForRds=function(){return!f.vpcId||!f.includeRds?!0:1<_.keys(this.subnetsToDisplay).length}}}])})();(function(){amzn.beanstalk.wizards.steps.WorkerDetails={};amzn.beanstalk.wizards.steps.constants.WORKER_DETAILS="workerDetailsStep";amzn.beanstalk.wizards.factory("wizards.steps.WorkerDetails",["$q","Externals","LocalizationService","ConfigurationOptionsService",function(a,b,c,d){return function(){this.data={};this.id=amzn.beanstalk.wizards.steps.constants.WORKER_DETAILS;this.name=c.localize("worker_details_step_name");this.partialUrl="partials/wizards/worker-details.html";var e=this,f=!1,g=b.lookupForSelect(this.data,
b.constants.SQS_QUEUES);this.initialize=function(a,b){this.data.mimeTypeOptions=["application/json","application/x-www-form-urlencoded","application/xml","text/plain"];a.workerHttpPath=a.workerHttpPath||"/";a.workerMimeType=a.workerMimeType||"application/json";a.httpConnections=a.httpConnections||amzn.beanstalk.constants.WORKER_DEFAULT_HTTP_CONNECTIONS;a.visibilityTimeout=a.visibilityTimeout||amzn.beanstalk.constants.WORKER_DEFAULT_VISIBILITY_TIMEOUT;a.inactivityTimeout=a.inactivityTimeout||a.visibilityTimeout-
1;this.loadingValues=!0;var c={options:[{namespace:"aws:elasticbeanstalk:sqsd",optionName:"ErrorVisibilityTimeout"}],tier:a.tier.serialize()};a.configurationSource===amzn.beanstalk.constants.CONFIG_SOURCE_SOLUTION_STACK?c.solutionStackName=a.solutionStack.solutionStackName:a.configurationSource===amzn.beanstalk.constants.CONFIG_SOURCE_SAVED_CONFIG&&(c.applicationName=a.applicationName,c.templateName=a.savedConfiguration,c.templateSpecification={templateSource:{configurationTemplate:{applicationName:a.applicationName,
templateName:a.savedConfiguration}}});d.describeOptions(c).then(function(b){_.find(b.options,function(a){return"ErrorVisibilityTimeout"===a.name})&&(a.errorVisibilityTimeout=amzn.beanstalk.constants.WORKER_DEFAULT_ERROR_VISIBILITY_TIMEOUT)})["finally"](function(){e.loadingValues=!1})};this.filterQueueName=function(a){a.displayName=_.last(a.displayName.split("/"));return a};this.getReviewContent=function(a){if(a.launchEnvironment)return{settings:[new amzn.sm.components.DefinitionTerm(c.localize("worker_queue_url"),
a.workerQueueUrl),new amzn.sm.components.DefinitionTerm(c.localize("worker_http_path"),a.workerHttpPath),new amzn.sm.components.DefinitionTerm(c.localize("worker_mime_type"),"custom"===a.workerMimeType?a.workerCustomMimeType:a.workerMimeType),new amzn.sm.components.DefinitionTerm(c.localize("worker_http_connections"),a.httpConnections),new amzn.sm.components.DefinitionTerm(c.localize("worker_visibility_timeout"),a.visibilityTimeout)],step:this}};this.isVisible=function(){return f};this.processContinueRequest=
function(b){return amzn.beanstalk.utils.getSuccessfulPromise(a,!0)};this.refreshSqsQueues=function(){g.refresh()};this.updateVisibility=function(a){f=!(!a.tier||!a.tier.isWorker())}}}])})();(function(){amzn.beanstalk.models.EnvironmentStatuses={};angular.module("beanstalkModels").factory("EnvironmentStatuses",[function(){return{statuses:["Launching","Updating","Ready","Terminating","Terminated"]}}])})();(function(){amzn.beanstalk.models.EventSeverities={};angular.module("beanstalkModels").factory("EventSeverities",[function(){return{severityLevels:"TRACE DEBUG INFO WARN ERROR FATAL".split(" ")}}])})();(function(){amzn.beanstalk.localized={};amzn.beanstalk.localized={next:"Next",cancel:"Cancel",all_at_once:"All at once",optional_prefix:"Optional:",select:"Select",learn_more:"Learn more",save:"Save",manual:"Manual",refresh_button:"Refresh",remove:"Remove",local:"Local",rolling:"Rolling",rolling_health:"Rolling based on Health",create:"Create",disabled:"Disabled",rolling_time:"Rolling based on Time",close:"Close",globe_alt_text:"Getting started with AWS Elastic Beanstalk",add:"Add",ignore_healthcheck:"Ignore health check",
time_format:"YYYY-MM-DD HH:mm:ss UTCZZ",previous:"Previous",edit:"Edit",utc:"UTC",apply:"Apply",more:"More",service_name:"Elastic Beanstalk",create_profile:"Create Default Profile","false":"False",automatic:"Auto",launch:"Launch",optional:"Optional.",rolling_with_additional_batch:"Rolling with additional batch",done:"Done",confirm:"Confirm",environment_alert_title:"Environment Alert",immutable:"Immutable",loading_text:"Loading","true":"True",duration_format:"HH:mm:ss",Delete:"Delete",scheduled_action_min_size_is_required:"Min is required.",
rds_step_name:"RDS Configuration",card_instances_label_type:"Instance type:",card_container_value_vars:"{{EnvVariables}}",health_check_url:"Application health check URL",card_vpc_value_id_scheme_internal:"Internal",card_updates_deployments_value_batch_size_fixed:"{{BatchSize}}",no_instance_profile_option:"<No Instance Profile>",need_elb_subnet_error:"You must select at least one subnet for ELB.",environment_type:"Environment type",configuration_template_application_name_required:"Application name is required when using a saved configuration template.",
multiple_days:"{{num}} days",only_one_ec2_per_az_error:"You may only select one EC2 subnet per AZ.",log_fix_create_profile_alert:"You do not have the permission required to create an instance profile. Please contact the account owner to request the required permission.<br>{{message}}",application_name:"Application name",deployment_status_deployed:"Deployed",save_config_action:"Save Configuration",no_application_selected:"An application is required to display the requested URL.",single_weeks:"{{num}} week",
card_elb_value_health:"{{UnknownHealth}}",card_rds_value_multi:"{{MultiAZDatabase}}",health_terminate_instance_question:"<strong>Are you sure you want to terminate this instance?</strong><br>{{instanceId}}",card_rds_label_instance:"Instance class:",in_unit_bytes:"in bytes",worker_mime_type:"MIME type",update_instance_profile_alert:"Failed to update default instance profile: {{message}}",nginx_option:"Nginx",card_scaling_value_czones:"{{CustomAvailabilityZones}}",swap_cnames_page_title:"Swap Environment URLs",
card_rolling_update_label_max_batch_size:"Max batch size:",average_option:"Average",abort_environment_update_confirm:"Abort",restore_environment_naming_conflict:"Another environment with that name already exists.",environment_health_red:"Red",tag_value_pattern:"Tag value contains illegal characters. Only letter, numbers, whitespaces and _ . : / = + - @ are allowed.",waiting_to_delete_application_version:"Waiting&hellip;",in_Microseconds:"in Microseconds",logs_retrieve_error_alert:"An error occurred retrieving logs: {{message}}",
permissions_modal_question:"Do you want to continue anyway?",getting_started_env_name:"Default-Environment",card_scaling_label_type:"Environment type:",card_updates_deployments:"Updates and Deployments",alarm_deleting:"Alarm '{{name}}' is now being removed.",unable_to_load_applications:"Unable to retrieve applications: {{message}}",need_ec2_subnet_error:"You must select at least one subnet for EC2.",percent_sign:"%",minimum_option:"Minimum",solution_stack:"Container type",millions:"{{num}}M",resolving_alarms_status:"Loading Elastic Beanstalk alarms&hellip;",
card_elb_value_rolling_update_enabled:"are enabled",card_worker_label_http_connections:"HTTP connections:",root_volume_size:"Root volume size",info_title:"Info",percent_option:"Percent",deployed_application_version_started:'The deployment to {{environmentName}} started successfully. See the <a href="{{href}}"> events page</a>.',card_sns:"Notifications",card_scaling_value_type:"{{EnvironmentType}}",card_elb_cross_zone_enabled:"Cross zone load balancing",save_config_page_title:"Save Configuration",
card_managed_updates_label_window:"Weekly update window:",applying_managed_action_status:"Applying the managed update&hellip;",permissions_modal_title:"Service Permissions",card_container_label_target_runtime:"Target .NET runtime:",terminate_environment_title:"Terminate Environment",aws_elasticbeanstalk_health_0_pending:"Pending",statistics_average:"Average",creating_topic:"Creating SNS Topic&hellip;",clone_with_update_environment_action:"Clone with Latest Platform",statistics_maximum:"Maximum",card_elb_value_port:"{{LoadBalancerPortProtocol}} on port {{LoadBalancerHTTPPort}}",
clone_environment_page_title:"Clone Environment",clone_description:"Clone of {{originalEnvironmentName}}",card_rolling_update_label_pause_time:"Pause time:",gp2:"General Purpose (SSD)",default_confirm_title:"Are you sure?",unable_to_create_application_error:"Unable to create the application: {{message}}",bits_second_option:"Bits/Second",card_container_label_document_root:"Document root:",terminating_environment_status:"Terminating",card_scaling_label_scheduled_actions:"Scheduled actions:",delete_alarm_confirm:"Delete {{name}}",
resolving_application_versions_status:"Loading Elastic Beanstalk application versions&hellip;",email_address:"Email address",too_many_applications:"Too Many Applications",byCount:"by count",unable_to_refresh_configurations:"Unable to refresh the environment configurations: {{message}}",updating_instance_profile:"Updating default instance profile&hellip;",application_versions_page_title:"{{applicationName}} - Application Versions",standard:"Magnetic",card_container_label_vars:"Environment variables:",
card_elb_label_health_http:"Health:",scheduled_action_max_size_minimum:"Max must be at least 0.",statistics_samplecount:"SampleCount",card_sns_value_notes_on:"On",environment_tier_step_name:"New Environment",creating_application_status:"Creating application&hellip;",getting_started_env_failure:"Unable to create new environment: {{message}}",terabytes:"{{num}}TB",statistics_minimum:"Minimum",unable_to_terminate_environment:"Could not terminate environment {{environmentName}}: {{message}}",scheduled_action_desired_capacity_greater_than_minsize:"Desired capacity must be greater than or equal to min.",
card_elb_value_rolling_update_disabled:"are disabled",view_application_versions_action:"View application versions",disabled_value:"disabled",delete_alarm_title:"Delete Alarm",generic_version_label:"Application Version",card_container_label_nodecommand:"Node command:",card_instances_value_type:"{{InstanceType}}",edit_alarm_page_title:"Edit Alarm",rebuild_environment_warning:'Rebuilding the environment may take several minutes, during which your application will not be available and <strong>any attached Amazon RDS DB instance will be deleted</strong>. If you want to save your data, create a snapshot before rebuilding your environment. <a target="_blank" href="{{domain}}/console/elasticbeanstalk/rds-snapshot">Learn more</a><br><br>To restart your application only, use Restart App Servers.',
unable_to_load_rds_info:'Unable to load the RDS configuration. Make sure you have permission or uncheck "Create an RDS DB Instance with this environment" on the Additional Resources page.<br><br>{{message}}',creating_service_role:"Creating default service role&hellip;",card_rds_value_endpoint:"{{Endpoint}}:{{Port}}",aws_elasticbeanstalk_health_10:"No data",version_label_unavailable:"Application version {{value.versionLabel}} is not available.",tag_key_must_be_unique:"Tag key must be unique.",patch_option:"Patch only",
aws_elasticbeanstalk_health_15:"Warning",manage_alarms_page_title:"Manage Alarms",duration_with_suffix:"{{time}} ago",card_rds_multiazdatabase_true:"true",card_worker_value_mime_type:"{{MimeType}}",managed_updates_dashboard_maintenance_window_description:"between <strong>{{startTime}}</strong> and <strong>{{endTime}} ({{timeZone}} GMT)</strong>.",card_instances_rootvolumetype_gp2:"General Purpose (SSD)",card_container_value_streamLogs_false:"disabled",card_health_value_healthcheck_url:"{{ApplicationHealthcheckURL}}",
health_status_menu_prefix:"Filter: {{name}}",card_rds_label_storage:"Storage:",unable_to_delete_application:"Unable to delete the application {{applicationName}}: {{message}}",scheduled_action_start_time_is_required:"Start time is reqired.","1_minute_option":"1 minute",card_scaling_value_remove:"< {{LowerThreshold}}",card_scaling_value_instances:"{{MinSize}} - {{MaxSize}}",section_web:"Web Tier",permissions_create_service:"Elastic Beanstalk will create a service role with a standard set of permissions.",
unable_to_fetch_rds_configuration_options:"Unable to retrieve RDS configuration options.<br><br>{{message}}",sum_option:"Sum",delete_alarm_question:'Are you sure you want to delete alarm "{{name}}"?',permissions_modal_confirm_button_text:"Continue anyway",card_container_value_streamLogs_true:"enabled",aws_elasticbeanstalk_health_20:"Degraded",card_container_label_enable_32_bit_applications:"Enable 32-bit applications:",application_version_unprocessed:"Unprocessed",uploading_status:"Uploading application version&hellip;",
card_vpc:"VPC",rds_in_at_least_two_error:"RDS requires that you have a subnet selected in at least two Availability Zones.",insufficient_privileges:"Insufficient Privileges",restart_app_servers_confirm:"Restart Application Server(s)",card_scaling_value_scheduled_actions:"{{NumScheduledActions}}",card_rolling_update_enabled:"Rolling updates",card_scaling_environmenttype_singleinstance:"Single instance",no_associated_vpc:"No VPC",aws_elasticbeanstalk_health_25:"Severe",card_instances_value_root_volume_type:"{{RootVolumeType}}",
enabled_value:"enabled",permissions_new_role:"Create a new role",card_container_label_nodeversion:"Node version:",card_instances_label_key:"Key pair:",card_elb_value_cross_zone_disabled:"is disabled",card_container_value_logpublicationcontrol_true:"On",resolving_configuration_options_status:"Loading Elastic Beanstalk configuration settings&hellip;",card_elb_value_sport_legacy:"{{LoadBalancerHTTPSPort}}",events_page_title:"{{environmentName}} - Events",card_vpc_label_apip:"Associate Public IP Address:",
environment_name:"Environment name",metric_error_alert:"An error occurred retrieving metric data: {{message}}",tag_key_pattern:"Tag key contains illegal characters. Only letters, numbers, whitespaces and _ . : / = + - @ are allowed.",billions:"{{num}}B",permissions_review_service:"Service role",validating_settings_status:"Validating environment settings&hellip;",worker_visibility_timeout:"Visibility Timeout",vpc:"VPC",updating_service_role:"Updating default service role&hellip;",card_sns_value_notes_off:"Off",
card_container_label_allow_url_fopen:"Allow URL fopen:",message:"{{message}}",aborting_environment_status:"Aborting",seconds_option:"Seconds",application_version_processing:"Processing",card_worker_value_http_connections:"{{HttpConnections}}",environment:"Environment",card_managed_updates_value_disabled:"are disabled",card_vpc_value_esub:"{{ELBSubnets}}",add_alarm_page_title:"Add Alarm",health_url_help_worker:"Path to which the SQS daemon sends an HTTP GET request to verify instance health. Example: /health",
retrieving_configuration_options:"Retrieving values for configuration source&hellip;",card_managed_updates:"Managed Updates",deployment_status_failed:"Failed",card_elb_value_sport:"{{LoadBalancerSSLPortProtocol}} on port {{LoadBalancerHTTPSPort}}",container_env_help_jdbc_connection_string:"Connection string to JDBC database (e.g. RDS) for application use.",numeric_parameter:"Number",card_instances_value_root_volume_size:"{{RootVolumeSize}} GiB",access_denied_title:"Access Denied",problem_loading_page:"A problem occurred while loading your page: {{message}}",
parameter_minlength:"{{name}} can't be shorter than {{minLength}} characters.",update_service_role_alert:"Failed to update default service role: {{message}}",default_page_title:"Elastic Beanstalk Management Console",minor_option:"Minor and patch",card_container_label_display_errors:"Display errors:",step_needs_more_info:"This step needs more information to continue.",missing_bucket_key:"Could not upload file: missing bucket key.",delete_app_action:"Delete application",card_vpc_label_visibility:"ELB visibility:",
section_worker:"Worker Tier",scheduled_action_end_time_before_start_time:"Start time must come before end time.",deployment_settings:"Deployment settings",internal_failure:"Internal Failure",launching_event_time_format:"h:mma",parameter_max_min_range:"Choose a value from {{min}} to {{max}}.",health_reboot_instance_title:"Reboot Instance",opt_in_required:"Opt In Required",default_cancel_button_text:"Cancel",permissions_create_instance:"Elastic Beanstalk will create an instance profile with a standard set of permissions.",
scheduled_action_min_size_minimum:"Min must be at least 0.",no_such_resource_alarm:"Resource named {{logicalId}} not found.",bits:"{{num}}b",thousands:"{{num}}K",health_terminate_instance_title:"Terminate Instance",dashboard_page_title:"{{environmentName}} - Dashboard",single_days:"{{num}} day",need_elb_for_ec2_error:"You must select at least one ELB subnet in each AZ where there is an EC2 subnet. Missing ELB in: {{azs}}",unable_to_rebuild_environment:"Could not rebuild environment {{environmentName}}: {{message}}",
Snapshot:"Create snapshot",card_updates_deployments_policy_label:"Deployment policy:",any_3_option:"Any 3",any_1_option:"Any 1",card_health:"Health",WebServer:"Web Server",card_container_label_xmx:"Maximum JVM heap size:",card_container_label_xms:"Initial JVM heap size:",single_seconds:"{{num}} second",tag_key_required:"Tag key must be non-empty.",delete_application_versions_page_title:"{{applicationName}} - Delete Application Versions",card_updates_deployments_deploymentpolicy_allatonce:"All at once",
card_rds_label_engine:"Engine:",instance_type:"Instance type",time_on:"on",container_env_help_aws_access_key_id:"Specifying this and AWS_SECRET_KEY provides your credentials to your application in the environment properties.",worker_queue_url:"Worker queue URL",resolving_settings_status:"Loading Elastic Beanstalk settings&hellip;",card_scaling_value_add:"> {{UpperThreshold}}",deploying_status:"Deploying {{versionLabel}} to {{environmentId}}.",no_environment_selected:"An environment is required to display the requested URL.",
must_select_one_version:"You must select one application version to deploy.",alarm_creating:"Alarm '{{name}}' is now creating.",create_application_page_title:"Create Application",card_rds_value_delete:"{{DBDeletionPolicy}}",card_instances_label_root_volume_type:"Root volume type:",cname_prefix:"CNAME prefix",off_option:"Off",card_rds_dbdeletionpolicy_delete:"All data is lost",application_info_step_name:"Application Info",update_settings_alert:"Failed to update settings: {{message}}",validate_settings_alert:"Unable to validate settings: {{message}}",
single_minutes:"{{num}} minute",card_rds:"RDS","native":"Preconfigured",deploy_application_version_page_title:"Deploy Application Version",create_service_role_alert:"Failed to create default service role: {{message}}",card_updates_deployments_value_batch_size_percentage:"{{BatchSize}}%",fetching_vpc_configuration_options:"Fetching VPC configuration options&hellip;",card_health_label_health_type:"Health reporting:",Worker:"Worker",missing_action:"Missing Action",an_alarm:"An Alarm",deletion_policy:"Deletion policy",
updating_environment:"Updating Environment&hellip;",alarm_add_alert:"Failed to update environment with new alarm: {{message}}",rebuild_environment_title:"Rebuild Environment",default_apply_button_text:"Apply",config_details_step_name:"Configuration Details",key_pair:"Key pair",describing_rds_template_extension_status:"Describing database settings&hellip;",must_select_one_configuration:"You must select one configuration.",card_elb:"Load Balancing",application_overview_page_title:"{{applicationName}} - Environments",
environment_url:"Environment URL",in_unit_bits:"in bits",too_many_application_versions:"Too Many Application Versions",card_rds_label_delete:"When the environment is deleted:",unable_to_delete_application_version:"Unable to delete: {{message}}",card_elb_value_port_off:"Off",permissions_create_instance_and_service:"Elastic Beanstalk will create a service role and instance profile with a standard set of permissions.",scheduled_action_name_is_required:"A name is required for scheduled actions.",property_name_required:"You must specify a property name.",
card_elb_value_sport_off:"Off",resolving_instance_profiles_status:"Loading instance profiles&hellip;",configuration_maintenance_window_description:"Any available managed updates will run between <strong>{{startTime}}</strong> and <strong>{{endTime}} ({{timeZone}} GMT)</strong>.",terminate_worker_environment_warning:'If you terminate this environment, any attached Amazon RDS DB instance will be deleted. If you want to save your data, create a snapshot before terminating your environment. <a target="_blank" href="{{domain}}/console/elasticbeanstalk/rds-snapshot">Learn more</a>',
spec_choice_no_version:"{{architecture}}",swap_cnames_action:"Swap environment URLs",rebuild_environment_action:"Rebuild Environment",card_elb_value_cross_zone_enabled:"is enabled",card_worker_value_queue_url:"{{WorkerQueueURL}}",validating_service_role:"Validating default service role&hellip;",updating_environment_status:"Updating",request_expired:"Request Expired",all_alarms_filter:"Show All",terabits:"{{num}}Tb",card_instances_rootvolumetype_standard:"Magnetic",parameter_maxlength:"{{name}} can't be longer than {{maxLength}} characters.",
abort_environment_update_warning:'If you cancel an application version deployment, your environment might have instances that run different versions of your application. You can deploy the same or another application version to all instances later. <a target="_blank" href="{{domain}}/console/elasticbeanstalk/cancel-version-update">Learn more</a>',restart_app_servers_action:"Restart App Server(s)",card_scaling_value_scale:"{{Statistic}} {{MeasureName}}",malformed_query_string:"Malformed Query String",
default_alert_title:"Warning",statistics_sum:"Sum",version_name_suffix:"Version",health_reboot_instance_question:"<strong>Are you sure you want to reboot this instance?</strong><br>{{instanceId}}",uploading_and_checking_cname_status:"Uploading application version and checking URL availability&hellip;",card_worker_label_http_path:"HTTP path:",card_rolling_update_label_min_in_service:"Minimum instances in service:",alarm_fire_alert_title:"New Alarms Firing",rebuild_environment_question:"Are you sure you want to rebuild the environment {{environmentName}}?",
overviewTimeFormat:"M/D HH:mm",unable_to_restore_environment:"Could not restore environment {{environmentName}}: {{message}}",scheduled_action_max_size_maximum:"Max can't be greater than {{capacityLimit}}.",root_volume_iops:"Root volume IOPS",kilobytes:"{{num}}KB",card_instances_availability_zones_any:"Any",maximum_option:"Maximum",card_scaling_measurename_networkout:"network out",delete_alarm_error_alert:"Unable to delete alarm: {{message}}",scheduled_action_desired_capacity_minimum:"Desired capacity must be at least 0.",
graph_page_title:"{{environmentName}} - {{metricName}} Details",bits_option:"Bits",no_such_environment:"No environment '{{environmentId}}' exists.",legacy:"Legacy",restart_app_servers_title:"Restart Application Server(s)",card_rds_label_multi:"Multi Availability Zone:",environment_configuration_dashboard_title:"{{environmentName}} - Configuration",resolving_iam_roles_status:"Loading IAM roles&hellip;",unable_to_abort_environment_update:"Could not abort the current environment operation for {{environmentName}}: {{message}}",
card_sns_label_endpoint:"Send notifications to",no_dimension_aws_elasticbeanstalk:"Environment (no dimension)",getting_started_application_failure:"Unable to create new application: {{message}}",apache_option:"Apache",any_option:"Any",rolling_deployment_percentage:"Deploy to {{batchSize}}% of the fleet at a time",launching_environment_status:"Launching",instance_class:"Instance class",tier:"Tier",saving_changes:"Saving configuration changes&hellip;",card_updates_deployments_value_timeout:"{{Timeout}}",
solution_stack_selection:"AWS Elastic Beanstalk will create an environment running {{solutionStack.platformName}} {{solutionStack.platformDescription}} on {{solutionStack.architecture}}.",application_version_step_name:"Application Version",application_list_page_title:"Elastic Beanstalk Applications",application_configurations_page_title:"{{applicationName}} - Saved Configurations",card_updates_deployments_rollingupdatetype_health:"Health",unable_to_change_platform:"Unable to change platform: {{message}}",
card_elb_value_port_legacy:"{{LoadBalancerHTTPPort}}",describing_configuration_template_status:"Loading saved configuration&hellip;",sample_application:"Sample application",incomplete_signature:"Incomplete Signature",s3_location_pattern:"Source code URL must be a valid S3 location.",webserver_standard:"Web Server",monitoring_page_title:"{{environmentName}} - Monitoring",card_health_systemtype_enhanced:"Enhanced",card_container_label_gzipcompression:"Gzip compression:",tag_key_maxlength:"Tag keys can be up to 128 characters in length.",
any_2_option:"Any 2",max_age:"Age",unable_to_clone_environment:"Could not clone environment: {{message}}",multiple_hours:"{{num}} hours",bytes:"{{num}}B",abort_environment_update_title:"Abort Current Operation",in_Seconds:"in Seconds",unable_to_retrieve_defaults:"Unable to retrieve default rolling update values, leave the options blank to retrieve the defaults: {{message}}",file_upload_exception:"Could not upload file: unknown exception.",card_worker_value_visibility_timeout:"{{VisibilityTimeout}}",
creating_environment_status:"Creating environment {{environmentName}}&hellip;",gigabytes:"{{num}}GB",could_not_retrieve_solution_stacks:"Could not retrieve solution stacks. Error:",choose_environment_step_name:"Environment Type",card_scaling_environmenttype_loadbalanced:"Load balanced, auto scaling",card_vpc_value_id_scheme_public:"Public",health_reporting_basic:"Basic",card_worker:"Worker Configuration",card_container_value_xrayenabled_false:"disabled",health_details_show:"Show details",alert_fix_saving:"Saving changes to your environment&hellip;",
card_rds_multiazdatabase_false:"false",configuration_loading:"Your configuration is loading. When it has finished, it will be running {{templateName}}",restore_environment_unrestorable:"Environment can not be restored.",invalid_query_parameter:"Invalid Query Parameter",no_occurence:"--",card_vpc_label_rsub:"RDS subnets:",card_worker_label_mime_type:"MIME type:",environment_health_yellow:"Yellow",error_title:"Error",health_reboot_instance_confirm:"Reboot",container_env_help_rails_skip_asset_compilation:"This key-value pair will be made available to your application as an environment property.",
card_elb_label_health:"Health:",unable_to_apply_action:"Unable to apply update: {{message}}",card_scaling_label_czones:"Custom Availability Zones:",bundle_logs:"Full Logs",health_terminate_instance_started:"Your request to terminate the instance sent successfully.",none_value:"none",cname_prefix_is_unavailable:"{{getFqdn()}} is unavailable.",resolving_resources_status:"Loading Elastic Beanstalk resources&hellip;",no_legacy_alarms:'You cannot set an alarm on legacy environments. See the <a target="_blank" href="{{domain}}/console/elasticbeanstalk/legacy-environments">documentation</a> to learn more about migrating to a new environment.',
statistics_default:"{{name}} (Default)",container_env_help_param1:"A predefined environment property that will be available to your running application.",container_env_help_param2:"A predefined environment property that will be available to your running application.",version_label_required:"Application code is required.",card_updates_deployments_deploymentpolicy_rollingwithadditionalbatch:"Rolling with additional batch",card_container_label_proxyserver:"Proxy server:",container_env_help_param5:"A predefined environment property that will be available to your running application.",
metric_exists_alert:"You already selected this metric.",resolving_solution_stacks_status:"Loading Elastic Beanstalk solution stacks&hellip;",container_env_help_param3:"A predefined environment property that will be available to your running application.",container_env_help_param4:"A predefined environment property that will be available to your running application.",card_vpc_label_id:"VPC ID:",environment_logs_page_title:"{{environmentName}} - Logs",parameter_pattern:"{{name}} must match pattern {{pattern.toString()}}.",
application_version_building:"Building",card_scaling_label_instances:"Number instances:","default":"Default",card_scaling_label_add:"Add instance when",health_status_pending:"Pending",static_path_required:"You must specify a virtual path.",card_worker_value_http_path:"{{HttpPath}}",unable_to_retrieve_instance_types:"Unable to load instance type options.",latest:"Latest",card_updates_deployments_deploymentpolicy_rolling:"Rolling",card_elb_value_connection_draining_enabled:"is enabled with {{ConnectionDrainingTimeout}} second timeout",
parameter_cant_be_blank:"{{name}} can't be blank.",multiple_seconds:"{{num}} seconds",card_health_systemtype_basic:"Basic",added_metric_status:'Added "{{description}}." Click Save to preserve your configuration.',section_network:"Network Tier",card_vpc_value_isub:"{{Subnets}}",swap_env_cnames_action:"Swap Environment URLs",card_instances_label_root_volume_size:"Root volume size:",trillions:"{{num}}T",restore_environment_action:"Restore Environment",getting_started_version_failure:"Unable to create new application version: {{message}}",
card_vpc_value_visibility:"{{ELBScheme}}",container_default_value:"container default",string_parameter:"String parameter",s3_location_not_in_service_region:"S3 Location Not In Service Region",db_engine_version:"Engine version",unable_to_get_upload_parameters:"Unable to prepare the form for uploading an application version. Refresh the page to retry: {{message}}",section_data:"Data Tier",unable_to_deploy_application_version:"Unable to deploy application version: {{message}}",card_elb_label_sport:"Secure port:",
environment_tags_step_name:"Environment Tags",card_scaling_label_scale:"Scale based on",wrong_upload_location:"Could not upload file: post unsuccessful.",worker_http_connections:"HTTP connections",fetching_rds_configuration_options:"Fetching RDS configuration options&hellip;",megabits:"{{num}}Mb",scheduled_action_max_size_less_than_min_size:"Max can't be less than min.",scheduled_action_name_must_be_unique:"Name must be unique.",tags_page_title:"{{environmentName}} - Tags",select_a_file_prompt:"Select a file to upload.",
health_reporting_enhanced:"Enhanced",managed_actions_page_title:"{{environmentName}} - Managed Updates",container_env_help_rack_env:"This key-value pair will be made available to your application as an environment property.",too_many_applications_exception:"Your account has reached its limit for applications.",default_confirm_button_text:"Ok",card_vpc_value_id:"{{VPCId}}",default_version_label:"First Release",validate_environment_url_failed_alert:"Unable to validate environment URL: {{message}}",
security_group_review:"Security group",scheduled_action_start_time_before_end_time:"Start time must be before end time.",unrecogized_resource:"No route matches the resource type that was provided.",no_such_resource_graph:'Resource named {{logicalId}} for graph "{{description}}" not found.',unable_delete_configuration_message:"Unable to delete configurations: {{message}}",card_updates_deployments_rollingupdatetype_immutable:"Immutable",logs_request_error_alert:"An error occurred requesting logs: {{message}}",
worker_http_path:"HTTP path",unable_load_configuration_message:"Unable to load configuration: {{message}}",validate_service_role_alert:"Failed to validate default service role: {{message}}",configuration_template_solution_stack_required:"Solution stack is required.",bytes_second_option:"Bytes/Second",no_data:"No Data",health_reboot_instance_started:"Your request to reboot the instance sent successfully.",warn_title:"Warning",describing_configuration_settings_status:"Describing configuration settings&hellip;",
multiple_weeks:"{{num}} weeks",count_option:"Count",card_elb_label_health_tcp:"Health:",alarm_editing:"Alarm '{{name}}' is now updating.",service_role:"Service role",card_vpc_label_esub:"ELB subnets:",creating_instance_profile:"Creating default instance profile&hellip;",new_alarms_fired:'{{num}} alarms have transitioned to ALARM. Go to the <a href="{{link}}"> Alarms dashboard</a>.',config_updating_environment_message:"Elastic Beanstalk is {{status | lowercase}} your environment. Additional edits can't be made at this time.",
parameter_required:"{{name}} is required.",health_terminate_instance_confirm:"Terminate",review_step_name:"Review Information",configuration_template_template_name_required:"Configuration template name is required.",resolving_custom_platforms_status:"Loading custom platforms&hellip;",sample_version_label:"Sample Application",unable_save_configuration_message:"Unable to save configuration: {{message}}",terminate_environment_confirm:"Terminate",load_config_action:"Load Configuration",card_health_label_healthcheck_url:"Application health check URL:",
in_Milliseconds:"in Milliseconds",card_rds_label_endpoint:"Endpoint:",environment_not_launching:"Not launching an environment",no_such_application:"No application with the name '{{applicationName}}' exists.",description:"Description",instance_profile:"Instance profile",card_rds_value_instance:"{{DBInstanceClass}}",docker:"Preconfigured \u2013 Docker",throttling:"Throttling",root_volume_option_not_set:"(default)",unable_to_upload:"A problem occurred while uploading to S3.",aws_elasticbeanstalk_health_by:"by health codes",
environment_creating:"Elastic Beanstalk is now creating your environment. When it has finished it will be running {{versionLabel}}.",restore_terminated_env_action:"Restore terminated environment",environment_health_green:"Green",card_health_value_health_type:"{{SystemType}}",create_topic_alert:"Failed to create SNS topic: {{message}}",card_vpc_value_apip:"{{AssociatePublicIpAddress}}",version_label:"Version label",redirecting_to_iam:"Redirecting to role creation page&hellip;",validate_instance_profile_alert:"Failed to validate default instance profile: {{message}}",
permissions_step_name:"Permissions",s3_location:"S3 location",invalid_parameter_combination:"Invalid Parameter Combination",unable_to_load_config_options:"Unable to load values for configuration source. The wizard does not include default settings: {{message}}",alert_failed_update:"Failed to update your environment: {{message}}",card_rds_value_engine:"{{DBEngine}}",autogenerated_value:"autogenerated",suggest_associate_public_ip_address:'When one subnet is used for both EC2 and ELB it is suggested that you check the "Associate Public IP Address" checkbox unless you have set up a NAT instance to route traffic from the Internet to your ELB subnet.',
abort_environment_update_action:"Abort Current Operation",health_terminate_instance_required:"You must select an instance to terminate.",card_container_label_streamLogs:"Log streaming:",card_rds_value_storage:"{{DBAllocatedStorage}}GB",generic:"Generic",no_such_resource_for_alarm:'Resource for alarm "{{alarmName}}" not found.',describing_configuration_options_status:"Describing configuration options&hellip;",application_source:"Application source",unable_to_retrieve_health:"Unable to retrieve health data: {{message}}",
tag_key_reserved_key:'"Name" is a reserved tag key.',health_action_terminate:"Terminate",multiple_minutes:"{{num}} minutes",in_alarm_alarms_filter:"In Alarm",SingleInstance:"Single instance",validating_instance_profile:"Validating default instance profile&hellip;",abort_environment_update_question:"Are you sure you want to abort the current operation?",ones:"{{num}}",card_elb_value_connection_draining_disabled:"is disabled",time:"Time",scheduled_action_desired_capacity_maximum:"Desired capacity can't be greater than {{capacityLimit}}.",
unable_to_reboot_instance:"Unable to reboot: {{message}}",card_scaling_label_remove:"Remove instance when",card_updates_deployments_label_batch_size:"Deployment batch size:",scheduled_action_name_alphanumeric:"Name must be alphanumeric.",card_elb_value_health_http:"Requests {{HealthPath}} over {{HealthType}} on port {{HealthPort}}",card_updates_deployments_rollingupdatetype_time:"Time",health_url_help_web:"Path to which ELB sends an HTTP GET request to verify instance health. Example: /health",card_managed_updates_enabled:"Managed updates",
new_alarm_fired:'{{alarm}} has transitioned to ALARM. Go to the <a href="{{link}}">Alarms dashboard</a>.',root_volume_type:"Root volume type",bytes_option:"Bytes",gigabits:"{{num}}Gb",invalid_action:"Invalid Action",blank_string_value:"blank",no_dimension:"(no dimension)",resolving_configuration_settings_status:"Loading Elastic Beanstalk configuration options&hellip;",invalid_parameter_value:"Invalid Parameter Value",card_scaling:"Scaling",card_worker_label_visibility_timeout:"Visibility timeout:",
need_ec2_for_elb_error:"You must select at least one EC2 subnet in each AZ where there is an ELB subnet. Missing EC2 in: {{azs}}",create_instance_profile_alert:"Failed to create default instance profile: {{message}}",platform_not_changed:"Selected platform version cannot be equal to the current value.",view_saved_configurations_action:"View saved configurations",card_elb_value_health_tcp:"{{HealthType}} pings on port {{HealthPort}}",missing_parameter:"Missing Parameter",card_updates_deployments_policy_value:"{{DeploymentPolicy}}",
health_status_filter_or_worse:"{{name}} or worse",worker_details_step_name:"Worker Details",card_instances_value_key:"{{EC2KeyName}}",card_rolling_update_value_min_in_service:"{{MinInstancesInService}}",card_elb_label_sport_off:"Secure port:",restart_app_servers_question:"Are you sure you want to restart the application server(s) for the environment {{environmentName}}?",container_env_help_rails_skip_migrations:"This key-value pair will be made available to your application as an environment property.",
container_env_help_aws_secret_key:"Specifying this and AWS_ACCESS_KEY_ID provides your credentials to your application in the environment properties.",card_updates_deployments_deploymentpolicy_immutable:"Immutable",no_such_alarm:"Alarm named {{logicalResourceId}} not found.",fix_environment_page_title:"{{environmentName}} - Fix",allocated_storage:"Allocated storage",managed_update_started:"Your managed update has been submitted and will start momentarily.",resource_selection_title:"Additional Resources",
card_instances_availability_zones_any_2:"Any 2",card_vpc_label_isub:"Instance subnets:",terminate_environment_question:"Are you sure you want to terminate the environment {{environmentName}}?",card_instances_availability_zones_any_1:"Any 1",card_worker_label_queue_url:"Worker queue URL",card_container_label_logpublicationcontrol:"Log publication:",resolving_environment_status:"Loading Elastic Beanstalk environment&hellip;","5_minute_option":"5 minute",too_many_configuration_templates:"Your account has reached its limit for saved configurations.",
card_container_value_logpublicationcontrol_false:"Off",version_link_label:"Link",card_instances_availability_zones_any_3:"Any 3",card_sns_label_notes_on:"Notifications:",card_container_label_zlib_output_compression:"Zlib output compression:",deleted_success_application_version:"Deleted.",tail_logs:"Last 100 Lines",validation_error:"Validation Error",tag_key_reserved_prefix:'Tag key may not start with "aws:" or "elasticbeanstalk:".',smallGraphTimeFormat:"M/D<br>HH:mm",environment_info_step_name:"Environment Info",
version_label_cant_be_sample:'Version label "Sample Application" is reserved.',deploy_button_text:"Deploy",card_rds_label_no_db:"No database configured",s3_location_filesize:"Source code must be less than 512 MB.",spec_choice_with_version:"{{platformDescription}} on {{architecture}}",max_count:"Count",health_status_filter_by:"Filter By",metric_alarms_filter:"Metric {{metricName}}",health_reboot_instance_required:"You must select an instance to reboot.",card_container_label_xrayenabled:"AWS X-Ray:",
alarm_edit_alert:"Failed to update alarm: {{message}}",older:"Older",application_version_processed:"Processed",rolling_updates_enabled:"Enable rolling updates",terminate_web_server_environment_warning:"If you terminate this environment, the URL {{'http://' + environment.cname | linky:'_blank'}} will no longer be accessible and any attached Amazon RDS DB instance will be deleted. If you want to save your data, create a snapshot before terminating your environment. <a target=\"_blank\" href=\"{{domain}}/console/elasticbeanstalk/rds-snapshot\">Learn more</a>",
card_container_label_xx_maxpermsize:"Maximum JVM permanent generation size:",card_rolling_update_value_pause_time:"{{PauseTime | isoDurationToTime}}",health_dashboard_page_title:"{{environmentName}} - Health Dashboard",card_elb_label_port_off:"Port:",card_managed_updates_value_enabled:"are enabled",card_instances_value_root_volume_iops:"{{RootVolumeIOPS}}",clone_environment_action:"Clone Environment",health_status_remove_filter:"Remove Filter",scheduled_action_max_size_is_required:"Max is required.",
count_second_option:"Count/Second",could_not_retrieve_tiers:"Could not retrieve tiers. Error:",card_rds_value_no_db:"",launch_environment_page_title:"Create Environment",service_unavailable:"Service Unavailable",card_container_label_jvm_options:"JVM command line options:",version_label_must_be_unique:"Application version named '{{value}}' already exists.",rolling_deployment_fixed:"Deploy to {{batchSize}} instance(s) at a time",scheduled_action_recurrence_must_be_unique:"Recurrence must be unique.",
megabytes:"{{num}}MB",health_action_reboot:"Reboot",deep_linking_routing_error:"Routing error: Resource type '{{resourceType}}' not recognized",card_container:"Software Configuration",validating_settings:"Validating configuration changes&hellip;",alert_fix_validating:"Validating changes to your environment&hellip;",card_elb_label_port:"Port:",permissions_modal_access_denied_desc:'You do not have enough permissions. {{message}} <a target="_blank" href="{{domain}}/console/elasticbeanstalk/roles">Learn more</a>',
unable_to_launch_environment:"Could not launch environment: {{message}}",delete_configurations_page_title:"{{applicationName}} - Delete Configurations",unable_to_load_versions:"Unable to load application versions for {{applicationName}}: {{message}}",resolving_tiers_status:"Loading Elastic Beanstalk tiers&hellip;",iam_role_creation_alert:"Something happened while trying to create a new IAM role.",redirecting_page_title:"Redirecting&hellip;",in_unit_labels:"in labels",creating_application_version_status:"Creating application version {{versionLabel}}&hellip;",
card_scaling_statistic_average:"Average",health_status_total:"Total",terminate_environment_action:"Terminate Environment",getting_started_app_name:"My First Elastic Beanstalk Application",checking_cname_status:"Checking URL availability&hellip;",resolving_managed_actions_status:"Loading Elastic Beanstalk managed updates&hellip;",card_instances_label_zones:"Availability Zones:",getting_started_page_title:"Elastic Beanstalk Management Console",configuration_validation:"Configuration Validation",create_env_action:"Create environment",
card_managed_updates_value_window:"{{PreferredStartTime}} UTC",select_an_engine:"Select an Engine",configuration_template_platform_required:"You must specify a platform.",updating_environment_alert_message:"Elastic Beanstalk is {{status | lowercase}} your environment.",card_sns_value_endpoint:"{{NotificationEndpoint}}",scheduled_action_name_maxlength:"Name can't be longer than 255 characters.",LoadBalanced:"Load balancing, auto scaling",scheduled_action_min_size_maximum:"Min can't be greater than {{capacityLimit}}.",
aws_elasticbeanstalk_health_2:"Unavailable",aws_elasticbeanstalk_health_1:"Info",aws_elasticbeanstalk_health_0:"Ok",card_instances_rootvolumetype_io1:"Provisioned IOPS (SSD)",swap_cname_failure:"Failed to swap environment URLs: {{message}}",swap_cname_success:"Now swapping {{source}} and {{destination}}.",no_such_resource_overview:'Resource named {{logicalId}} for overview "{{description}}" not found.',card_elb_connection_draining_enabled:"Connection draining",card_rds_dbdeletionpolicy_snapshot:"Snapshot the data before deleting the database",
aws_elasticbeanstalk_health_5:"Unknown",unable_to_terminate_instance:"Unable to terminate: {{message}}",kilobits:"{{num}}Kb",card_sns_label_notes_off:"Notifications:",missing_authentication_token:"Missing Authentication Token",restart_app_servers_warning:"Restarting the application server(s) may take several seconds.",pause_time_exceeds_max_time_error:"Pause time cannot exceed 1 hour.",single_hours:"{{num}} hour",none_option:"None",io1:"Provisioned IOPS (SSD)",card_instances_value_zones:"{{AvailabilityZones}}",
card_rolling_update_value_max_batch_size:"{{MaxBatchSize}}",tag_value_maxlength:"Tag values can be up to 256 characters in length.",db_engine:"DB engine",card_rolling_update_value_type:"{{RollingUpdateType}}",worker_sqs_http:"Worker",card_rolling_update_label_type:"Rolling update type:",card_instances:"Instances",parameter:"Parameter",card_container_value_xrayenabled_true:"enabled",application_version_failed:"Failed",health_url_help_web_single:"Enable load balancing to use HTTP health checks.",card_instances_label_root_volume_iops:"Root volume IOPS:",
card_vpc_value_rsub:"{{DBSubnets}}",card_container_label_memory_limit:"Memory limit:",in_unit_seconds:"in seconds",deleting_application_version:"Deleting&hellip;",metric_resources_error_alert:"Could not retrieve environment resources: {{message}}",card_container_label_max_execution_time:"Max execution time:",card_updates_deployments_label_timeout:"Command timeout:",environment_health_grey:"Grey",associate_public_ip_address:"Associate Public IP Address",container_env_help_bundle_without:"This key-value pair will be made available to your application as an environment property.",
health_details_hide:"Hide details",please_correct_errors:"You probably missed something. <strong>Please check the highlighted fields</strong>.",scheduled_action_desired_capacity_less_than_maxsize:"Desired capacity must be less than or equal to max.",deployment_status_in_progress:"In Progress",vpc_configuration_step_name:"VPC Configuration",upload_and_deploy_title:"Upload and Deploy",version_label_cant_be_sample_application:"Sample applications aren't supported for this configuration.",restore_environment_page_title:"{{applicationName}} - Terminated Environments",
rebuild_environment_confirm:"Rebuild",unable_to_create_application_version_error:"Unable to create the application version: {{message}}",s3_location_required:"Source code is required.",invalid_client_token_id:"Invalid Client Token ID",unable_to_restart_app_servers:"Could not restart app server(s) for {{environmentName}}: {{message}}",changing_platform_status:"Changing the environment platform&hellip;",in_unit_percent:"in percent"}})();(function(){amzn.beanstalk.templates={};angular.module("beanstalkTemplates",[]).run(["$templateCache",function(a){a.put("partials/application-display.html",'<div class="application-display" data-app="{{application.applicationName}}"> <div class="heading-with-actions clearfix"> <div class="actions"> <a ng-href="{{swapCnamesUrl}}" ng-show="showSwapCnames" class="btn" data-swap-cnames>Swap URLs</a> <aws-action-button class="far-right" actions="actions" on-action="actionSelected(action)"></aws-action-button> </div> <h2 title="{{application.applicationName}}"><a ng-href="{{pathToApplicationOverview}}">{{application.applicationName}}</a></h2> </div> <div environments-list environments="environments" application="application"></div></div>');
a.put("partials/application/application-header.html",'<div class="row-fluid application-header-display bottom-gutter"> <div class="span12"> <div class="actions pull-right" ng-show="showActions"> <aws-action-button class="far-right" actions="actions" on-action="actionSelected(action)"></aws-action-button> </div> <h2> <a class="header-link" ng-href="{{pathToAllApplications}}">All Applications</a> <i class="icon-angle-right header-icon"></i> {{application.applicationName}} </h2> </div></div>');a.put("partials/application/application-overview.html",
'<div application-header application="application"></div><div class="row-fluid"> <div class="span2" application-sidenav selected="environments" application="application"></div> <div class="span10"> <div environments-list environments="environments" application="application"></div> </div></div>');a.put("partials/application/application-sidenav.html",'<div class="aws-sidenav"> <ul> <li class="type-size-big" ng-class="{selected: \'environments\' === selected}"><a ng-href="{{overviewPath}}">Environments</a></li> <li class="type-size-big" ng-class="{selected: \'versions\' === selected}"><a ng-href="{{versionsPath}}">Application versions</a></li> <li class="type-size-big" ng-class="{selected: \'configurations\' === selected}"><a ng-href="{{configurationsPath}}">Saved configurations</a></li> </ul></div>');
a.put("partials/application/application-versions.html",'<div class="application-versions"> <div application-header application="application" show-actions="false"></div> <div class="row-fluid"> <div class="span2" application-sidenav selected="versions" application="application"></div> <div class="span10"> <div class="pull-right"> <button id="settings-button" class="btn" ng-click="openResourceLifecycleModal()" analytics-click="avl_OpenDialog">Settings</button> <button id="delete-application-versions-button" class="btn" data-delete-version ng-click="deleteApplicationVersions()">Delete</button> <div class="relative inline-block" click-outside="closeDeployForm()" click-outside-enabler="deployFormVisible"> <button class="btn" data-deploy-version ng-click="toggleDeployForm()">Deploy</button> <div class="popover bottom popover-form" ng-class="{show: deployFormVisible}"> <div class="arrow far-right"></div> <div name="applicationVersionDeployer" class="form-horizontal popover-content" ng-form submit-to-class> <div class="control-group blurred" ng-class="{invalid: selectedApplicationVersionsInvalid()}"> <label class="control-label">Version label:</label> <div class="controls"> <p class="help-inline control-text">{{getSelectedApplicationVersions() | applicationVersionsToString}}</p> </div> </div> <div class="control-group" ng-class="{invalid: applicationVersionDeployer.environment.$invalid}" blur-to-class> <label class="control-label">Environment:</label> <div class="controls"> <select name="environment" ng-model="deployInfo.environment" ng-options="env as env.environmentName for env in getEnvironments | deployableEnvironment track by env.environmentId" ng-show="(getEnvironments | deployableEnvironment).length > 0" on-enter="deployApplicationVersion()" required="required"> </select> <p class="help-inline control-text" ng-show="(getEnvironments | deployableEnvironment).length === 0">No Environments are currently available.</p> <p class="help-inline text-error" ng-show="(getEnvironments | deployableEnvironment).length > 0 && !deployInfo.environment && noEnvironmentSelected">You must select an environment.</p> </div> </div> <div class="control-group" ng-show="deployInfo.environment !== null && deployInfo.environment.cname !== null"> <label class="control-label">Environment URL:</label> <div class="controls"> <p class="help-inline control-text">{{deployInfo.environment.cname}}</p> </div> </div> <div class="clearfix"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="closeDeployForm()">Cancel</a> <button class="btn btn-primary" ng-disabled="deploymentStatus !== null" ng-click="deployApplicationVersion()"> <i class="icon-spinner icon-spin" ng-show="deploymentStatus !== null"></i> Deploy </button> </div> <span class="status-display" ng-bind-html="deploymentStatus"></span> </div> </div> </div> </div> <div class="relative inline-block" click-outside="closeUploadForm()" click-outside-enabler="uploadFormVisible"> <button class="btn" data-upload-version ng-click="toggleUploadForm()">Upload</button> <div class="popover bottom popover-form" ng-class="{show: uploadFormVisible}"> <div class="arrow far-right"></div> <div name="applicationVersionUploader" class="form-horizontal popover-content m-top-20" ng-form submit-to-class> <div class="control-group" ng-class="{invalid: applicationVersionUploader.versionLabel.$invalid}" blur-to-class> <label class="control-label">Version label:</label> <div class="controls"> <input type="text" name="versionLabel" ng-maxlength="100" ng-minlength="1" ng-model="uploadInfo.versionLabel" ng-pattern="/^[^/]+$/" on-enter="uploadApplicationVersion()" required="required" unique-version-label> </div> <p class="help-inline text-error" ng-show="applicationVersionUploader.versionLabel.$error.pattern">Specify a version label that is between 1 and 100 characters and does not contain a slash (/).</p> </div> <div class="control-group" ng-class="{invalid: applicationVersionUploader.description.$invalid}" blur-to-class> <label class="control-label">Description:</label> <div class="controls"> <input type="text" name="description" ng-model="uploadInfo.description" ng-maxlength="200" on-enter="uploadApplicationVersion()"> <div class="help-inline">Optional.</div> <p class="help-inline text-error" ng-show="applicationVersionUploader.description.$invalid">The description cannot have more than 200 characters.</p> </div> </div> <div class="control-group" ng-class="{invalid: fileInputError && !uploader.hasFileSelected()}" blur-to-class> <label class="control-label">Upload application:</label> <div class="controls"> <file-uploader accept-types="acceptTypes" get-filename="uploader.getFilename" has-file-checker="uploader.hasFileSelected" reset="uploader.reset" upload-trigger="uploader.upload"></file-uploader> <p class="help-inline text-error" ng-show="fileInputError">{{fileInputError}}</p> <p class="help-inline text-error" ng-show="applicationVersionUploader.versionLabel.$error.labelExists">An application version with that label already exists.</p> </div> </div> <div class="clearfix"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="closeUploadForm()">Cancel</a> <button class="btn btn-primary" ng-disabled="uploadingStatus !== null" ng-click="applicationVersionUploader.$valid && uploadApplicationVersion()"> <i class="icon-spinner icon-spin" ng-show="uploadingStatus !== null"></i> Upload </button> </div> <span class="status-display" ng-bind-html="uploadingStatus"></span> </div> </div> </div> </div> <button class="btn m-left-20" ng-click="refresh()"> <i class="icon-spinner" ng-class="{\'icon-spin\': loadingVersions || loadingEnvironments}"></i> Refresh </button> </div> <div class="row-fluid"> <div class="span12"> <table data-table="resource"> <colgroup> <col class="selection"> <col> <col> <col class="timestamp"> <col> <col> </colgroup> <thead> <tr data-table-header="togglable"> <th data-table-input="true"> <input type="checkbox" check-all-box check-all-all="versions.byApplication[application.applicationName]" check-all-selected="versionSelection" check-all-key="versionLabel" /> </th> <th>Version Label</th> <th>Description</th> <th>Date Created</th> <th>Source</th> <th>Deployed To</th> </tr> </thead> <tbody> <tr ng-repeat="version in versions.byApplication[application.applicationName]" data-version-row="{{version.versionLabel}}"> <th data-table-input="true"> <input type="checkbox" ng-model="versionSelection[version.versionLabel]" /> </th> <td data-label>{{version.versionLabel | cleanVersionLabel }}</td> <td data-description>{{version.description}}</td> <td>{{version.dateCreated | intToDateTimeString }}</td> <td> <a ng-href="{{version | versionToUrl}}" ng-show="version.status !== \'BUILDING\'" target="{{version.sourceBundle | bundleToTarget}}">{{version.sourceBundle | bundleToLinkTitle}}</a> <span ng-show="version.status === \'BUILDING\'">{{localizeStatus(version)}}</span> </td> <td>{{environmentsByVersion[version.versionLabel]}}</td> </tr> <tr ng-show="loadingVersions && !versions.byApplication[application.applicationName]"> <td colspan="6" class="text-center"><i class="icon-spinner icon-spin"></i></td> </tr> </tbody> </table> <div class="placeholder m-top-20" ng-show="!loadingVersions && !versions.byApplication[application.applicationName]"> <span class="type-size-big placeholder-title">No application versions</span> </div> </div> </div> </div> </div></div>');
a.put("partials/application/delete-application-modal.html",'<div class="modal-header"> <button type="button" class="close" data-dismiss="modal" ng-click="dialog.close()">&times;</button> <h3>Delete Application</h3></div><div ng-controller="DeleteApplicationModalController"> <div class="modal-body"> <div class="alert alert-error alert-icon" ng-show="errorMessage"> <p ng-bind-html="errorMessage"></p> </div> <p>Are you sure you want to delete the application: <strong>{{application.applicationName}}</strong>?</p> </div> <div class="modal-footer text-left"> <div class="pull-right"> <button class="btn" ng-click="dialog.close()">Cancel</button> <button class="btn btn-danger" ng-click="deleteApplication()" data-confirm="Delete">Delete</button> </div> </div></div>');
a.put("partials/application/delete-application-versions.html",'<div class="row-fluid"> <h1 class="span12 no-padding underline">Delete Application Versions</h1></div><div class="row-fluid"> <div class="span12"> <p> The following application versions will be deleted: </p> </div></div><div class="row-fluid m-top-10" ng-repeat="vl in versionLabels"> <div class="span12"> <strong>{{vl}}</strong> <span class="p-left-10 {{statusByLabel[vl].clazz}}" ng-bind-html="statusByLabel[vl].status"></span> </div></div><div class="row-fluid m-top-10 control-group"> <label class="checkbox"> <input type="checkbox" name="deleteFromS3" ng-model="input.deleteFromS3"> Delete versions from Amazon S3 </label></div><div class="row-fluid"> <div class="span12"> <div class="pull-right"> <a class="btn btn-link" ng-hide="deleteComplete" ng-href="{{versionsPageUrl}}">Cancel</a> <button id="delete-application-versions-confirm-button" class="btn btn-danger" ng-hide="deleteComplete" ng-disabled="deleteInProgress" ng-click="deleteApplicationVersions()"> <i class="icon-spinner icon-spin" ng-show="deleteInProgress"></i> Delete </button> <a class="btn btn-primary" ng-show="deleteComplete" ng-href="{{versionsPageUrl}}">Done</a> </div> </div></div>');
a.put("partials/application/delete-configurations.html",'<div class="row-fluid"> <h1 class="span12 underline bottom-gutter">Delete Configurations</h1> <p> The following configurations will be deleted: </p></div><div class="row-fluid m-top-10" ng-repeat="config in selectedConfigs"> <div class="span12"> <strong>{{config}}</strong> </div></div><div class="row-fluid"> <div class="span12"> <div class="pull-right"> <a href="" ng-click="goToApplicationConfigurations()" class="btn btn-link">Cancel</a> <button class="btn btn-danger" ng-disabled="deleteInProgress" ng-click="deleteConfigurations()"> <i class="icon-spinner icon-spin" ng-show="deleteInProgress"></i> Delete </button> </div> </div></div>');
a.put("partials/application/restore-environment.html",'<div class="terminated-environments"> <div class="row-fluid"> <div class="span12"> <h2 class="underline">Terminated environments</h2> <p class="m-bottom-15">You can restore environments terminated in the last six weeks.</p> <table data-table="resource" eb-rowspan-hover> <colgroup> <col class="selection"> <col> <col class="timestamp"> <col> <col> </colgroup> <thead> <tr data-table-header="togglable"> <th data-table-input="true"></th> <th>Name</th> <th>Date terminated</th> <th>Platform configuration</th> <th>Application version</th> </tr> </thead> <tbody> <tr class="selectable-row" ng-repeat="environment in terminatedEnvs" ng-click="selected.environment = environment"> <td><input type="radio" name="selectedEnvironment" ng-model="selected.environment" ng-value="environment"></td> <td>{{environment.environmentName}}</td> <td>{{environment.dateUpdated | intToDateTimeString}}</td> <td>{{environment.solutionStackName}}</td> <td>{{environment.versionLabel}}</td> </tr> <tr ng-show="loadingEnvs"> <td colspan="5" class="text-center"><i class="icon-spinner icon-spin"></i></td> </tr> </tbody> </table> <div class="placeholder m-top-20" ng-show="!hasTerminatedEnvironments() && !loadingEnvs"> <span class="type-size-big placeholder-title">No environments found.</span> </div> <div class="pull-right"> <a href="" class="btn btn-link" analytics-click="restore_env_BtnCancel" ng-click="cancel()">Cancel</a> <button class="btn btn-primary" analytics-click="restore_env_BtnRestore" ng-click="restoreEnvironment()" ng-disabled="!hasTerminatedEnvironments() || !hasSelectedEnvironment() || restoreInProgress"> <i class="icon-spinner icon-spin" ng-show="restoreInProgress"></i> Restore </button> </div> </div> </div></div>');
a.put("partials/application/update-resource-lifecycle-modal.html",'<div ng-controller="UpdateResourceLifecycleModalController" ng-form="resourceLifecycleForm"> <div class="modal-header"> <button type="button" analytics-click="avl_Cancelled" class="close" data-dismiss="modal" ng-click="dialog.close()">&times;</button> <h3>Application version lifecycle settings</h3> </div> <div class="modal-body"> <div class="row-fluid form-horizontal new-form"> <div class="span12"> <alert></alert> <p class="m-bottom-15">Configure a lifecycle policy to limit the number of application versions to retain for future deployments. This policy will not delete application versions that are currently deployed or are in the process of being created. <a eb-docs-href="/console/elasticbeanstalk/lifecycle">Learn more</a></p> <div class="control-group"> <label class="control-label">Lifecycle policy</label> <div class="controls"> <label class="checkbox"> <input type="checkbox" analytics-click="avl_Enabled" name="versionLifecycleEnabled" ng-model="versionLifecycle.enabled"> Enable </label> </div> </div> <div class="control-group" ng-class="{ \'input-error\': hasLifecycleRuleValidationError(), \'input-warning\': hasLifecycleRuleValidationWarning() }"> <label class="control-label">Lifecycle rule</label> <div class="controls" ng-class="{ \'text-disabled\': !versionLifecycle.enabled }"> <div class="radio m-bottom-10"> <label> <input type="radio" analytics-click="avl_CountOption" name="versionLifecycleRule" ng-disabled="!versionLifecycle.enabled" ng-model="versionLifecycle.activeRule" value="count"> Set the application versions limit by total count </label> <div class="m-top-10"> <div class="input-append"> <input type="number" analytics-input="avl_CountValue" class="input-mini" maxvalue="versionLifecycle.maxCountRule.max" minvalue="versionLifecycle.maxCountRule.min" name="maxCountRule" ng-blur="validateMaxCountRuleValue()" ng-disabled="!versionLifecycle.enabled || versionLifecycle.activeRule !== \'count\'" ng-model="versionLifecycle.maxCountRule.value" ng-required="versionLifecycle.activeRule === \'count\'"> <span class="add-on">Application Versions</span> </div> </div> <div class="validation-message" ng-bind-html="message" ng-repeat="message in versionLifecycle.maxCountRule.errorMessages()"></div> </div> <div class="radio m-bottom-10"> <label> <input type="radio" analytics-click="avl_MaxAgeOption\'" name="versionLifecycleRule" ng-disabled="!versionLifecycle.enabled" ng-model="versionLifecycle.activeRule" value="age"> Set the application versions limit by age </label> <div class="m-top-10"> <div class="input-append"> <input type="number" analytics-input="avl_MaxAgeValue" class="input-mini" maxvalue="versionLifecycle.maxAgeRule.max" minvalue="versionLifecycle.maxAgeRule.min" name="maxAgeRule" ng-blur="validateMaxAgeRuleValue()" ng-disabled="!versionLifecycle.enabled || versionLifecycle.activeRule !== \'age\'" ng-model="versionLifecycle.maxAgeRule.value" ng-required="versionLifecycle.activeRule === \'age\'"> <span class="add-on">days</span> </div> </div> <div class="validation-message" ng-bind-html="message" ng-repeat="message in versionLifecycle.maxAgeRule.errorMessages()"></div> </div> </div> </div> <div class="control-group"> <label class="control-label">Retention</label> <div class="controls"> <select analytics-select="avl_Retention" name="deleteSourceFromS3" ng-disabled="!versionLifecycle.enabled" ng-model="versionLifecycle.deleteSourceFromS3" ng-options="(option ? \'Delete source bundle from S3\' : \'Retain source bundle in S3\') for option in [false, true]" required> <option ng-show="false" value=""></option> </select> </div> </div> <div class="control-group" ng-class="{ \'input-error\': !serviceRole.errors.isEmpty() }"> <label class="control-label">Service role</label> <div class="controls"> <select analytics-select="avl_ServiceRole" name="serviceRole" ng-disabled="!versionLifecycle.enabled" ng-model="serviceRole.value" ng-options="role.arn as role.name for role in serviceRole.roles | orderBy:\'name\'" required> </select> <div class="validation-message" ng-bind-html="message" ng-repeat="message in serviceRole.errorMessages()"></div> </div> </div> </div> </div> </div> <div class="modal-footer text-left"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="dialog.close()" analytics-click="avl_Cancelled">Cancel</a> <button analytics-click="avl_Saved" class="btn btn-primary" ng-disabled="resourceLifecycleForm.$invalid" ng-click="resourceLifecycleForm.$valid && submit()">Save</button> </div> </div></div>');
a.put("partials/applications-list.html",'<div class="row-fluid app-list-display" chevron-display> <div ng-class="{ span3: showSidebar, \'sidebar-closed\': !showSidebar }" ng-show="showSidebar"> <learn-more></learn-more> <p>If you want to use a command line to create, manage, and scale your Elastic Beanstalk applications, please use the Elastic Beanstalk Command Line Interface (EB CLI).</p> <h4><strong>Get Started</strong></h4> <ul class="setup-instructions"> <li><code>$ mkdir HelloWorld</code></li> <li><code>$ cd HelloWorld</code></li> <li><code>$ eb init -p PHP</code></li> <li><code>$ echo "Hello World" &gt; index.html</code></li> <li><code>$ eb create dev-env</code></li> <li><code>$ eb open</code></li> </ul> <p>To deploy updates to your applications, use <strong>&lsquo;eb deploy&rsquo;</strong>.</p> </div> <div ng-class="{ span9: showSidebar, span12: !showSidebar }"> <div class="heading-with-actions row-fluid"> <div class="actions form-inline"> <label for="appsFilter">Filter by Application Name:</label> <input type="text" id="appsFilter" name="appsFilter" ng-model="appsFilter.applicationName"> </div> <h1> <span ng-show="appsFilter.applicationName">Filtered Applications</span> <span ng-hide="appsFilter.applicationName">All Applications</span> </h1> </div> <application-display application="app" environments="data.envs.environmentsByApplication[app.applicationName]" ng-repeat="app in data.apps.applications | filter:appsFilter | orderBy:\'applicationName\' track by app.applicationName" on-action="onAction(action, app)"> </application-display> </div> <a class="chevron-link" href="" ng-class="{ \'chevron-display-left\': fullWidth || !showSidebar, \'chevron-display-right\': !fullWidth && showSidebar }" ng-click="toggleSidebar()"> <i class="color-neutral icon-large" ng-class="{ \'icon-caret-left\': !fullWidth && showSidebar, \'icon-caret-right\': !fullWidth && !showSidebar, \'icon-caret-up\': fullWidth }"></i> </a></div>');
a.put("partials/components/double-slider.html",'<div class="double-slider"> <div class="left-label" ng-show="leftLabel.length">{{leftLabel}}</div> <div class="right-label" ng-show="rightLabel.length">{{rightLabel}}</div> <div class="slider-container"> <div class="value low" simple-popover popover-text="{{leftPopover}}" show-popover="showLowValuePopover" popover-left-offset="9"></div> <div class="range"></div> <div class="value high" simple-popover popover-text="{{rightPopover}}" show-popover="showHighValuePopover" popover-direction="{{ popoverDirection }}" popover-left-offset="9"></div> <div class="bar"></div> </div></div>');
a.put("partials/components/eb-alert.html",'<div class="alert alert-error alert-icon" ng-show="show()"> <button type="button" class="close" ng-click="clear()">&times;</button> <h3 ng-bind="ebAlert.getTitle()"></h3> <p ng-bind-html="ebAlert.getMessage()"></p></div>');a.put("partials/components/eb-status-indicator.html",'<div class="status-indicator" ng-class="{ \'fade-in\': show() }"> <div class="status-indicator-backdrop"></div> <div class="status-indicator-message"> <i class="spinner icon-spin"></i> <h2 ng-bind-html="statusIndicator.getMessage()"></h2> </div></div>');
a.put("partials/components/external-service-select.html",'<div> <div ng-if="info.state === \'ready\'"> <select ng-model="inputModel[inputKey]" ng-disabled="disabled" ng-change="onChange()" ng-required="isRequired" ng-options="option.value as option.displayName group by option.additionalInfo[groupBy] for option in info.options | filter:optionsFilter" ng-multiple="isMultiple"> <option value="" ng-show="!!defaultOptionText">{{defaultOptionText}}</option> </select> <a href="#" click-eater ng-click="onRefresh()">Refresh <i class="icon-spinner"></i></a> </div> <div ng-if="info.state === \'error\'"> <input type="text" ng-model="inputModel[inputKey]" ng-disabled="disabled" ng-required="isRequired" name="{{inputKey}}" ng-change="onChange()"/> <span class="text-error">{{info.errorMessage}}</span> </div> <div ng-show="info.state === \'loading\'"> <i class="icon-spinner icon-spin"></i> Loading </div></div>');
a.put("partials/components/file-uploader.html",'<div> <form action="{{trustUrl(params.action)}}" target="s3-upload-target" method="POST" enctype="multipart/form-data" name="uploadForm"> <input type="hidden" name="acl" value="private"/> <input type="hidden" name="policy" value="{{params.policy}}" /> <input type="hidden" name="key" value="{{params.key}}" /> <input type="hidden" name="success_action_redirect" value="{{params.success_action_redirect}}" /> <input type="hidden" name="x-amz-signature" value="{{params.signature}}" /> <input type="hidden" name="Content-Type" value="application/x-zip"/> <input type="hidden" name="x-amz-date" value="{{params.date}}" /> <input type="hidden" name="x-amz-algorithm" value="{{params.algorithm}}" /> <input type="hidden" name="x-amz-credential" value="{{params.credential}}" /> <input type="hidden" name="x-amz-security-token" value="{{params.securityToken}}" /> <input type="file" name="file" ng-disabled="disabled" ng-required="input.sourceType === \'upload\'" change-digester> </form></div>');
a.put("partials/components/loader-display.html",'<div environment-header environment="environment" ng-if="environment"></div><div class="row-fluid events-display"> <div class="span2"> <div environment-sidenav environment="environment" ng-show="displayEnvironmentSidenav()" selected=""></div> </div> <div class="span10"> <h1>Loading &hellip; <i class="icon-spin icon-spinner"></i></h1> <ul class="unstyled"> <li ng-repeat="(key, value) in statusMessages" ng-bind-html="value"></li> </ul> </div></div>');
a.put("partials/components/pause-time-input.html",'<span ng-form="pauseTimeForm"> <input type="number" ng-model="duration.hours" class="pause-time-input" ng-disabled="controlsDisabled"> Hour <input type="number" ng-model="duration.minutes" class="pause-time-input" ng-disabled="controlsDisabled"> Minutes <input type="number" ng-model="duration.seconds" class="pause-time-input" ng-disabled="controlsDisabled"> Seconds</span>');a.put("partials/components/updating-alert.html",'<div class="update-alert alert alert-block alert-info" ng-show="isUpdating()"> <i class="icon-spinner icon-spin icon-2x pull-left"></i> <div class="hidden-overflow"> <div ng-hide="!useDefaultText || isEnvironmentAborting()">{{defaultMessage}}</div> <div ng-hide="useDefaultText || isEnvironmentAborting()">{{updateText}}</div> <div ng-show="isEnvironmentAborting()"> Elastic Beanstalk is aborting the current environment operation. <span ng-hide="useDefaultText">Additional edits can\'t be made at this time.</span> </div> <div class="abort-info-message" ng-show="isAbortableOperationInProgress()"> To cancel this operation select <strong>Abort Current Operation</strong> from the <strong>Actions</strong> dropdown. </div> <a class="link" ng-href="{{eventsUrl}}" ng-hide="{{onEventsPage === \'true\'}}">View Events</a> <div></div>');
a.put("partials/directives/batch-size-picker.html",'<div class="control" ng-class="{ invalid: batchSizeInvalid(\'Percentage\') }"> <label class="radio inline-block"> <input ng-disabled="disablePicker" type="radio" name="batchSizeType" ng-model="batchSizeType.value" value="Percentage"> Percentage </label> <div class="conditional-input"> <div class="input-append"> <input type="number" class="input-mini" max="100" min="1" name="batchSizePercentage" ng-disabled="disablePicker || batchSizeType.value !== \'Percentage\'" ng-model="batchSizePercentage"> <span class="add-on">%</span> </div> <div class="help-inline">of instances at a time</div> <div class="inline-help text-error" ng-show="batchSizeInvalid(\'Percentage\') && uploadAndDeployForm.batchSizePercentage.$error.max"> Must not exceed 100%. </div> </div></div><div class="control" ng-class="{ invalid: batchSizeInvalid(\'Fixed\') }"> <label class="radio inline-block"> <input ng-disabled="disablePicker" type="radio" name="batchSizeType" ng-model="batchSizeType.value" value="Fixed"> Fixed </label> <div class="conditional-input"> <input type="number" class="input-mini" maxvalue="maxSize.value" min="1" name="batchSizeFixed" ng-disabled="disablePicker || batchSizeType.value !== \'Fixed\'" ng-model="batchSizeFixed"> <div class="help-inline">instances at a time (max: {{maxSize.value}})</div> <div class="inline-help text-error" ng-show="batchSizeInvalid(\'Fixed\') && uploadAndDeployForm.batchSizeFixed.$error.maxvalue"> Must not exceed {{maxSize.value}} (the auto scaling max). </div> </div></div>');
a.put("partials/directives/eb-select-button.html",'<div class="dropdown inline-block" ng-class="{open: opened}" click-outside="toggleOpen()" click-outside-enabler="opened"> <button class="btn dropdown-toggle" ng-click="toggleOpen()" ng-disabled="disableMenu">{{filter(selection.menuName || selection.name || selection.value)}}</button> <ul class="dropdown-menu"> <li ng-repeat="option in options" ng-click="selectOption(option)" ng-class="{disabled: option.disabled}"><a href="">{{filter(option.name || option.value)}}</a></li> </ul></div>');
a.put("partials/directives/expanding-section.html",'<h3 ng-click="collapsed = !collapsed" class="underline pointer"> <i ng-class="{\'icon-caret-right\': collapsed, \'icon-caret-down\': !collapsed}" class="icon-small"></i>{{sectionTitle}}</h3><div ng-class="{\'expanding-section-collapsed\': collapsed, \'expanding-section-expanded\': !collapsed}" ng-transclude></div>');a.put("partials/directives/show-more-paragraph.html",'<div class="show-more" ng-class="{\'show-more-expanded\' : expanded}" style="width:{{width}}px" ng-transclude></div><a href="" ng-show="textIsOverflowed || expanded" ng-bind-html="expanded ? \'Close\' : \'More\'" ng-click="toggleExpanded()"></a>');
a.put("partials/directives/solution-stack-picker.html",'<div class="control"> <select class="input-xlarge" ng-change="platformChange(solutionStacks)" ng-disabled="controlsDisabled" ng-model="solutionStacks" ng-options="option.specs as option.name group by option.category for option in platforms.options"> <option value="" disabled="disabled">Select a platform</option> </select> <div class="help-inline" ng-show="hasFeedbackButton && useRecommended">Looking for a different platform? <a href="" show-feedback>Let us know.</a></div></div><div class="control"> <p class="help-inline recommendation" ng-show="useRecommended && value.solutionStackName"> {{ \'solution_stack_selection\' | localize: { solutionStack: value } }} <a href="" class="change-defaults" ng-click="changeSolutionStack()" ng-show="solutionStacks.length > 1 && !controlsDisabled">Change platform version.</a> </p> <select class="input-xlarge m-top-10" ng-disabled="controlsDisabled" ng-show="!useRecommended" ng-model="value" ng-options="solutionStack as localizeSpec(solutionStack) for solutionStack in solutionStacks"> <option value="">Select a version</option> </select> <div class="help-inline m-top-10 suggest-solution-stack" ng-show="hasFeedbackButton && !useRecommended">Looking for a different version? <a href="" show-feedback>Let us know.</a></div></div>');
a.put("partials/directives/solution-stack-version-picker.html",'<div class="control-group"> <label class="control-label">Platform:</label> <div class="controls"> <select ng-model="value" class="input-xxlarge" ng-options="solutionStack.solutionStackName as solutionStack.solutionStackName group by solutionStack.group for solutionStack in availableSolutionStacks"></select> <div class="text-success" ng-show="recommended.solutionStackName === value">Most recent version</div> <div class="text-warning" ng-show="recommended.solutionStackName !== value">Newer version available</div> </div></div>');
a.put("partials/directives/utc-date-picker.html",'<div class="date-range-picker-container"> <input type="text" placeholder="YYYY-MM-DD[T]HH:mm:ss[Z]"><button type="button" class="btn calendar-btn"><i class="icon-calendar-empty"></i></button> <span class="utc-label">UTC</span></div>');a.put("partials/environment/apply-managed-action-modal.html",'<div class="modal-backdrop" ng-show="applyModal.open"></div><div class="modal" ng-show="applyModal.open" role="dialog" tabindex="-1"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal" ng-click="cancel()">&times;</button> <h3>Apply Managed Update</h3> </div> <div class="form-horizontal"> <div class="modal-body"> <div class="alert alert-error" ng-show="errorMessage"> <i class="icon-warning-sign color-text-red"></i> <span ng-bind-html="errorMessage"></span> </div> <div class="alert alert-info"> <i class="icon-info-sign"></i> Elastic Beanstalk applies managed platform updates with the immutable configuration update policy. For more information, see <a eb-docs-href="/console/elasticbeanstalk/managed-platform-updates">Managed Platform Updates</a> in the AWS Elastic Beanstalk Developer Guide. </div> <div class="control-group m-bottom-0"> <label class="control-label">Type:</label> <div class="controls control-text-data"> <span ng-show="applyModal.managedAction.actionType === actionTypes.INSTANCE_REFRESH">Instance Replacement</span> <span ng-show="applyModal.managedAction.actionType === actionTypes.PLATFORM_UPDATE">Platform Update</span> </div> </div> <div class="control-group"> <label class="control-label">Description:</label> <div class="controls control-text-data"> {{applyModal.managedAction.actionDescription}} </div> </div> </div> <div class="modal-footer text-left"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()">Cancel</a> <button class="btn btn-primary" ng-disabled="updateStatus !== null" ng-click="apply()"> <i class="icon-spinner icon-spin" ng-show="updateStatus !== null"></i> Apply </button> </div> <span class="status-display" ng-bind-html="updateStatus"></span> </div> </div></div>');
a.put("partials/environment/configuration/configuration-card.html",'<div class="card"> <div class="card-header"> <span class="card-title">{{card.title}}</span> <span class="pull-right card-config type-size-big p-top-5"><i click-eater="both" class="icon-cog" ng-show="card.edit" ng-click="configureClicked({$edit:card.edit})"></i></span> </div> <div class="card-body"> <div class="option-row card-row" ng-repeat="option in card.displayedOptions"> <span class="option-label" ng-bind-html="option.label"></span> <span class="option-value" ng-bind-html="option | formatOptionValue"></span> </div> </div></div>');
a.put("partials/environment/configuration/confirm.html",'<div ng-repeat="message in warningMessages"> <div class=\'alert alert-icon no-title-alert\' ng-class="{ \'alert-error\': message.severity === \'error\', \'alert-warn\': message.severity !== \'error\' }"> {{message.optionName}}: {{message.message}} </div></div><div class="form-actions"> <div class="pull-right"> <a href="#" class="btn btn-link" click-eater ng-click="loadEdit()">Cancel</a> <button id="save-configuration" class="btn btn-primary" ng-click="saveConfiguration()" ng-disabled="savingConfiguration || isEnvironmentUpdating"><i class="icon-spinner icon-spin" ng-show="savingConfiguration"></i> Save</button> </div> <span ng-show="displayStatus" ng-bind-html="displayStatus"></span></div>');
a.put("partials/environment/configuration/dashboard.html",'<div class="loading" ng-hide="data.sections.length >= 0"> <i class="icon-spinner icon-spin"></i></div><div ng-repeat="section in data.sections" ng-show="data.sections"> <h3 class="underline bottom-gutter">{{section.title}}</h3> <div class="row-fluid" ng-repeat="group in section.cardGroups"> <div class="span4" ng-repeat="card in group"> <aws-configuration-card card="card" configurable="0" configure-clicked="editClicked($edit)"></aws-configuration-card> </div> </div></div><div ng-show="showDatabaseCreate"> <h3 class="underline bottom-gutter">Data Tier</h3> <div class="row-fluid"> <div class="span12"> <div class="placeholder"> <span class="type-size-big placeholder-title">You do not have a database. You can <a href="#" click-eater ng-click="editClicked(\'rds_create\')">create a new RDS database</a> or <a eb-docs-href="/console/elasticbeanstalk/rds">use an existing database.</a></span> </div> </div> </div></div><div ng-show="data.sections.length === 0"> Unable to locate any configuration for this environment.</div>');
a.put("partials/environment/configuration/edit-configuration.html",'<form name="editConfigForm" class="form-horizontal edit-config-form" ng-disabled="isEnvironmentUpdating" submit-to-class> <div ng-include="currentEdit.partialUrl"></div> <div class="form-actions"> <div class="pull-right"> <a href="#" class="btn btn-link" click-eater ng-click="loadDashboard()" >Cancel</a> <button class="btn btn-primary" ng-click="(!currentEdit.validateForm || currentEdit.validateForm()) && editConfigForm.$valid && validateConfiguration()" ng-disabled="savingConfiguration || isEnvironmentUpdating"><i class="icon-spinner icon-spin" ng-show="savingConfiguration"></i> Apply</button> </div> <span ng-show="displayStatus" ng-bind-html="displayStatus"></span> <span class="color-warn" ng-show="isEnvironmentUpdating">Unable to modify environments in transition.</span> </div></form>');
a.put("partials/environment/configuration/edit/container.html",'<h3 class="underline">Container Options</h3><p>The following settings control container behavior and let you pass key-value pairs in as OS environment variables. <a eb-docs-href="/console/elasticbeanstalk/config-containers">Learn more</a></p><div class="control-group" ng-show="currentEdit.options.TargetRuntime"> <label class="control-label">Target .NET runtime:</label> <div class="controls"> <select class="input-mini" ng-model="currentEdit.options.TargetRuntime.value" ng-options="type for type in currentEdit.options.TargetRuntime.option.valueOptions" name="targetRuntime"></select> <div class="help-inline">Target .NET runtime</div> </div></div><div class="control-group" ng-show="currentEdit.options.Enable32bitApplications"> <label class="control-label">Enable 32-bit applications:</label> <div class="controls"> <select class="input-small" ng-model="currentEdit.options.Enable32bitApplications.value" ng-options="type for type in currentEdit.options.Enable32bitApplications.option.valueOptions" name="enable32BitApplications"></select> <div class="help-inline">Enable 32-bit applications</div> </div></div><div class="control-group" ng-show="currentEdit.options.ProxyServer"> <label class="control-label">Proxy server:</label> <div class="controls"> <select class="input-small" ng-model="currentEdit.options.ProxyServer.value" ng-options="type for type in currentEdit.options.ProxyServer.option.valueOptions" name="proxyServer"></select> <div class="help-inline">Specifies which proxy server to be used for client connections. <span ng-show="showProxyServerWarning()">Static file mappings and gzip compression will not take effect if the proxy server is set to "none".</span></div> </div></div><div class="control-group" ng-show="currentEdit.options.NodeVersion"> <label class="control-label">Node version:</label> <div class="controls"> <input type="text" class="input-medium" ng-model="currentEdit.options.NodeVersion.value" name="nodeVersion"/> <div class="help-inline">Version of Node.js.</div> </div></div><div class="control-group" ng-show="currentEdit.options.GzipCompression"> <label class="control-label">Gzip compression:</label> <div class="controls"> <select class="input-small" ng-model="currentEdit.options.GzipCompression.value" ng-options="type for type in currentEdit.options.GzipCompression.option.valueOptions" name="gzipCompression"></select> <div class="help-inline">Specifies if gzip compression is enabled.</div> </div></div><div class="control-group" ng-show="currentEdit.options.NodeCommand"> <label class="control-label">Node command:</label> <div class="controls"> <input type="text" class="input-large" ng-model="currentEdit.options.NodeCommand.value" name="nodeCommand"/> <div class="help-inline">Command to start the Node.js application. If an empty string is specified, app.js is used, then server.js, then "npm start" in that order.</div> </div></div><div class="control-group" ng-show="currentEdit.options.documentroot"> <label class="control-label">Document root:</label> <div class="controls"> <input type="text" class="input-large" ng-model="currentEdit.options.documentroot.value" name="documentRoot"/> <div class="help-inline">The child directory of your project that acts as the public facing web root. If your root document is stored in your project directory, leave this set to /. If your root document is in a child directory (e.g., <project>/public), set this value to match the child directory. Values should begin with a / character, and may NOT begin with a . (period).</div> </div></div><div class="control-group" ng-show="currentEdit.options.memorylimit"> <label class="control-label">Memory limit:</label> <div class="controls"> <input type="text" class="input-large" ng-model="currentEdit.options.memorylimit.value" name="memoryLimit"/> <div class="help-inline">The amount of memory allocated to the PHP environment. This value is written to the php.ini file.</div> </div></div><div class="control-group" ng-show="currentEdit.options.zliboutputcompression"> <label class="control-label">Zlib output compression:</label> <div class="controls"> <select class="input-small" ng-model="currentEdit.options.zliboutputcompression.value" ng-options="type for type in currentEdit.options.zliboutputcompression.option.valueOptions" name="zlibOutputCompression"></select> <div class="help-inline">Whether PHP should use compression for output. This value is written to the php.ini file.</div> </div></div><div class="control-group" ng-show="currentEdit.options.allowurlfopen"> <label class="control-label">Allow URL fopen:</label> <div class="controls"> <select class="input-small" ng-model="currentEdit.options.allowurlfopen.value" ng-options="type for type in currentEdit.options.allowurlfopen.option.valueOptions" name="allowUrlFopen"></select> <div class="help-inline">Whether the PHP\'s file functions are allowed to retrieve data from remote locations, such as websites or FTP servers. This value is written to the php.ini file.</div> </div></div><div class="control-group" ng-show="currentEdit.options.displayerrors"> <label class="control-label">Display errors:</label> <div class="controls"> <select class="input-small" ng-model="currentEdit.options.displayerrors.value" ng-options="type for type in currentEdit.options.displayerrors.option.valueOptions" name="displayErrors"></select> <div class="help-inline">Whether error messages should be part of the output. This value is written to the php.ini file.</div> </div></div><div class="control-group" ng-show="currentEdit.options.maxexecutiontime"> <label class="control-label">Max execution time (seconds):</label> <div class="controls"> <input type="text" class="input-large" ng-model="currentEdit.options.maxexecutiontime.value" name="maxExecutionTime"/> <div class="help-inline">The maximum time a script is allowed to run before the environment terminates it. This helps prevent poorly written scripts from tying up the server.</div> </div></div><div class="control-group" ng-show="currentEdit.options.Xms"> <label class="control-label">Initial JVM heap size:</label> <div class="controls"> <input type="text" class="input-medium" ng-model="currentEdit.options.Xms.value" name="Xms"/> <div class="help-inline">Specify the initial size of the memory allocation pool. This value must be a multiple of 1024 greater than 1MB. Use k or K for kilobytes, or m or M for megabytes. The default is 256m.</div> </div></div><div class="control-group" ng-show="currentEdit.options.Xmx"> <label class="control-label">Maximum JVM heap size:</label> <div class="controls"> <input type="text" class="input-medium" ng-model="currentEdit.options.Xmx.value" name="Xmx"/> <div class="help-inline">Specify the maximum size of the memory allocation pool. This value must be a multiple of 1024 greater than 2MB. Use k or K for kilobytes, or m or M for megabytes. The default is 256m.</div> </div></div><div class="control-group" ng-show="currentEdit.options.XXMaxPermSize"> <label class="control-label">Maximum JVM permanent generation size:</label> <div class="controls"> <input type="text" class="input-medium" ng-model="currentEdit.options.XXMaxPermSize.value" name="XXMaxPermSize"/> <div class="help-inline">Size of the permanent generation. The default is 64m.</div> </div></div><div class="control-group" ng-show="currentEdit.options.JVMOptions"> <label class="control-label">JVM command line options:</label> <div class="controls"> <input type="text" class="input-large" ng-model="currentEdit.options.JVMOptions.value" name="JVMOptions"/> <div class="help-inline">Arbitrary JVM options string.</div> </div></div><div ng-show="currentEdit.options.XRayEnabled"> <h3 class="m-bottom-15 underline">AWS X-Ray</h3> <div class="control-group"> <label class="control-label">X-Ray daemon:</label> <div class="controls"> <label class="checkbox"> <input type="checkbox" name="xrayEnabled" ng-model="currentEdit.options.XRayEnabled.value" ng-false-value="\'false\'" ng-true-value="\'true\'"> Enabled <span class="help-inline">(Service charges may apply.)</span> </label> </div> </div></div><h3 class="underline">Log Options</h3><p>The following settings control the log publication behavior.</p><div ng-show="currentEdit.options.LogPublicationControl" class="control-group"> <label class="control-label">Instance profile:</label> <div class="controls"> <external-service-select info="data.instanceProfiles" input-model="currentEdit.options.IamInstanceProfile" input-key="value" default-option-text="{{currentEdit.options.IamInstanceProfile.defaultOptionText}}" on-refresh="refreshInstanceProfiles()"> </external-service-select> <div class="help-inline"> <div class="text-error" ng-show="data.instanceProfilesError"> Your instance profile list could not be displayed. Select "Create a default instance profile" to create your environment with a default instance profile. Error message: {{data.instanceProfilesError.message}} </div> The instance profile grants your environment specific permissions under your AWS account. <a eb-docs-href="/console/elasticbeanstalk/roles">Learn more</a> </div> </div></div><div class="control-group" ng-show="currentEdit.options.LogPublicationControl"> <label class="checkbox"> <input type="checkbox" name="logPublication" ng-model="currentEdit.options.LogPublicationControl.value"> Enable log file rotation to Amazon S3. <div class="help-inline">If checked, service logs are published to S3.</div> </label></div><div ng-show="currentEdit.options.StreamLogs"> <h3 class="underline">CloudWatch logs</h3> <p class="m-bottom-15">Configure the instances in your environment to stream logs to CloudWatch. You can set the retention to up to ten years and configure Elastic Beanstalk to delete the logs when you terminate your environment.</p> <div class="control-group" ng-show="currentEdit.cloudWatchConsoleRedirectUrl"> <label class="control-label">Log Group</label> <div class="controls" ng-class="{\'text-disabled\': !currentEdit.options.StreamLogs.value}"> <p class="control-text"> {{currentEdit.cloudWatchConsoleLogGroupPrefix}} <span class="help-inline">(<a ng-href="{{currentEdit.cloudWatchConsoleRedirectUrl}}" target="_blank">View in CloudWatch Console.</a>)</span> </p> </div> </div> <div class="control-group"> <label class="control-label">Log streaming</label> <div class="controls"> <label class="checkbox"> <input type="checkbox" name="streamLogs" ng-model="currentEdit.options.StreamLogs.value"> Enabled <span class="help-inline">(Standard CloudWatch charges apply.)</span> </label> </div> </div> <div class="control-group"> <label class="control-label">Retention</label> <div class="controls"> <select name="retentionInDays" ng-disabled="!currentEdit.options.StreamLogs.value" ng-model="currentEdit.options.RetentionInDays.value" ng-options="option as option for option in currentEdit.options.RetentionInDays.option.valueOptions" style="width:60px;"> </select> days </div> </div> <div class="control-group"> <label class="control-label">Lifecycle</label> <div class="controls"> <select class="input-large" name="deleteOnTerminate" ng-disabled="!currentEdit.options.StreamLogs.value" ng-model="currentEdit.options.DeleteOnTerminate.value" ng-options="(option ? \'Delete logs upon termination\' : \'Keep logs after terminating environment\') for option in [false, true]"> <option ng-show="false" value=""></option> </select> </div> </div></div><div ng-show="currentEdit.hasStatics"> <h3 class="underline">Static Files</h3> <p>To improve performance, you can configure Apache or Nginx to serve static files from a set of directories inside your web application. <a eb-docs-href="/console/elasticbeanstalk/nodejs-static-files">Learn more</a></p> <table class="statics-table" data-table="resource"> <colgroup> <col> <col class="input-column"> </colgroup> <thead> <tr data-table-header="togglable"> <th class="statics-path first"><span class="colname">Virtual Path <span class="type-weight-thin">(Example: /assets)</span></span></th> <th class="statics-directory last"><span class="colname">Directory <span class="type-weight-thin">(Example: /static/assets)</span></span></th> </tr> </thead> <tbody> <tr ng-repeat="static in currentEdit.statics | orderBy:\'name\'"> <td>{{static.name}}</td> <td><input type="text" ng-model="static.value" class="input-large"/> <span class="row-action type-size-big color-text-mid-grey"><i click-eater="both" class="icon-remove" ng-click="removeStatic(static.name)" ng-show="static.userDefined"></i></span></td> </tr> <tr> <td><input type="text" class="input-large" ng-model="curStatic.name"/> <div class="text-error inline">{{curStatic.nameError}}</div></td> <td><input type="text" class="input-large" ng-model="curStatic.value"/> <div class="row-action type-size-big color-text-mid-grey"><i click-eater="both" class="icon-plus" ng-click="addStatic()"></i></div></td> </tr> </tbody> </table></div><h3 class="underline">Environment Properties</h3><p>The following properties are passed into the application as environment variables. <a eb-docs-href="/console/elasticbeanstalk/config-containers">Learn more</a></p><table class="properties-table" data-table="resource"> <colgroup> <col> <col class="input-column"> </colgroup> <thead> <tr data-table-header="togglable"> <th class="property-name first"><span class="colname">Property Name</span></th> <th class="property-value last"><span class="colname">Property Value</span></th> </tr> </thead> <tbody> <tr ng-repeat="property in currentEdit.envProperties | orderBy"> <td>{{property.name}} <div class="help-block">{{\'container_env_help_\' + property.name | localizeSafe:{}:\'\'}}</div></td> <td><input type="text" ng-model="property.value" /> <div class="row-action type-size-big color-text-mid-grey"><i ng-show="property.userDefined" click-eater="both" class="icon-remove" ng-click="removeProperty(property.name)"></i></div></td> </tr> <tr> <td><input type="text" ng-model="curProperty.name"/> <div class="text-error inline">{{curProperty.nameError}}</div></td> <td><input type="text" ng-model="curProperty.value"/> <div class="row-action type-size-big color-text-mid-grey"><i click-eater="both" class="icon-plus" ng-click="addProperty()"></i></div></td> </tr> </tbody></table>');
a.put("partials/environment/configuration/edit/elb.html",'<h3 class="underline">Load Balancer</h3><p>The following settings let you control the behavior of your environment\'s load balancer. <a eb-docs-href="/console/elasticbeanstalk/config-elb">Learn more</a></p><div class="control-group"> <label class="control-label">Listener port:</label> <div class="controls"> <select class="input-small" ng-model="currentEdit.options.LoadBalancerHTTPPort.value" ng-options="type for type in currentEdit.options.LoadBalancerHTTPPort.option.valueOptions" name="httpPort"></select> <div class="help-inline">The external facing HTTP port number to the load balancer.</div> </div></div><div class="control-group" ng-show="currentEdit.options.LoadBalancerPortProtocol"> <label class="control-label">Protocol:</label> <div class="controls"> <select class="input-small" ng-model="currentEdit.options.LoadBalancerPortProtocol.value" ng-options="type for type in currentEdit.options.LoadBalancerPortProtocol.option.valueOptions" name="httpProtocol"></select> <div class="help-inline">The protocol used by the listener.</div> </div></div><div class="control-group"> <label class="control-label">Secure listener port:</label> <div class="controls"> <select class="input-small" ng-model="currentEdit.options.LoadBalancerHTTPSPort.value" ng-options="type for type in currentEdit.options.LoadBalancerHTTPSPort.option.valueOptions" name="httpsPort"></select> <div class="help-inline">The external facing HTTPS port number to the load balancer.</div> </div></div><div class="control-group" ng-show="currentEdit.options.LoadBalancerSSLPortProtocol"> <label class="control-label">Protocol:</label> <div class="controls"> <select class="input-small" ng-model="currentEdit.options.LoadBalancerSSLPortProtocol.value" ng-options="type for type in currentEdit.options.LoadBalancerSSLPortProtocol.option.valueOptions" name="sslProtocol"></select> <div class="help-inline">The protocol used by the secure listener.</div> </div></div><div class="control-group" ng-show="currentEdit.options.CrossZone"> <label class="control-label">Cross-zone load balancing:</label> <div class="controls"> <label class="checkbox"> <input type="checkbox" name="crossZone" ng-model="currentEdit.options.CrossZone.value"> Enable load balancing across multiple Availability Zones. </label> </div></div><div class="control-group"> <label class="control-label">SSL certificate ID:</label> <div class="controls"> <external-service-select info="data.certificates" input-model="currentEdit.options.SSLCertificateId" input-key="value" default-option-text="(Optional) Select a certificate" on-refresh="refreshCertificates()"></external-service-select> <div class="help-inline">The Amazon Resource Name of the certificate to use for SSL.</div> </div></div><h3 class="underline">Connection Draining</h3><p>The following settings let you control how your load balancer drains connections.</p><div class="control-group"> <label class="control-label">Connection draining:</label> <div class="controls"> <label class="checkbox"> <input type="checkbox" name="connectionDraining" ng-model="currentEdit.options.ConnectionDrainingEnabled.value"> Enable connection draining. </label> </div></div><div class="control-group"> <label class="control-label">Draining timeout (seconds):</label> <div class="controls"> <input type="text" class="input-small" ng-disabled="!currentEdit.options.ConnectionDrainingEnabled.value" ng-model="currentEdit.options.ConnectionDrainingTimeout.value" name="expiration"/> <div class="help-inline">Maximum time that the load balancer maintains connections to an Amazon EC2 instance before forcibly closing connections.</div> </div></div><h3 class="underline">Sessions</h3><p>The following settings let you control whether the load balancer routes requests for the same session to the Amazon EC2 instance with the smallest load or consistently to the same instance.</p><div class="control-group"> <label class="control-label">Session stickiness:</label> <div class="controls"> <label class="checkbox"> <input type="checkbox" name="stickySessions" ng-model="currentEdit.options.StickinessPolicy.value"> Enable session stickiness. </label> </div></div><div class="control-group"> <label class="control-label">Cookie expiration period (seconds):</label> <div class="controls"> <input type="text" class="input-small" ng-disabled="!currentEdit.options.StickinessPolicy.value" ng-model="currentEdit.options.StickinessCookieExpiration.value" name="expiration"/> <div class="help-inline">Maximum amount of time that a session cookie between an Amazon EC2 instance and the load balancer is valid.</div> </div></div><h3 class="underline">EC2 Instance Health Check</h3><p>The following settings let you configure how Elastic Beanstalk determines whether an EC2 instance is healthy.</p><div class="control-group"> <label class="control-label">Application health check URL:</label> <div class="controls"> <input type="text" class="input-large" ng-model="currentEdit.options.ApplicationHealthcheckURL.value" name="healthUrl"/> <div class="help-inline">Path to which ELB sends an HTTP GET request to verify instance health. Example: /health</div> </div></div><div class="control-group"> <label class="control-label">Health check interval (seconds):</label> <div class="controls"> <input type="text" class="input-small" ng-model="currentEdit.options.Interval.value" name="interval"/> <div class="help-inline">The approximate interval between health checks of an individual instance. The interval must be greater than the timeout value.</div> </div></div><div class="control-group"> <label class="control-label">Health check timeout (seconds):</label> <div class="controls"> <input type="text" class="input-small" ng-model="currentEdit.options.Timeout.value" name="timeout"/> <div class="help-inline">Amount of time during which no response means a failed health check. The timeout must be less than the interval value.</div> </div></div><div class="control-group"> <label class="control-label">Healthy check count threshold:</label> <div class="controls"> <input type="text" class="input-small" ng-model="currentEdit.options.HealthyThreshold.value" name="healthy"/> <div class="help-inline">The number of consecutive health check successes required before designating the instance as healthy.</div> </div></div><div class="control-group"> <label class="control-label">Unhealthy check count threshold:</label> <div class="controls"> <input type="text" class="input-small" ng-model="currentEdit.options.UnhealthyThreshold.value" name="unhealthy"/> <div class="help-inline">The number of consecutive health check failures that result in designating the instance as unhealthy.</div> </div></div>');
a.put("partials/environment/configuration/edit/health.html",'<h3 class="underline">Application Health Check</h3><p>The following setting lets you configure how Elastic Beanstalk determines whether your application is healthy.</p><div class="control-group"> <label class="control-label">Application health check URL:</label> <div class="controls"> <input type="text" ng-disabled="healthUrlDisabled" class="input-large" ng-model="currentEdit.options.ApplicationHealthcheckURL.value" name="healthUrl"/> <div class="help-inline" ng-bind-html="healthUrlHelp"></div> </div></div><h3 class="underline">Health Permissions</h3><p>Select a service role for the Elastic Beanstalk service to monitor environment resources on your behalf. <a eb-docs-href="/console/elasticbeanstalk/roles">Learn more</a></p><div class="control-group"> <label class="control-label">Service role:</label> <div class="controls"> <external-service-select info="data.iamRoles" input-model="currentEdit.options.ServiceRole" input-key="value" is-required="healthReporting.isEnabled()" on-refresh="refreshServiceRoles()"> </external-service-select> </div></div><div ng-if="healthReporting.isEnabled()"> <h3 class="underline">Health Reporting</h3> <p>Choose basic or enhanced health reporting for your environment, and configure additional metrics to publish to Amazon CloudWatch. Enhanced health reporting is a free service that provides real time application and operating system level monitoring in the AWS Management Console or by using the Elastic Beanstalk CLI. Additional costs are only incurred if you choose to publish these metrics to Amazon CloudWatch.</p> <div class="control-group"> <label class="control-label">System type:</label> <div class="controls"> <select class="input-large" ng-options="t.id as (t.name | localize) for t in healthReporting.systemType.list" ng-model="healthReporting.systemType.value" name="healthSystemType"> </select> <div class="help-inline">Enable or disable enhanced health reporting.</div> </div> </div> <div class="control-group" ng-if="healthReporting.metrics"> <label class="control-label">CloudWatch Custom Metrics*:</label> <div class="controls"> <p><strong>Additional charges apply for each custom metric. <span ng-if="pricingDataAvailable">For more information, see <a href="https://aws.amazon.com/cloudwatch/pricing/" target="_blank">Amazon CloudWatch Pricing</a>.</span></strong></p> <div class="health-metrics"> <select class="input-large" multiple ng-disabled="healthReporting.isBasic()" name="healthInstanceMetrics" ng-options="m group by \'Instance\' for m in healthReporting.metrics.all.instance | orderBy" ng-model="healthReporting.metrics.selected.instance"> </select> </div> <div class="health-metrics"> <select class="input-large" multiple ng-disabled="healthReporting.isBasic()" name="healthEnvironmentMetrics" ng-options="m group by \'Environment\' for m in healthReporting.metrics.all.environment | orderBy" ng-model="healthReporting.metrics.selected.environment"> </select> </div> <div class="help-block clear">*Select custom metrics to publish to Amazon CloudWatch. Hold the Ctrl/Command key while clicking to select multiple metrics. The <strong>EnvironmentHealth</strong> custom metric is provided free with enhanced health reporting. Each additional custom metric incurs a charge from Amazon CloudWatch.</div> </div> </div></div>');
a.put("partials/environment/configuration/edit/managed-updates.html",'<div ng-controller="ManagedUpdatesEditController"> <h3 class="underline">Managed Platform Updates</h3> <p>Enable managed platform updates to apply platform updates automatically during a weekly maintenance window that you choose. Your application stays available during the update process.</p> <div class="control-group"> <label class="checkbox"> <input type="checkbox" name="managedActionsEnabled" ng-model="input.ManagedActionsEnabled"> Enable managed updates. </label> </div> <div class="control-group"> <label class="control-label">Window start:</label> <div class="controls" ng-class="{ \'text-disabled\': !input.ManagedActionsEnabled }"> Every <select name="managementWindowDay" ng-change="convertToOptionSetting()" ng-disabled="!input.ManagedActionsEnabled" ng-model="input.maintenanceWindow.day" ng-options="day for day in locWeekdays"> </select> starting at <select class="input-small" name="managementWindowHour" ng-change="convertToOptionSetting()" ng-disabled="!input.ManagedActionsEnabled" ng-model="input.maintenanceWindow.hour" ng-options="n for n in [] | paddedRange:0:23"> </select> : <select class="input-small" name="managementWindowMin" ng-change="convertToOptionSetting()" ng-disabled="!input.ManagedActionsEnabled" ng-model="input.maintenanceWindow.min" ng-options="n for n in [] | paddedRange:0:59"> </select> UTC <br> <div class="m-top-10 help-inline" ng-show="input.ManagedActionsEnabled"> <preferred-window-local-time message="configuration_maintenance_window_description" value="input.maintenanceWindow.value" format="dddd, h:mm A"></preferred-window-local-time> </div> </div> </div> <div class="control-group"> <label class="control-label">Update level:</label> <div class="controls"> <select name="updateLevel" ng-disabled="!input.ManagedActionsEnabled" ng-model="input.UpdateLevel"> <option value="{{constants.MINOR}}" ng-selected="constants.MINOR === input.UpdateLevel">Minor and patch</option> <option value="{{constants.PATCH}}" ng-selected="constants.PATCH === input.UpdateLevel">Patch only</option> </select> </div> </div> <div class="control-group"> <label class="control-label">Instance replacement:</label> <div class="controls"> <label class="checkbox"> <input name="instanceRefreshEnabled" ng-disabled="!input.ManagedActionsEnabled || !canRefreshInstances" ng-model="input.InstanceRefreshEnabled" type="checkbox"> <span ng-class="{ \'text-disabled\': !input.ManagedActionsEnabled }" ng-show="canRefreshInstances">If enabled, an instance replacement will be scheduled if no other updates are available.</span> <span class="text-disabled" ng-show="!canRefreshInstances">Instance replacement requires a 2.1.0 or newer platform version, to change the platform version go to the <a href="{{dashboardPath}}">Environment Dashboard</a>.</span> </label> </div> </div></div>');
a.put("partials/environment/configuration/edit/notifications.html",'<h3 class="underline">Notifications</h3><p>Enter an email address where Amazon Simple Notification Service sends important messages. To stop receiving notifications, remove your email address. <a eb-docs-href="/console/elasticbeanstalk/config-notifications">Learn more</a></p><div class="control-group"> <label class="control-label">Email:</label> <div class="controls"> <input type="text" class="input-large" ng-model="currentEdit.options.NotificationEndpoint.value" name="notificationEndpoint"/> <div class="help-inline">The address that will receive Elastic Beanstalk event notifications.</div> </div></div>');
a.put("partials/environment/configuration/edit/rds-create.html",'<div class="control-group"> <label class="control-label">Snapshot:</label> <div class="controls"> <external-service-select default-option-text="None" info="rdsConfig.data.rdsSnapshots" input-key="rdsSnapshot" input-model="input" on-change="rdsConfig.snapshotChanged(input.rdsSnapshot)" on-refresh="rdsConfig.refreshSnapshots()"></external-service-select> </div></div><div class="control-group"> <label class="control-label">DB engine:</label> <div class="controls"> <select ng-change="rdsConfig.dbEngineChange(input.rdsEngine)" ng-disabled="rdsConfig.status" ng-model="input.rdsEngine" ng-options="engine as engine for engine in rdsConfig.data.dbEngineOptions"> </select> </div></div><div class="control-group"> <label class="control-label">Engine version:</label> <div class="controls"> <select ng-change="rdsConfig.dbEngineVersionChange(input.rdsEngine, input.rdsEngineVersion)" ng-disabled="rdsConfig.status" ng-model="input.rdsEngineVersion" ng-options="version as version for version in rdsConfig.data.dbEngineVersionOptions"> </select> </div></div><div class="control-group"> <label class="control-label">Instance class:</label> <div class="controls"> <select ng-disabled="rdsConfig.status" ng-model="input.rdsInstanceClass" ng-options="instanceClass as instanceClass for instanceClass in rdsConfig.data.dbInstanceClassOptions"> </select> </div></div><div class="control-group" ng-class="{invalid: editConfigForm.allocatedStorage.$invalid}" blur-to-class> <label class="control-label">Allocated storage:</label> <div class="controls"> <div class="input-append block"> <input type="number" class="input-mini" max="1024" min="5" name="allocatedStorage" ng-model="input.rdsAllocatedStorage" required="required"> <span class="add-on">GB</span> </div> <div class="help-inline">You must specify a value in the range 5 GB to 1024 GB.</div> </div></div><div class="control-group" ng-class="{invalid: editConfigForm.username.$invalid}" blur-to-class> <label class="control-label">Master username:</label> <div class="controls"> <input type="text" name="username" ng-model="input.rdsUsername" required="required"> </div></div><div class="control-group" ng-class="{invalid: editConfigForm.password.$invalid}" blur-to-class> <label class="control-label">Master password:</label> <div class="controls"> <input type="password" name="password" ng-model="input.rdsPassword" required="required"> </div></div><div class="control-group"> <label class="control-label">Deletion policy:</label> <div class="controls"> <select name="deletionPolicy" ng-model="input.rdsDeletionPolicy" required="required"> <option value="Snapshot">Create snapshot</option> <option value="Delete">Delete</option> </select> <div class="help-inline">Terminating your environment can permanently delete your Amazon RDS DB instance and all its data. By default, AWS Elastic Beanstalk saves a snapshot, which preserves your data but may incur backup storage charges. <a eb-docs-href="/console/elasticbeanstalk/config-dbs">Learn more</a></div> </div></div><div class="control-group"> <label class="control-label">Availability:</label> <div class="controls"> <select name="multiAz" ng-model="input.rdsMultiAz"> <option value="true">Multiple availability zones</option> <option value="false">Single availability zone</option> </select> </div></div><div ng-show="vpcConfig"> <div><p>Select the subnets for RDS instances in your Availability Zone.</p></div> <div class="text-error"> <p ng-repeat="error in vpcConfig.errors">{{error}}</p> </div> <table class="subnet-selector" data-table="resource"> <thead> <tr data-table-header="togglable"> <th class="az-header">AZ</th> <th>Subnet (<a href="#" click-eater ng-click="vpcConfig.refresh()">Refresh <i class="icon-spinner"></i></a>)</th> <th class="input-column">RDS</th> </tr> </thead> <tbody ng-repeat="az in vpcConfig.data.availabilityZones.options"> <tr> <th class="az-header">{{az.displayName}}</th> <td></td> <td></td> </tr> <tr ng-repeat="subnet in vpcConfig.subnetsToDisplay[az.value]"> <td></td> <td>{{subnet.displayName}}</td> <td class="input-column"><input type="checkbox" ng-model="input.usedForRds[subnet.value]" /></td> </tr> </tbody> </table></div>');
a.put("partials/environment/configuration/edit/rds.html",'<h3 class="underline">RDS Database</h3><p>You can access connectivity information for this RDS DB Instance through environment variables. <a eb-docs-href="/console/elasticbeanstalk/config-dbs">Learn more</a></p><h3 class="underline section-buffer">Connectivity Information</h3><div ng-show="currentEdit.options.Endpoint.value" class="control-group"> <label class="control-label">DB endpoint:</label> <div class="controls"> <p class="control-text">{{currentEdit.options.Endpoint.value}} <span ng-show="currentEdit.rdsConsoleRedirectUrl">( <a ng-href="{{currentEdit.rdsConsoleRedirectUrl}}" target="_blank">View in RDS Console</a> )</span> </p> </div></div><div ng-show="currentEdit.options.Port.value" class="control-group"> <label class="control-label">Port:</label> <div class="controls"> <p class="control-text">{{currentEdit.options.Port.value}}</p> </div></div><div class="control-group"> <label class="control-label">Master username:</label> <div class="controls"> <p class="control-text">{{currentEdit.options.DBUser.value}}</p> </div></div><div class="control-group"> <label class="control-label">Password:</label> <div class="controls"> <input type="password" max="48" min="8" ng-model="currentEdit.options.DBPassword.value"> </div></div><h3 class="underline section-buffer">Configuration Information</h3><div class="control-group"> <label class="control-label">DB engine:</label> <div class="controls"> <p class="control-text">{{currentEdit.options.DBEngine.value}}</p> </div></div><div class="control-group"> <label class="control-label">Engine version:</label> <div class="controls"> <p class="control-text">{{currentEdit.options.DBEngineVersion.value}}</p> </div></div><div class="control-group"> <label class="control-label">Allocated storage:</label> <div class="controls"> <div class="input-append"> <input type="number" class="input-mini" max="{{currentEdit.options.DBAllocatedStorage.option.maxValue}}" min="{{currentEdit.options.DBAllocatedStorage.option.minValue}}" name="DBAllocatedStorage" ng-disabled="currentEdit.options.DBAllocatedStorage.modifiable" ng-model="currentEdit.options.DBAllocatedStorage.value" ng-required="true"> <span class="add-on">GB</span> </div> <div class="help-inline">The allocated database storage size, specified in gigabytes.</div> </div></div><div class="control-group"> <label class="control-label">Instance class:</label> <div class="controls"> <select ng-disabled="rdsConfig.status" ng-model="currentEdit.options.DBInstanceClass.value" ng-options="instanceClass as instanceClass for instanceClass in rdsConfig.data.dbInstanceClassOptions track by instanceClass" ng-required="true"></select> <div class="help-inline">The database instance type.</div> </div></div><div class="control-group"> <label class="control-label">Deletion policy:</label> <div class="controls"> <select ng-model="currentEdit.options.DBDeletionPolicy.value" ng-options="value as (value | localize) for value in currentEdit.options.DBDeletionPolicy.option.valueOptions" ng-required="true"> </select> <div class="help-inline">Decides whether to delete or snapshot the DB instance on environment termination.</div> </div></div><div class="control-group"> <label class="control-label">Availability:</label> <div class="controls"> <select ng-model="currentEdit.options.MultiAZDatabase.value"> <option value="true">Multiple Availability Zones</option> <option value="false">Single Availability Zone</option> </select> <div class="help-inline">Specifies whether a database instance Multi-AZ deployment needs to be created. <a eb-docs-href="/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html">Learn more</a></div> </div></div>');
a.put("partials/environment/configuration/edit/scaling.html",'<div ng-controller="ScalingEditController"> <div ng-show="currentEdit.options.EnvironmentType"> <h3 class="underline">Environment Type</h3> <p>The following settings configure the availability settings of your environment to help reduce the costs for development activities.</p> <div class="control-group"> <label class="control-label">Environment type:</label> <div class="controls"> <select class="input-xlarge" name="environmentType" ng-model="currentEdit.options.EnvironmentType.value" ng-options="type.value as type.displayName for type in currentEdit.options.EnvironmentType.option.localizedOptions"></select> <div class="help-inline"><a eb-docs-href="/console/elasticbeanstalk/env-type">Learn more</a></div> </div> </div> <div class="control-group" ng-show="currentEdit.options.EnvironmentType.value === \'SingleInstance\' && !vpcConfig"> <label class="control-label">Custom Availability Zones:</label> <div class="controls"> <select class="input-large" multiple name="customZones" ng-model="currentEdit.options.CustomAvailabilityZones.value" ng-options="type for type in currentEdit.options.CustomAvailabilityZones.option.valueOptions"></select> <div class="help-inline">Specific Availability Zones to launch instances in.</div> </div> </div> <div class="control-group"> <label class="control-label">Current status:</label> <div class="controls"> <p class="control-text"><strong>{{resources.instances.length}}</strong> instance(s) in service, Min: <strong>{{currentMinSize}}</strong>, Max: <strong>{{currentMaxSize}}</strong></p> </div> </div> <p class="text-warning" ng-show="currentEdit.options.EnvironmentType.originalValue === \'SingleInstance\' && currentEdit.options.EnvironmentType.value === \'LoadBalanced\'">Auto scaling and trigger settings will be available after updating your environment type.</p> <div ng-show="vpcConfig && currentEdit.options.EnvironmentType.originalValue !== currentEdit.options.EnvironmentType.value" ng-class="{\'no-elb\': currentEdit.options.EnvironmentType.value === \'SingleInstance\'}"> <h3 class="underline">VPC</h3> <p ng-hide="currentEdit.options.EnvironmentType.value === \'SingleInstance\'">Select different subnets for ELB and EC2 instances in your Availability Zone.</p> <p ng-show="currentEdit.options.EnvironmentType.value === \'SingleInstance\'">Select the subnets for EC2 instances in your Availability Zone.</p> <div class="text-error"> <p ng-repeat="error in vpcConfig.errors">{{error}}</p> </div> <table class="subnet-selector" data-table="resource"> <thead> <tr data-table-header="togglable"> <th class="az-header">AZ</th> <th>Subnet (<a href="#" click-eater ng-click="vpcConfig.refresh()">Refresh <i class="icon-spinner"></i></a>)</th> <th class="elb input-column">ELB</th> <th class="input-column">EC2</th> </tr> </thead> <tbody ng-repeat="az in vpcConfig.data.availabilityZones.options"> <tr> <th class="az-header">{{az.displayName}}</th> <td></td> <td class="elb"></td> <td></td> </tr> <tr ng-repeat="subnet in vpcConfig.subnetsToDisplay[az.value]"> <td></td> <td>{{subnet.displayName}}</td> <td class="elb input-column"> <input type="checkbox" ng-model="input.usedForElb[subnet.value]" ng-change="vpcConfig.handleUseForElb(subnet)" /> </td> <td class="input-column"> <input type="checkbox" ng-model="input.usedForEc2[subnet.value]" ng-change="vpcConfig.handleUseForEc2(subnet)" /> </td> </tr> </tbody> </table> <div class="control-group elb"> <label class="control-label">ELB visibility:</label> <div class="controls"> <select ng-model="input.vpcInternalLoadBalancer" name="internalLoadBalancer"> <option value="public">External</option> <option value="internal">Internal</option> </select> <p class="help-inline"> Select Internal when load balancing a back-end service that should not be publicly available. </p> </div> </div> </div> </div> <div ng-hide="currentEdit.options.EnvironmentType.option.value === \'SingleInstance\' || currentEdit.options.EnvironmentType.value === \'SingleInstance\'"> <expanding-section class="expanding-section" collapsed="autoScalingSectionCollapsed" section-title="Auto Scaling"> <p>Use the following settings to control auto scaling behavior. <a eb-docs-href="/console/elasticbeanstalk/config-as">Learn more</a></p> <div class="control-group"> <label class="control-label">Minimum instance count:</label> <div class="controls"> <input type="text" class="input-small" ng-model="currentEdit.options.MinSize.value" name="minInstances"/> <div class="help-inline">Minimum number of instances to run.</div> </div> </div> <div class="control-group"> <label class="control-label">Maximum instance count:</label> <div class="controls"> <input type="text" class="input-small" ng-model="currentEdit.options.MaxSize.value" name="maxInstances"/> <div class="help-inline">Maximum number of instances to run.</div> </div> </div> <div class="control-group"> <label class="control-label">Availability Zones:</label> <div class="controls"> <select class="input-small" name="zones" ng-model="currentEdit.options.AvailabilityZones.value" ng-options="type as (type | localizeOption) for type in currentEdit.options.AvailabilityZones.option.valueOptions"></select> <div class="help-inline">Number of Availability Zones to run in.</div> </div> </div> <div class="control-group"> <label class="control-label">Custom Availability Zones:</label> <div class="controls"> <select class="input-large" multiple name="customZones" ng-model="currentEdit.options.CustomAvailabilityZones.value" ng-options="type for type in currentEdit.options.CustomAvailabilityZones.option.valueOptions"></select> <div class="help-inline">Specific Availability Zones to launch instances in.</div> </div> </div> <div class="control-group"> <label class="control-label">Scaling cooldown (seconds):</label> <div class="controls"> <input type="text" class="input-small" ng-model="currentEdit.options.Cooldown.value" name="cooldown"/> <div class="help-inline">The amount of time after a scaling activity before any further trigger-related scaling activities can occur.</div> </div> </div> </expanding-section> <expanding-section class="expanding-section" collapsed="scalingTriggerSectionCollapsed" section-title="Scaling Trigger"> <div class="control-group m-top-20"> <label class="control-label">Trigger measurement:</label> <div class="controls"> <select class="input-large" name="measureName" ng-model="currentEdit.options.MeasureName.value" ng-options="type for type in currentEdit.options.MeasureName.option.valueOptions"></select> <div class="help-inline">The measure name associated with the metric the trigger uses.</div> </div> </div> <div class="control-group"> <label class="control-label">Trigger statistic:</label> <div class="controls"> <select class="input-small" name="statistic" ng-model="currentEdit.options.Statistic.value" ng-options="type as (type | localizeOption) for type in currentEdit.options.Statistic.option.valueOptions"></select> <div class="help-inline">The statistic that the trigger uses when fetching metrics statistics to examine.</div> </div> </div> <div class="control-group"> <label class="control-label">Unit of measurement:</label> <div class="controls"> <select class="input-medium" name="unit" ng-model="currentEdit.options.Unit.value" ng-options="type as (type | localizeOption) for type in currentEdit.options.Unit.option.valueOptions"></select> <div class="help-inline">The standard unit that the trigger uses when fetching metric statistics to examine.</div> </div> </div> <div class="control-group"> <label class="control-label">Measurement period (minutes):</label> <div class="controls"> <input type="text" class="input-small" ng-model="currentEdit.options.Period.value" name="period"/> <div class="help-inline">The period between metric evaluations.</div> </div> </div> <div class="control-group"> <label class="control-label">Breach duration (minutes):</label> <div class="controls"> <input type="text" class="input-small" ng-model="currentEdit.options.BreachDuration.value" name="breachDuration"/> <div class="help-inline">The amount of time used to determine the existence of a breach. The service looks at data between the current time and the number of minutes specified to see if a breach has occurred.</div> </div> </div> <div class="control-group"> <label class="control-label">Upper threshold:</label> <div class="controls"> <input type="text" class="input-small" ng-model="currentEdit.options.UpperThreshold.value" name="upperThreshold"/> <div class="help-inline">The upper limit for the metric. If the data points exceed the threshold for the period set as the breach duration, the trigger is activated.</div> </div> </div> <div class="control-group"> <label class="control-label">Upper breach scale increment:</label> <div class="controls"> <input type="text" class="input-small" ng-model="currentEdit.options.UpperBreachScaleIncrement.value" name="upperBreach"/> <div class="help-inline">The incremental amount to use when performing scaling activities when the upper threshold has been breached. Must be an integer, optionally followed by a % sign.</div> </div> </div> <div class="control-group"> <label class="control-label">Lower threshold:</label> <div class="controls"> <input type="text" class="input-small" ng-model="currentEdit.options.LowerThreshold.value" name="lowerThreshold"/> <div class="help-inline">The lower limit for the metric. If the data points are below this threshold for the period set as the breach duration, the trigger is activated.</div> </div> </div> <div class="control-group"> <label class="control-label">Lower breach scale increment:</label> <div class="controls"> <input type="text" class="input-small" ng-model="currentEdit.options.LowerBreachScaleIncrement.value" name="lowerBreach"/> <div class="help-inline">The incremental amount to use when performing scaling activities when the lower threshold has been breached. Must be an integer, optionally followed by a % sign.</div> </div> </div> </expanding-section> </div> <expanding-section class="expanding-section" collapsed="scheduledActionsSectionCollapsed" ng-if="!legacy" section-title="Time-based Scaling"> <p>Use the following settings to control time-based scaling actions. <a eb-docs-href="/elasticbeanstalk/config-as-timebased">Learn more</a></p> <div class="time-zone-picker pull-right m-top-20"> <strong>Time zone:</strong> <label class="radio"><input type="radio" name="timezone" ng-model="utc" ng-value="true">UTC</label> <label class="radio"><input type="radio" name="timezone" ng-model="utc" ng-value="false">Local</label> </div> <button class="btn m-top-15" ng-click="addScheduledAction()">Add scheduled action</button> <table class="scheduled-actions-table" data-table="resource"> <colgroup> <col> <col> <col> <col width="175"> </colgroup> <thead> <tr data-table-header="togglable"> <th class="first"><span class="colname">Name</span></th> <th><span class="colname">Limits</span></th> <th class="timestamp"><span class="colname"> Next occurrence <span class="timezone-label">{{utc ? \'(UTC)\' : \'(local time)\'}}</span> </span></th> <th class="last"><span class="colname">Actions</span></th> </tr> </thead> <tbody> <tr ng-repeat="scheduledAction in currentEdit.scheduledActions.collection | orderBy:[sortNextOccurrence, \'name\']" ng-class="{ dirty: scheduledAction.dirty, removed: scheduledAction.remove }"> <td ng-bind-html="scheduledAction.name"></td> <td>Min: {{scheduledAction.minSize}}, Max {{scheduledAction.maxSize}}<span ng-if="scheduledAction.desiredCapacity">, Desired: {{scheduledAction.desiredCapacity}}</span></td> <td>{{scheduledAction.getNextOccurrence() | dateToDateTimeString:utc}}</td> <td> <button class="btn" ng-click="editScheduledAction(scheduledAction)" ng-disabled="scheduledAction.remove">Edit</button> <button class="btn" ng-click="scheduledAction.remove = !scheduledAction.remove">{{scheduledAction.remove ? \'Cancel\' : \'Remove\'}}</button> </td> </tr> <tr ng-hide="currentEdit.scheduledActions.collection.length"><td colspan="4" class="empty-list">No scheduled actions</td></tr> </tbody> </table> <div class="m-top-5 m-left-5 text-warning" ng-show="currentEdit.scheduledActions.isDirty()">You have pending changes to your scheduled actions. Click <strong>Apply</strong> to update your environment.</div> </expanding-section> <div class="modal" draggable ng-show="scheduledActionModal.open" role="dialog" tabindex="-1"> <div class="modal-header" drag-handle> <button type="button" class="close" data-dismiss="modal" ng-click="closeModal()">&times;</button> <h3>New scheduled action</h3> </div> <div class="form-horizontal" ng-form="scheduledActionForm" submit-to-class resettable> <div class="modal-body"> <div class="alert alert-error" ng-show="scheduledAction.errors.length"> <div ng-repeat="error in scheduledAction.errors.fullMessages({ capacityLimit: capacityLimit })">{{error}}</div> </div> <div class="alert alert-info" ng-show="lastSavedScheduledAction">Your action, <strong>{{lastSavedScheduledAction.name}}</strong>, was added to the list. Create another action or cancel...</div> <div class="control-group"> <label class="control-label">Name:</label> <div class="controls" ng-if="!edit"> <input type="text" class="input-xlarge" enter-press="saveScheduledAction()" max="255" name="scheduledActionName" ng-model="scheduledAction.name" ng-required="scheduledActionForm.$submitted" placeholder="(must be unique)"/> <div class="help-inline">Must be from 1 to 255 characters in length.</div> </div> <div class="controls" ng-if="edit"> <p class="control-text" ng-bind-html="edit.name"></p> </div> </div> <div class="control-group"> <label class="control-label">Instances:</label> <div class="controls"> <label class="inline controls-label"> Min <input type="number" class="input-mini" enter-press="saveScheduledAction()" maxvalue="capacityLimit" min="0" name="minSize" ng-model="scheduledAction.minSize" ng-required="scheduledActionForm.$submitted"/> </label> <label class="inline controls-label"> Max <input type="number" class="input-mini" enter-press="saveScheduledAction()" maxvalue="capacityLimit" min="0" name="maxSize" ng-model="scheduledAction.maxSize" ng-required="scheduledActionForm.$submitted"/> </label> <div class="help-inline">Minimum and Maximum number of instances to run.</div> </div> </div> <div class="control-group"> <label class="control-label">Desired capacity:</label> <div class="controls"> <input type="number" class="input-mini" enter-press="saveScheduledAction()" max="10000" min="0" ng-model="scheduledAction.desiredCapacity"/> <div class="help-inline">(Optional)</div> <div class="help-inline">Desired number of instances to run.</div> </div> </div> <div class="control-group"> <label class="control-label">Occurrence:</label> <div class="controls"> <select enter-press="saveScheduledAction()" name="occurrence" ng-model="scheduledActionOccurrence"> <option value="one-time">One-time</option> <option value="recurrent">Recurrent</option> </select> </div> </div> <div class="control-group" ng-show="scheduledActionOccurrence === \'recurrent\'"> <label class="control-label">Recurrence:</label> <div class="controls"> <input type="text" class="input-xlarge" enter-press="saveScheduledAction()" name="recurrence" ng-model="scheduledAction.recurrence" ng-required="scheduledActionForm.$submitted && scheduledActionOccurrence === \'recurrent\'" placeholder="CRON expression"/> <div class="help-inline">Example: "30 6 * * 2" every Tuesday at 6:30am</div> </div> </div> <div class="control-group"> <label class="control-label">Start time:</label> <div class="controls"> <utc-date-picker enter-press="saveScheduledAction()" ng-model="scheduledAction.startTime" reset="resetStartTime"></utc-date-picker> <div class="help-inline" ng-hide="scheduledActionOccurrence === \'recurrent\'">The time the action is scheduled to begin.</div> <div class="help-inline" ng-show="scheduledActionOccurrence === \'recurrent\'">(Optional) The time the action is scheduled to begin.</div> </div> </div> <div class="control-group" ng-show="scheduledActionOccurrence === \'recurrent\'"> <label class="control-label">End time:</label> <div class="controls"> <utc-date-picker enter-press="saveScheduledAction()" ng-model="scheduledAction.endTime" reset="resetEndTime"></utc-date-picker> <div class="help-inline">(Optional) The time the action is scheduled to end.</div> </div> </div> </div> <div class="modal-footer text-left"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="closeModal()">Cancel</a> <button class="btn btn-primary" id="continue-button" ng-bind-html="edit ? \'Confirm\' : \'Add\'" ng-click="saveScheduledAction()"></button> </div> <div class="type-size-small status-display">Current UTC time: {{currentTime.format(\'YYYY-MM-DD[T]HH:mm:ss[Z]\')}}</div> </div> </div> </div> <div class="modal-backdrop" ng-show="scheduledActionModal.open"></div></div>');
a.put("partials/environment/configuration/edit/server.html",'<h3 class="underline">Server</h3><p>The following settings let you configure the environment servers. <a eb-docs-href="/console/elasticbeanstalk/config-ec2-instances">Learn more</a></p><div class="control-group"> <label class="control-label">Instance type:</label> <div class="controls"> <select class="input-medium" ng-model="currentEdit.options.InstanceType.value" ng-options="type for type in currentEdit.options.InstanceType.option.valueOptions" name="instanceType"></select> <div class="help-inline">Determines the processing power of the servers in your environment.</div> </div></div><div class="control-group"> <label class="control-label">EC2 security groups:</label> <div class="controls"> <input type="text" class="input-xlarge" ng-model="currentEdit.options.SecurityGroups.value" name="securityGroups"/> <div class="help-inline">The names of the security groups (comma separated) that define firewall access to the launched EC2 instances.</div> </div></div><div class="control-group"> <label class="control-label">EC2 key pair:</label> <div class="controls"> <external-service-select info="data.keyPairs" input-model="currentEdit.options.EC2KeyName" input-key="value" default-option-text="(Optional) Select a key pair" on-refresh="refreshKeyPairs()"> </external-service-select> <div class="help-inline">Enables remote login to your instances.</div> </div></div><div class="control-group"> <label class="control-label">Instance profile:</label> <div class="controls"> <external-service-select info="data.instanceProfiles" input-model="currentEdit.options.IamInstanceProfile" input-key="value" default-option-text="{{currentEdit.options.IamInstanceProfile.defaultOptionText}}" on-refresh="refreshInstanceProfiles()"> </external-service-select> <div class="help-inline"> <div class="text-error" ng-show="data.instanceProfilesError"> Your instance profile list could not be displayed. Select "Create a default instance profile" to create your environment with a default instance profile. Error message: {{data.instanceProfilesError.message}} </div> The instance profile grants your environment specific permissions under your AWS account. <a eb-docs-href="/console/elasticbeanstalk/roles">Learn more</a> </div> </div></div><div class="control-group"> <label class="control-label">Monitoring interval:</label> <div class="controls"> <select class="input-medium" ng-model="currentEdit.options.MonitoringInterval.value" ng-options="type as (type | localizeOption) for type in currentEdit.options.MonitoringInterval.option.valueOptions" name="monitoringInterval"></select> <div class="help-inline">The time interval between when metrics are reported from the EC2 instances.</div> </div></div><div class="control-group"> <label class="control-label">Custom AMI ID:</label> <div class="controls"> <input type="text" class="input-xlarge" ng-model="currentEdit.options.ImageId.value" name="imageId"/> <div class="help-inline">The AMI to use for launched instances.</div> </div></div><div ng-if="!legacy"> <h3 class="underline">Root Volume (Boot Device)</h3> <p>The following settings let you configure the root volume for the auto scaling launched EC2 instances. <a eb-docs-href="/console/elasticbeanstalk/config-ec2-instances">Learn more</a></p> <div class="control-group"> <label class="control-label">Root volume type:</label> <div class="controls"> <select class="input" ng-model="currentEdit.options.RootVolumeType.value" ng-options="type.value as type.displayName for type in currentEdit.options.RootVolumeType.option.localizedOptions" ng-change="rootVolumeTypeChange()" name="rootVolumeType"> <option value="">(Container default)</option> </select> <div class="help-inline">Determines the type of storage volume to attach to instances.</div> </div> </div> <div class="control-group"> <label class="control-label">Root volume size:</label> <div class="controls"> <label class="checkbox" ng-class="{disabled: currentEdit.options.RootVolumeType.value === \'io1\'}"> <input type="checkbox" ng-model="currentEdit.isCustomVolumeSize" ng-disabled="currentEdit.options.RootVolumeType.value === \'io1\'" ng-change="currentEdit.options.RootVolumeSize.value = currentEdit.isCustomVolumeSize ? currentEdit.options.RootVolumeSize.value : null" /> Enables you to specify the size of the root volume. </label> <div class="m-left-20"> <div class="input-append"> <input type="number" class="input-mini" min="8" maxvalue="currentEdit.options.RootVolumeType.value === \'io1\' || currentEdit.options.RootVolumeType.value === \'gp2\' ? 16384 : 1024" ng-model="currentEdit.options.RootVolumeSize.value" ng-required="currentEdit.isCustomVolumeSize" ng-disabled="!currentEdit.isCustomVolumeSize" name="rootVolumeSize"/> <span class="add-on">GiB</span> </div> <div class="help-inline">Number of gibibytes of the root volume attached to each instance. Must be between 10 and 16384 for Provisioned IOPS (SSD) and General Purpose (SSD) root volumes and between 8 and 1024 for other root volumes.</div> </div> </div> </div> <div class="control-group" ng-hide="currentEdit.options.RootVolumeType.value !== \'io1\'"> <label class="control-label">Root volume IOPS:</label> <div class="controls"> <div class="input-append"> <input type="number" class="input-mini" min="100" max="20000" ng-model="currentEdit.options.RootVolumeIOPS.value" ng-required="currentEdit.options.RootVolumeType.value === \'io1\'" ng-disabled="currentEdit.options.RootVolumeType.value !== \'io1\'" name="rootVolumeIops"/> <span class="add-on">IOPS</span> </div> <div class="help-inline">Input/output operations per second for a Provisioned IOPS (SSD) root volume type. Must be between 100 and 20000 and cannot be more than 50 times the root volume size.</div> </div> </div></div>');
a.put("partials/environment/configuration/edit/updates-deployments.html",'<div ng-controller="UpdatesDeploymentsEditController"> <h3 class="underline">Application Deployments</h3> <p>The following settings control how application versions are deployed to instances.</p> <div class="control-group"> <label class="control-label">Deployment policy:</label> <div class="controls"> <select name="deploymentPolicy" ng-model="currentEdit.options.DeploymentPolicy.value"> <option value="{{constants.ALL_AT_ONCE}}" ng-selected="constants.ALL_AT_ONCE === currentEdit.options.DeploymentPolicy.value">All at once</option> <option ng-if="!isSingleInstance" value="{{constants.ROLLING}}" ng-selected="constants.ROLLING === currentEdit.options.DeploymentPolicy.value">Rolling</option> <option ng-if="!isSingleInstance && isEnhancedPolicies" value="{{constants.ROLLING_WITH_ADDITIONAL_BATCH}}" ng-selected="constants.ROLLING_WITH_ADDITIONAL_BATCH === currentEdit.options.DeploymentPolicy.value">Rolling with additional batch</option> <option ng-if="isEnhancedPolicies && isEnhancedHealth" value="{{constants.IMMUTABLE}}" ng-selected="constants.IMMUTABLE === currentEdit.options.DeploymentPolicy.value">Immutable</option> </select> <div class="help-inline"><a eb-docs-href="/console/elasticbeanstalk/rolling-version-deployment">Learn more</a></div> </div> </div> <div ng-if="!isSingleInstance"> <div class="control-group"> <label class="control-label">Batch type:</label> <div class="controls"> <select ng-disabled="currentEdit.options.DeploymentPolicy.value === constants.ALL_AT_ONCE || currentEdit.options.DeploymentPolicy.value === constants.IMMUTABLE" name="batchSizeType" ng-model="input.BatchSizeType"> <option value="{{constants.PERCENTAGE}}" ng-selected="constants.PERCENTAGE === currentEdit.options.BatchSizeType.value">Percentage</option> <option value="{{constants.FIXED}}" ng-selected="constants.FIXED === currentEdit.options.BatchSizeType.value">Fixed</option> </select> <div class="help-inline">Specifies whether to batch deployments to a percentage or fixed number of instances.</div> </div> </div> <div class="control-group"> <label class="control-label">Batch size:</label> <div class="controls"> <input ng-disabled="currentEdit.options.DeploymentPolicy.value === constants.ALL_AT_ONCE || currentEdit.options.DeploymentPolicy.value === constants.IMMUTABLE" ng-required="!(currentEdit.options.DeploymentPolicy.value === constants.ALL_AT_ONCE || currentEdit.options.DeploymentPolicy.value === constants.IMMUTABLE)" class="input-small" maxvalue="input.BatchSizeType === constants.PERCENTAGE ? 100 : currentEdit.options.MaxSize.value" min="1" name="batchSize" ng-model="input.BatchSize" type="number"> <div class="help-inline">Specifies the percentage or number of instances on which to deploy an application version at any given time.</div> <p class="text-error" ng-show="editConfigForm.batchSize.$invalid && input.BatchSizeType === constants.PERCENTAGE"> Specify a batch size between 1 and 100. </p> <p class="text-error" ng-show="editConfigForm.batchSize.$invalid && input.BatchSizeType === constants.FIXED"> The batch size should be less than or equal to the maximum instance count for the auto scaling group ({{currentEdit.options.MaxSize.value}}). </p> </div> </div> </div> <h3 class="underline">Configuration Updates</h3> <p>The following settings control how changes to the environment\'s instances are propagated.</p> <div class="control-group"> <label class="control-label">Rolling update type:</label> <div class="controls"> <select name="RollingUpdateType" ng-model="input.UpdateType" ng-change="processRollingUpdate(input.UpdateType)"> <option value="{{constants.DISABLED}}" ng-selected="constants.DISABLED === input.UpdateType">Disabled</option> <option ng-if="!isSingleInstance && (!isWorker || (isWorker && isEnhancedHealth))" value="{{constants.HEALTH}}" ng-selected="constants.HEALTH === input.UpdateType">Rolling based on Health</option> <option ng-if="!isSingleInstance" value="{{constants.TIME}}" ng-selected="constants.TIME === input.UpdateType">Rolling based on Time</option> <option ng-if="isEnhancedHealth && isEnhancedPolicies" value="{{constants.IMMUTABLE}}" ng-selected="constants.IMMUTABLE === input.UpdateType">Immutable</option> </select> <div class="help-inline"> <a eb-docs-href="/console/elasticbeanstalk/rolling-environment-config">Learn more</a> </div> </div> </div> <div ng-if="!isSingleInstance"> <div class="control-group"> <label class="control-label">Maximum batch size:</label> <div class="controls"> <input class="input-small" max="10000" min="1" name="maxBatchSize" ng-hide="input.MaxBatchSize === null && loadingValues" ng-model="input.MaxBatchSize" ng-disabled="!(input.UpdateType === constants.HEALTH || input.UpdateType === constants.TIME)" ng-required="input.UpdateType === constants.HEALTH || input.UpdateType === constants.TIME" type="number"> <span ng-show="currentEdit.options.MaxBatchSize.originalValue === null && loadingValues"><i class="icon-spinner icon-spin"></i> Loading</span> <div class="help-inline">The maximum number of instances that should be modified at any given time.</div> </div> </div> <div class="control-group"> <label class="control-label">Minimum instances in service:</label> <div class="controls"> <input class="input-small" maxvalue="currentEdit.options.MaxSize.value-1" min="0" name="minInstancesInService" ng-hide="input.MinInstancesInService === null && loadingValues" ng-model="input.MinInstancesInService" ng-disabled="!(input.UpdateType === constants.HEALTH || input.UpdateType === constants.TIME)" ng-required="input.UpdateType === constants.HEALTH || input.UpdateType === constants.TIME" type="number"> <span ng-show="currentEdit.options.MinInstancesInService.originalValue === null && loadingValues"><i class="icon-spinner icon-spin"></i> Loading</span> <div class="help-inline">The minimum number of instances that should be in service at any given time.</div> <div class="text-error" ng-show="!loadingValues && editConfigForm.minInstancesInService.$invalid"> The minimum instances in service should be less than the maximum instance count for the auto scaling group ({{currentEdit.options.MaxSize.value}}). </div> </div> </div> <div class="control-group"> <label class="control-label">Pause time:</label> <div class="controls"> <span ng-hide="input.PauseTime === null && loadingValues"> <pause-time-input error="pauseTimeError" max-value="PT1H" model="input.PauseTime" controls-disabled="input.UpdateType !== constants.TIME"/> </span> <span ng-show="input.PauseTime === null && loadingValues"><i class="icon-spinner icon-spin"></i> Loading</span> <div class="help-inline">The time to wait between changes to a batch of environments. Must be an hour or less.</div> <div class="help-inline text-error" ng-show="pauseTimeError && input.UpdateType === constants.TIME"> {{pauseTimeError}} </div> </div> </div> </div> <h3 class="underline">Preferences</h3> <p>Customize health check requirements and deployment timeouts.</p> <div ng-if="isEnhancedHealth" class="control-group"> <label class="control-label">Healthy threshold:</label> <div class="controls"> <select ng-model="currentEdit.options.HealthCheckSuccessThreshold.value" ng-options="value as (value | localizeHealthStatus) for value in currentEdit.options.HealthCheckSuccessThreshold.option.valueOptions track by value"> </select> <div class="help-inline">Health status at which an instance is considered healthy during rolling deployments, health based rolling updates, and immutable environment updates.</div> </div> </div> <div class="control-group"> <label class="control-label">Ignore health check:</label> <div class="controls"> <input type="checkbox" ng-model="currentEdit.options.IgnoreHealthCheck.value"> <div class="help-inline">When checked the deployment won\'t rollback if the environment health status is affected.</div> </div> </div> <div class="control-group"> <label class="control-label">Command timeout:</label> <div class="controls"> <input class="input-small" max="3600" min="0" name="timeout" ng-model="currentEdit.options.Timeout.value" required="required" type="number"> <div class="help-inline">The number of seconds to wait for an instance to finish executing commands.</div> <p class="text-error" ng-show="editConfigForm.timeout.$invalid"> Specify a command timeout between 1 and 3600. </p> </div> </div> <expanding-section ng-if="!isSingleInstance" class="expanding-section" collapsed="autoScalingSectionCollapsed" section-title="Auto Scaling"> <p>Use the following settings to control auto scaling behavior. <a eb-docs-href="/console/elasticbeanstalk/config-as">Learn more</a></p> <div class="control-group"> <label class="control-label">Minimum instance count:</label> <div class="controls"> <input class="input-small" max="10000" min="1" name="minInstances" ng-model="currentEdit.options.MinSize.value" required="required" type="number"> <div class="help-inline">Minimum number of instances to run.</div> </div> </div> <div class="control-group"> <label class="control-label">Maximum instance count:</label> <div class="controls"> <input class="input-small" max="10000" min="1" name="maxInstances" ng-model="currentEdit.options.MaxSize.value" required="required" type="number"> <div class="help-inline">Maximum number of instances to run.</div> </div> </div> </expanding-section></div>');
a.put("partials/environment/configuration/edit/vpc.html",'<h3 class="underline">VPC</h3><p ng-hide="currentEdit.options.EnvironmentType.value === \'SingleInstance\'">Select different subnets for ELB and EC2 instances in your Availability Zone.</p><p ng-show="currentEdit.options.EnvironmentType.value === \'SingleInstance\'">Select the subnets for EC2 instances in your Availability Zone.</p><div class="text-error"> <p ng-repeat="error in vpcConfig.errors">{{error}}</p></div><div class="alert alert-block alert-icon alert-warning" ng-repeat="warning in vpcConfig.warnings track by $index"> <p class="text-warning">{{warning}}</p></div><p> <label class="checkbox"><input type="checkbox" ng-change="vpcConfig.checkAssociatePublicIpRecommended()" ng-model="input.vpcAssociatePublicIpAddress"> Associate Public IP Address</label></p><div ng-class="{\'no-elb\': input.excludeElb}"> <table class="subnet-selector" ng-class="{\'no-rds\': !input.includeRds}" data-table="resource"> <colgroup> <col> <col> <col class="elb"> <col> <col class="rds"> </colgroup> <thead> <tr data-table-header="togglable"> <th class="az-header">AZ</th> <th>Subnet (<a href="" ng-click="vpcConfig.refresh()">Refresh <i class="icon-spinner"></i></a>)</th> <th class="elb input-column">ELB</th> <th class="input-column">EC2</th> <th class="rds input-column">RDS</th> </tr> </thead> <tbody ng-repeat="az in vpcConfig.data.availabilityZones.options"> <tr> <th class="az-header">{{az.displayName}}</th> <td></td> <td class="elb"></td> <td></td> <td class="rds"></td> </tr> <tr ng-repeat="subnet in vpcConfig.subnetsToDisplay[az.value]"> <td></td> <td>{{subnet.displayName}}</td> <td class="elb input-column"><input type="checkbox" ng-model="input.usedForElb[subnet.value]" ng-change="vpcConfig.handleUseForElb(subnet)" /></td> <td class="input-column"><input type="checkbox" ng-model="input.usedForEc2[subnet.value]" ng-change="vpcConfig.handleUseForEc2(subnet)" /></td> <td class="rds input-column"><input type="checkbox" ng-model="input.usedForRds[subnet.value]" /></td> </tr> </tbody> </table> <div class="control-group elb"> <label class="control-label">ELB visibility:</label> <div class="controls"> <select ng-model="input.vpcInternalLoadBalancer" name="internalLoadBalancer"> <option value="public">External</option> <option value="internal">Internal</option> </select> <p class="help-inline"> Select Internal when load balancing a back-end service that should not be publicly available. </p> </div> </div></div>');
a.put("partials/environment/configuration/edit/worker.html",'<div ng-controller="WorkerEditController"> <h3 class="underline">Worker Details</h3> <p>The following settings control how the worker tier daemon operates. <a eb-docs-href="/elasticbeanstalk/latest/dg/using-features-managing-env-tiers.html">Learn more</a></p> <div class="control-group"> <label class="control-label">Worker queue</label> <div class="controls"> <external-service-select default-option-text="Autogenerated queue" info="data.sqsQueues" input-key="value" input-model="currentEdit.options.WorkerQueueURL" on-change="onWorkerQueueChange()" on-refresh="refreshSqsQueues()" options-filter="filterQueueName"></external-service-select> <div class="help-inline"> SQS queue from which to read. </div> </div> </div> <div class="control-group"> <label class="control-label">Worker queue URL</label> <div class="controls"> <p class="control-text">{{currentWorkerQueueResource.url}}</p> </div> </div> <div class="control-group"> <label class="control-label">HTTP path</label> <div class="controls"> <input type="text" ng-model="currentEdit.options.HttpPath.value"> <div class="help-inline">URL on localhost where messages will be forwarded as HTTP POST requests.</div> </div> </div> <div class="control-group"> <label class="control-label">MIME type</label> <div class="controls"> <div class="control"> <select ng-model="input.workerMimeType"> <option value="custom">Provide your own&hellip;</option> <option ng-repeat="type in input.mimeTypeOptions" ng-value="type">{{type}}</option> </select> <div class="help-inline">MIME type of the message being sent.</div> </div> <div class="control" ng-show="input.workerMimeType === \'custom\'"> <input type="text" ng-model="input.workerCustomMimeType" placeholder="e.g. \'text/xml\'"> </div> </div> </div> <div class="control-group"> <label class="control-label">HTTP connections</label> <div class="controls"> <input type="text" ng-model="currentEdit.options.HttpConnections.value"> <div class="help-inline">Maximum number of concurrent connections to the application.</div> </div> </div> <div class="control-group"> <label class="control-label">Visibility timeout</label> <div class="controls"> <input type="text" ng-model="currentEdit.options.VisibilityTimeout.value"> <div class="help-inline">Number of seconds to lock an incoming message for processing before returning it to the queue.</div> </div> </div> <div class="control-group" ng-if="currentEdit.options.ErrorVisibilityTimeout"> <label class="control-label">Error visibility timeout</label> <div class="controls"> <input type="text" ng-model="currentEdit.options.ErrorVisibilityTimeout.value"> <div class="help-inline">Number of seconds to wait before resending a message after an error response from the application.</div> </div> </div> <expanding-section section-title="Advanced Options" collapsed="advancedOptionsCollapsed"> <p>The following settings control advanced behavior of the worker tier daemon. <a eb-docs-href="/elasticbeanstalk/latest/dg/using-features-managing-env-tiers.html">Learn more</a></p> <div class="control-group"> <label class="control-label">Max retries</label> <div class="controls"> <input type="text" ng-model="currentEdit.options.MaxRetries.value" ng-disabled="currentEdit.options.WorkerQueueURL.value"> <div class="help-inline">Maximum number of retries after which the message is discarded.</div> </div> </div> <div class="control-group"> <label class="control-label">Connection timeout</label> <div class="controls"> <input type="text" ng-model="currentEdit.options.ConnectTimeout.value"> <div class="help-inline">Number of seconds to wait for a response from the application when establishing a new connection.</div> </div> </div> <div class="control-group"> <label class="control-label">Inactivity timeout</label> <div class="controls"> <input type="text" ng-model="currentEdit.options.InactivityTimeout.value"> <div class="help-inline">Number of seconds to wait for a response from the application on an existing connection.</div> </div> </div> <div class="control-group"> <label class="control-label">Retention period</label> <div class="controls"> <input type="text" ng-model="currentEdit.options.RetentionPeriod.value"> <div class="help-inline">Number of seconds that a message is valid for active processing.</div> </div> </div> </expanding-section></div>');
a.put("partials/environment/configuration.html",'<div environment-header environment="environment"></div><div class="row-fluid configuration-dashboard"> <div class="span2"> <div environment-sidenav selected="configuration" environment="environment"></div> </div> <div class="span10" > <div updating-alert="config_updating_environment_message"></div> <div ng-include="currentPartialUrl"> </div> </div></div>');a.put("partials/environment/dashboard.html",'<div class="row-fluid" ng-include="getTemplatePath(alert.alertId)" ng-repeat="alert in environment.alerts | filter:isAlertShown track by alert.alertId"></div><div environment-header environment="environment"></div><div class="row-fluid environment-dashboard"> <div class="span2"> <div environment-sidenav selected="dashboard" environment="environment"></div> </div> <div class="span10"> <div updating-alert></div> <h3 class="underline bottom-gutter has-button"> Overview <div class="pull-right"> <button class="btn" ng-click="refreshClicked()"><i class="icon-spinner" ng-class="{\'icon-spin\': isRefreshingEnvironment || isRefreshingEvents}"></i> Refresh</button> </div> </h3> <div class="row-fluid"> <div class="overview-heros inline-block span4"> <i class="huge-icon inline-block" ng-class="[(environment | environmentIconToMood | moodToTextClass), (environment | environmentToIcon)]"></i> <div class="inline-block info"> <p><strong>Health</strong></p> <p class="m-top-10" ng-class="environment | environmentToMood | moodToTextClass"><strong ng-bind-html="(environment.healthStatus | localizeHealthStatus) || environmentHealthString"></strong></p> <div class="relative inline-block" click-outside="closeCausesPopover()" click-outside-enabler="causesPopoverVisible"> <p class="m-top-10"><button class="btn" ng-click="toggleCausesPopover()" ng-disabled="causes.length === 0">Causes</button></p> </div> </div> </div> <div class="overview-heros inline-block span4"> <div class="inline-block info"> <p><strong>Running Version</strong></p> <p class="m-top-10 break-word">{{environment.versionLabel | cleanVersionLabel}}</p> <p class="m-top-10"><a href="" ng-click="!isUpdating && launchUploadForm()" ng-disabled="isUpdating" class="btn">Upload and Deploy</a></p> </div> </div> <div class="overview-heros inline-block span4"> <i class="huge-icon inline-block platform-icon {{environment.solutionStackName | solutionStackToIcon}}"></i> <div class="inline-block info"> <p><strong ng-bind-html="environment.isCustomPlatform() ? \'Custom platform\' : \'Configuration\'"></strong></p> <p class="break-word m-top-10">{{environment.getConfigurationLabel()}}</p> <div ng-show="newerStackAvailable"> <div ng-show="platformUpdateScheduled"> <p class="break-word"><a ng-href="{{managedActionsUrl}}">Platform update scheduled</a></p> </div> <div ng-show="!platformUpdateScheduled"> <p class="text-warning"><strong>Newer version available</strong></p> </div> </div> <p class="m-top-10"><a href="" ng-click="updatePlatformVersion()" ng-disabled="!isPlatformUpdatable()" class="btn">Change</a></p> </div> </div> </div> <h3 class="underline has-button m-top-30"> Recent Events <div class="pull-right"> <a class="btn" ng-href="{{eventsUrl}}">Show All</a> </div> </h3> <div class="row-fluid"> <table class="events-table" data-table="resource"> <colgroup> <col class="timestamp"> <col class="type"> <col> </colgroup> <thead> <tr data-table-header="togglable"> <th>Time</th> <th>Type</th> <th>Details</th> </tr> </thead> <tbody > <tr ng-repeat="event in events.eventsByEnvironmentId[environment.environmentId].events | limitTo:5"> <td>{{event.eventDate | intToDateTimeString}}</td> <td ng-class="event.severity | severityToMood | moodToTextClass">{{event.severity}}</td> <td>{{event.message}}</td> </tr> </tbody> </table> </div> </div></div><div update-solution-stack-modal-dir></div>');
a.put("partials/environment/environment-action-button.html",'<div class="dropdown inline-block" ng-class="{open: opened}" click-outside="toggleOpen()" click-outside-enabler="opened"> <button class="btn dropdown-toggle" data-actions ng-class="{disabled: disableMenu}" ng-click="toggleOpen()"> Actions </button> <ul class="dropdown-menu" data-actions-menu> <li data-action="{{action.display}}" ng-class="{disabled: action.isDisabled()}" ng-click="actionSelected(action)" ng-repeat="action in actions"> <a href="">{{action.display | localize}}</a> </li> </ul></div>');
a.put("partials/environment/events.html",'<div environment-header environment="environment"></div><div class="row-fluid events-display"> <div class="span2"> <div environment-sidenav selected="events" environment="environment"></div> </div> <div class="span10"> <div updating-alert on-events-page="true"></div> <div class="update-alert alert alert-block alert-info" ng-show="terminated"> <div>This environment is terminated and cannot be modified. It will remain visible for about an hour.</div> </div> <h3 class="underline has-button"> Events <div class="pull-right"> <button class="btn" ng-click="refreshEventsClicked()" ng-disabled="events.getLoadingStatus(environment.environmentId) === \'refreshing\' || terminated"> <i class="icon-spinner" ng-class="{\'icon-spin\': events.getLoadingStatus(environment.environmentId) === \'refreshing\'}"></i> Refresh </button> </div> </h3> <table class="events-table" data-table="resource"> <colgroup> <col class="timestamp"> <col class="type"> <col> </colgroup> <thead> <tr data-table-header="togglable"> <td> <div class="form-search filter-display"> <label>Severity</label> <select class="input-small" ng-model="selectedSeverity" ng-change="refresh()" ng-options="severity for severity in severities.severityLevels"></select> </div> </td> <td colspan="2" class="slider-header"> <div class="slider-display"> <double-slider low-value="startTime" high-value="endTime" min-value="minTime" max-value="maxTime" allow-min-scaling="true" absolute-min-value="absoluteMinTime" left-popover="{{startTime | intToDateTimeString:\'time_format\':timeScaling}}" right-popover="{{endTime | intToDateTimeString:\'time_format\':timeScaling}}" left-label="minTime | intToDateTimeString:\'time_format\':timeScaling" right-label="maxTime | intToDateTimeString:\'time_format\':timeScaling"></double-slider> </div> </td> </tr> <tr data-table-header="togglable"> <th class="timestamp">Time</th> <th class="type">Type</th> <th>Details</th> </tr> </thead> <tbody ng-hide="events.getLoadingStatus(environment.environmentId) === \'refreshing\'"> <tr ng-repeat="event in events.eventsByEnvironmentId[environment.environmentId].events | limitTo:numEventsDisplayed"> <td>{{event.eventDate | intToDateTimeString}}</td> <td class="type" ng-class="event.severity | severityToMood | moodToTextClass">{{event.severity}}</td> <td>{{event.message}}</td> </tr> <tr ng-show="events.eventsByEnvironmentId[environment.environmentId].events.length === 0"> <td class="no-events" colspan="3">No events found for given inputs</td> </tr> </tbody> </table> <div class="loading" ng-show="events.getLoadingStatus(environment.environmentId) === \'refreshing\'"> <i class="icon-spinner icon-spin color-text-light-grey"></i> </div> <button class="btn load-more-button" ng-click="loadMoreEventsClicked()" ng-disabled="events.getLoadingStatus(environment.environmentId) !== \'ready\'" ng-show="hasMoreEvents() && events.getLoadingStatus(environment.environmentId) === \'ready\'"> Load More Events </button> </div></div>');
a.put("partials/environment/fix/add-profile-fix.html",'<div ng-controller="AddProfileFixController"> <h1>Associate Instance Profile with {{environment.environmentName}}</h1> <div ng-show="view === \'add\'"> <p>Please select an instance profile to associate with this environment.</p> <form class="form-horizontal" name="addProfileForm" submit-to-class> <div class="control-group"> <div class="control-group" ng-class="{invalid: !input.iamInstanceProfile}" blur-to-class> <label class="control-label">Instance profile:</label> <div class="controls"> <external-service-select info="data.instanceProfiles" input-model="input" input-key="iamInstanceProfile" default-option-text="{{currentEdit.options.IamInstanceProfile.defaultOptionText}}" is-required="!data.instanceProfilesError" on-refresh="refreshInstanceProfiles()"> </external-service-select> <div class="help-inline"> The instance profile grants your environment specific permissions under your AWS account. <a eb-docs-href="/console/elasticbeanstalk/roles">Learn more</a> </div> </div> </div> </div> <div class="form-actions"> <div class="pull-right"> <a ng-href="{{cancelHref}}" class="btn btn-link" click-eater ng-click="cancel()" >Cancel</a> <button class="btn btn-primary" ng-click="addProfileForm.$valid && process()" id="continue-button" ng-disabled="status"> <i class="icon-spinner icon-spin" ng-show="status"></i> <span>Save</span> </button> </div> <span ng-show="status" ng-bind-html="status"></span> </div> </form> </div> <div ng-show="view === \'missing\'"> <span ng-if="alertId === \'0000000001\'">You do not have the permissions necessary to perform this action. Please contact your account administrator and request that they perform this action on your behalf. For more information, see <a eb-docs-href="/console/elasticbeanstalk/roles-rotate-logs">Granting AWS Elastic Beanstalk Permission to Rotate Logs to Amazon S3.</a></span> <span ng-if="alertId !== \'0000000001\'">You do not have the permissions necessary to perform this action. Please contact your account administrator and request that they perform this action on your behalf.</span> <div class="form-actions"> <div class="pull-right"> <a ng-href="{{cancelHref}}" class="btn btn-link" click-eater ng-click="cancel()" >Cancel</a> </div> </div> </div> <div ng-show="view === \'error\'"> <div class="text-error"> An unexpected error has occurred.<br/>Error message: {{error.message}} </div> <div class="form-actions"> <div class="pull-right"> <a ng-href="{{cancelHref}}" class="btn btn-link" click-eater ng-click="cancel()" >Cancel</a> </div> </div> </div> <div ng-show="view === \'warning\'" ng-include="\'partials/environment/configuration/confirm.html\'"> </div></div>');
a.put("partials/environment/fix/alert-0000000001.html",'<div class="alert alert-warn alert-icon"> <h3>Environment Alert</h3> <p> This Elastic Beanstalk environment does not have an <a eb-docs-href="/IAM/latest/UserGuide/instance-profiles.html">instance profile</a> associated with it. In the future some features, such as logging, will require that an instance profile be associated with the environment. Please <a href="" ng-click="fixIt(\'0000000001\')">click here</a> to associate an instance profile with this environment. </p></div>');
a.put("partials/environment/fix/alert-0000000002.html",'<div class="alert alert-info alert-icon"> <a class="close" ng-click=\'closeEnvironmentAlert(alert.alertId)\' href="#" click-eater>&times;</a> <h3>Environment Alert</h3> <p> Code change deployments will complete faster if you associate an <a eb-docs-href="/IAM/latest/UserGuide/instance-profiles.html">instance profile</a> with this environment. Please <a href="" ng-click="fixIt(\'0000000002\')">click here</a> to associate an instance profile with this environment. </p></div>');
a.put("partials/environment/fix/alert-unknown.html",'<div class="alert alert-warn alert-icon"> <h3>Environment Alert</h3> <p> Your environment has alert id: {{alert.alertId}} </p></div>');a.put("partials/environment/fix/fix-container.html",'<div class="row-fluid" ng-include="fixer"> </div>');a.put("partials/environment/health-dashboard.html",'<div environment-header environment="environment"></div><div class="row-fluid health-dashboard"> <div class="span2"> <div environment-sidenav selected="health" environment="environment"></div> </div> <div class="span10"> <h3 class="underline has-button"> Enhanced Health Overview <div class="pull-right"> <eb-select-button options="statusSelections" on-selection="filterByStatus(option)" selection="selectedStatus" disable-menu="graphs.editing"></eb-select-button> <aws-action-button class="far-right" actions="actionSelections" label="Instance Actions" on-action="actionSelections[action].execute()"></aws-action-button> <button id="toggle-details-button" class="btn" data-toggle-causes ng-click="toggleDetails()">{{(\'health_details_\' + (hideDetailsAll ? \'show\' : \'hide\')) | localize}}</button> <button class="btn" ng-click="reload(true)"><i class="icon-spinner" ng-class="{\'icon-spin\': refreshing}"></i></button> <a class="btn btn-help" eb-docs-href="/console/elasticbeanstalk/environment-health"><i class="icon-question-sign"></i></a> </div> </h3> <div class="row-fluid"> <div class="span12"> <div class="auto-refresh"> <div ng-show="healthEnabled && !autoRefreshEnabled && showLastRefresh">Last refresh: {{lastRefreshDuration}}</div> <div ng-show="healthEnabled && autoRefreshEnabled"><input type="checkbox" ng-model="autoRefreshChecked"/> Auto refresh <span ng-show="countDown != null && !isNaN(countDown)">({{countDown}}s)</span> </div> </div> <div id="health-container"> <table data-table="health"> <thead> <tr data-table-header="togglable" class="header-sets"> <th colspan="2"></th> <th colspan="4">Server</th> <th colspan="5">Requests</th> <th colspan="5">Latency</th> <th colspan="2">Load Average</th> <th colspan="4">CPU Utilization</th> </tr> <tr data-table-header="togglable" class="header-columns"> <th colspan="2"></th> <th ng-click="sortBy(\'instanceId\')">Instance ID <i ng-show="reloadOptions.sortKey === \'instanceId\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-status" ng-click="sortBy(\'healthStatus\')">Status <i ng-show="reloadOptions.sortKey === \'healthStatus\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-running" ng-click="sortBy(\'launchedAt\')">Running <i ng-show="reloadOptions.sortKey === \'launchedAt\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-running" ng-click="sortBy(\'deploymentId\')">Dep. ID <i ng-show="reloadOptions.sortKey === \'deploymentId\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-status-code" ng-click="sortBy(\'requests\')">R/sec <i ng-show="reloadOptions.sortKey === \'requests\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-status-code" ng-click="sortBy(\'statusCode2xx\')">2xx <i ng-show="reloadOptions.sortKey === \'statusCode2xx\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-status-code" ng-click="sortBy(\'statusCode3xx\')">3xx <i ng-show="reloadOptions.sortKey === \'statusCode3xx\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-status-code" ng-click="sortBy(\'statusCode4xx\')">4xx <i ng-show="reloadOptions.sortKey === \'statusCode4xx\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-status-code" ng-click="sortBy(\'statusCode5xx\')">5xx <i ng-show="reloadOptions.sortKey === \'statusCode5xx\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-latency" ng-click="sortBy(\'latencyP99\')">P99 <i ng-show="reloadOptions.sortKey === \'latencyP99\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-latency" ng-click="sortBy(\'latencyP90\')">P90 <i ng-show="reloadOptions.sortKey === \'latencyP90\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-latency" ng-click="sortBy(\'latencyP75\')">P75 <i ng-show="reloadOptions.sortKey === \'latencyP75\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-latency" ng-click="sortBy(\'latencyP50\')">P50 <i ng-show="reloadOptions.sortKey === \'latencyP50\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-latency" ng-click="sortBy(\'latencyP10\')">P10 <i ng-show="reloadOptions.sortKey === \'latencyP10\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-load" ng-click="sortBy(\'load1\')">Load1 <i ng-show="reloadOptions.sortKey === \'load1\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-load" ng-click="sortBy(\'load5\')">Load5 <i ng-show="reloadOptions.sortKey === \'load5\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-cpu" ng-click="sortBy(\'cpuUser\')">User% <i ng-show="reloadOptions.sortKey === \'cpuUser\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-cpu" ng-click="sortBy(\'cpuSystem\')">Sys% <i ng-show="reloadOptions.sortKey === \'cpuSystem\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-cpu" ng-click="sortBy(\'cpuIdle\')">Idle% <i ng-show="reloadOptions.sortKey === \'cpuIdle\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> <th class="col-cpu" ng-click="sortBy(\'cpuIowait\')">I/O wait% <i ng-show="reloadOptions.sortKey === \'cpuIowait\'" ng-class="{\'icon-caret-up\': !reloadOptions.sortReverse, \'icon-caret-down\': reloadOptions.sortReverse}"></i></th> </tr> </thead> <tbody ng-show="healthEnabled"> <tr ng-hide="!environmentHealth" class="overall-row"> <th class="instance-select"></th> <td class="details-toggle"><i ng-click="toggleDetails(\'overall\')" class="{{\'with-details \' + (!hideDetails.overall ? \'icon-caret-down\' : \'icon-caret-right\')}}"></i></td> <td class="col-normal">Overall</td> <td class="col-normal" ng-class="(environmentHealth.color | colorToTextClass)">{{environmentHealth.healthStatus | localizeHealthStatus}} <i ng-class="{\'icon-time\': environmentHealth.status !== \'Ready\' }"></i></td> <td class="col-disabled col-normal">N/A</td> <td class="col-disabled col-edge">N/A</td> <td class="text-right col-normal">{{environmentHealth.requests}}</td> <td eb-popover-x class="text-center col-normal" container="#xray-popover" content="environmentHealth.statusCodesVal.status2xx" placement="bottom" on-update="processXrayPopover(content)"> <span popover-pointer ng-class="xrayEnabled && environmentHealth.statusCodesVal.status2xx > 0 ? \'dotted-link\' : \'\'" ng-click="openXray(\'http.status\', environmentHealth.statusCodesVal.status2xx, 200)">{{environmentHealth.statusCodesTxt.status2xx}}</span> </td> <td eb-popover-x class="text-center col-normal" container="#xray-popover" content="environmentHealth.statusCodesVal.status3xx" placement="bottom" on-update="processXrayPopover(content)"> <span popover-pointer ng-class="xrayEnabled && environmentHealth.statusCodesVal.status3xx > 0 ? \'dotted-link\' : \'\'" ng-click="openXray(\'http.status\', environmentHealth.statusCodesVal.status3xx, 300)">{{environmentHealth.statusCodesTxt.status3xx}}</span> </td> <td eb-popover-x class="text-center col-normal" container="#xray-popover" content="environmentHealth.statusCodesVal.status4xx" placement="bottom" on-update="processXrayPopover(content)"> <span popover-pointer ng-class="xrayEnabled && environmentHealth.statusCodesVal.status4xx > 0 ? \'dotted-link\' : \'\'" ng-click="openXray(\'http.status\', environmentHealth.statusCodesVal.status4xx, 400)">{{environmentHealth.statusCodesTxt.status4xx}}</span> </td> <td eb-popover-x class="text-center col-edge" container="#xray-popover" content="environmentHealth.statusCodesVal.status5xx" placement="bottom" on-update="processXrayPopover(content)"> <span popover-pointer ng-class="xrayEnabled && environmentHealth.statusCodesVal.status5xx > 0 ? \'dotted-link\' : \'\'" ng-click="openXray(\'http.status\', environmentHealth.statusCodesVal.status5xx, 500)">{{environmentHealth.statusCodesTxt.status5xx}}</span> </td> <td eb-popover-x class="text-center col-normal" container="#xray-popover" content="environmentHealth.latency.p99" placement="bottom" on-update="processXrayPopover(content)"> <span popover-pointer ng-class="xrayEnabled && environmentHealth.latency.p99 > 0 ? \'dotted-link\' : \'\'" ng-click="openXray(\'responseTime\', environmentHealth.latency.p99)">{{environmentHealth.latency.p99}}</span> </td> <td eb-popover-x class="text-center col-normal" container="#xray-popover" content="environmentHealth.latency.p90" placement="bottom" on-update="processXrayPopover(content)"> <span popover-pointer ng-class="xrayEnabled && environmentHealth.latency.p90 > 0 ? \'dotted-link\' : \'\'" ng-click="openXray(\'responseTime\', environmentHealth.latency.p90)">{{environmentHealth.latency.p90}}</span> </td> <td eb-popover-x class="text-center col-normal" container="#xray-popover" content="environmentHealth.latency.p75" placement="bottom" on-update="processXrayPopover(content)"> <span popover-pointer ng-class="xrayEnabled && environmentHealth.latency.p75 > 0 ? \'dotted-link\' : \'\'" ng-click="openXray(\'responseTime\', environmentHealth.latency.p75)">{{environmentHealth.latency.p75}}</span> </td> <td eb-popover-x class="text-center col-normal" container="#xray-popover" content="environmentHealth.latency.p50" placement="bottom" on-update="processXrayPopover(content)"> <span popover-pointer ng-class="xrayEnabled && environmentHealth.latency.p50 > 0 ? \'dotted-link\' : \'\'" ng-click="openXray(\'responseTime\', environmentHealth.latency.p50)">{{environmentHealth.latency.p50}}</span> </td> <td eb-popover-x class="text-center col-edge" container="#xray-popover" content="environmentHealth.latency.p10" placement="bottom" on-update="processXrayPopover(content)"> <span popover-pointer ng-class="xrayEnabled && environmentHealth.latency.p10 > 0 ? \'dotted-link\' : \'\'" ng-click="openXray(\'responseTime\', environmentHealth.latency.p10)">{{environmentHealth.latency.p10}}</span> </td> <td class="text-right col-normal col-disabled">N/A</td> <td class="text-right col-edge col-disabled">N/A</td> <td class="text-right col-normal col-disabled">N/A</td> <td class="text-right col-normal col-disabled">N/A</td> <td class="text-right col-normal col-disabled">N/A</td> <td class="text-right col-edge col-disabled">N/A</td> </tr> <tr ng-show="!hideDetails.overall && environmentHealth" class="info-row info-row-overall"> <td colspan="22"> <table class="status-table"> <tr> <td ng-repeat="s in statusSummary"><span>{{s.name}} </span><span class="badge">{{environmentHealth.instancesCount[s.key]}}</span></td> </tr> </table> <ul> <li ng-repeat="cause in environmentHealth.causes"ng-bind-html="cause"></li> </ul> </td> </tr> <tr ng-show="loadingHealth === null || (loadingHealth && !autoRefreshEnabled)"> <td colspan="22" class="loading-row"> <span class=""><i class="icon-spinner icon-spin"></i> Loading health data...</span> </td> </tr> <tr ng-show="instancesHealth.list.length === 0 && reloadOptions.filterBy && reloadOptions.filterBy.key !== \'total\'"> <td colspan="22">No instances have the status <strong>{{reloadOptions.filterBy.name}}</strong>.</td> </tr> <tr class="instance" ng-class="{ \'instance-selected\': instanceSelection[i.instanceId] }" ng-repeat-start="i in instancesHealth.list"> <th class="instance-select" data-table-input="true"> <input type="checkbox" ng-model="instanceSelection[i.instanceId]" ng-change="changeInstanceSelection(i.instanceId)"/> </th> <td class="details-toggle"> <i ng-click="toggleDetails(i.instanceId)" class="{{(!hideDetails[i.instanceId] && i.causes && i.causes.length > 0 ? \'icon-caret-down\' : \'icon-caret-right\') + \' \' + (i.causes && i.causes.length > 0 ? \'with-details\' : \'without-details\')}}"> </i> </td> <td eb-popover-x class="col-normal" container="#instance-popover" content="i" placement="bottom" on-update="processInstancePopover(content)"> <span popover-pointer class="dotted-text">{{i.instanceId}}</span> </td> <td class="col-normal"><span ng-class="i.color | colorToTextClass">{{i.healthStatus | localizeHealthStatus}}</span></td> <td class="col-normal"><span>{{i.launchedAt | scaleTimeToDuration}}</span></td> <td eb-popover-x class="text-center col-edge" container="#deployment-popover" content="i" placement="bottom" on-update="processDeploymentPopover(content)"> <span popover-pointer ng-class="i.hasDeployment ? \'dotted-text \' + (i.deploymentStatus | deploymentStatusToColor) : \'\'">{{i.deploymentId}}</span> </td> <td class="text-right col-normal">{{i.requests}}</td> <td class="text-right col-normal">{{i.statusCode2xx}}</td> <td class="text-right col-normal">{{i.statusCode3xx}}</td> <td class="text-right col-normal">{{i.statusCode4xx}}</td> <td class="text-right col-edge">{{i.statusCode5xx}}</td> <td class="text-right col-normal">{{i.latencyP99}}</td> <td class="text-right col-normal">{{i.latencyP90}}</td> <td class="text-right col-normal">{{i.latencyP75}}</td> <td class="text-right col-normal">{{i.latencyP50}}</td> <td class="text-right col-edge">{{i.latencyP10}}</td> <td class="text-right col-normal">{{i.load1}}</td> <td class="text-right col-edge">{{i.load5}}</td> <td class="text-right col-normal">{{i.cpuUser}}</td> <td class="text-right col-normal">{{i.cpuSystem}}</td> <td class="text-right col-normal">{{i.cpuIdle}}</td> <td class="text-right col-edge">{{i.cpuIowait}}</td> </tr> <tr ng-repeat-end ng-show="!hideDetails[i.instanceId] && i.causes && i.causes.length > 0" class="info-row"> <td colspan="22"> <ul> <li ng-repeat="cause in i.causes" ng-bind-html="cause"></li> </ul> </td> </tr> </tbody> </table> <div ng-show="!healthEnabled" class="placeholder m-top-20"> <span class="type-size-big placeholder-title">Enhanced health reporting isn\u2019t enabled for this environment. To enable it, see <a eb-docs-href="/console/elasticbeanstalk/environment-health-enable">Enabling and Disabling Enhanced Health Reporting with the AWS Management Console</a>.</span> </div> <div class="popover bottom popover-form-left" id="instance-popover" ng-show="instancePopover"> <div class="arrow far-left"></div> <div class="popover-content"> <strong>Instance ID {{instancePopover.instanceId}}</strong> <br><span>Instance type: {{instancePopover.instanceType}}</span> <br><span>Availability zone: {{instancePopover.availabilityZone}}</span> </div> </div> <div class="popover bottom popover-form-left" id="deployment-popover" ng-show="deploymentPopover"> <div class="arrow far-left"></div> <div class="popover-content"> <strong>Deployment ID {{deploymentPopover.deploymentId}}</strong> <br><span>Version: {{deploymentPopover.versionLabel}}</span> <br><span class="label {{deploymentPopover.deploymentStatus | deploymentStatusToLabel}}"> <i class="icon-spinner icon-spin" ng-show="deploymentPopover.deploymentStatus===\'In Progress\'"></i> {{\'deployment_status_\' + deploymentPopover.deploymentStatus | localizeSafe:{}:\'\'}} </span> <span class="deployment-time">{{deploymentPopover.deploymentTime | scaleTimeToDuration:true}}</span> </div> </div> <div class="popover bottom popover-form-left" id="xray-popover" ng-show="xrayPopover"> <div class="arrow far-left"></div> <div class="popover-content"> View traces for these requests in the AWS X-Ray console. </div> </div> </div> </div> </div> </div></div>');
a.put("partials/environment/logs.html",'<div environment-header environment="environment"></div><div class="row-fluid logs-display"> <div class="span2"> <div environment-sidenav selected="logs" environment="environment"></div> </div> <div class="span10"> <div updating-alert></div> <h3 class="underline has-button"> Logs <div class="pull-right"> <aws-action-button class="far-right" actions="actions" label="Request Logs" on-action="requestNewLogs(action)"></aws-action-button> <button class="btn" click-eater ng-disabled="refreshingLogs" ng-click="refresh()"><i class="icon-spinner" ng-class="{\'icon-spin\': refreshingLogs }"></i> Refresh</button> </div> </h3> <div class="row-fluid"> <div class="opening-blurb">Click Request Logs to retrieve the last 100 lines of logs or the entire set of logs from each EC2 instance. <a eb-docs-href="/console/elasticbeanstalk/logs">Learn more</a></div> <div class="loading" ng-show="refreshingLogs && logs.collection === null"> <i class="icon-spinner icon-spin"></i> </div> <table ng-hide="refreshingLogs && logs.collection === null" class="logs-table" data-table="resource"> <thead> <tr data-table-header="togglable"> <th class="log-file">Log file</th> <th class="date-header" class="log-time">Time</th> <th class="log-instance">EC2 instance</th> <th class="log-type">Type</th> </tr> </thead> <tbody> <tr ng-repeat="log in logs.collection"> <td><a href="{{log.message}}" target="_blank">Download</a></td> <td>{{log.sampleTimestamp | intToDateTimeString}}</td> <td>{{log.ec2InstanceId}}</td> <td>{{log.infoType}}</td> </tr> <tr ng-show="refreshingLogs"> <td colspan="4" class="snapshotting"><i class="icon-spinner icon-spin"></i></td> </tr> </tbody> </table> <div class="placeholder" ng-show="logs.collection !== null && logs.collection.length === 0 && !refreshingLogs"> <span class="placeholder-title type-size-big">Click Request Logs to request and review log files for all your servers.</span> </div> </div> </div></div>');
a.put("partials/environment/managed-actions-dashboard.html",'<div environment-header environment="environment"></div><div class="row-fluid events-display"> <div class="span2"> <div environment-sidenav selected="managed" environment="environment"></div> </div> <div class="span10"> <div updating-alert on-events-page="true"></div> <h3 class="underline"> Managed Updates Overview </h3> <div class="placeholder m-top-20" ng-show="!managedUpdatesEnabled"> <span class="type-size-big placeholder-title"> <span ng-show="managedUpdatesSupported">Managed updates have not been enabled for this environment. You can enable managed platform updates in the <a ng-href="{{configurationPath}}">Configuration</a> tab under Managed Updates. <a eb-docs-href="/console/elasticbeanstalk/managed-platform-updates">Learn more</a></span> <span ng-show="!managedUpdatesSupported">Managed updates are not supported for the current platform version. For more information, see <a eb-docs-href="/console/elasticbeanstalk/managed-platform-updates">Managed Platform Updates</a>.</span> </span> </div> <div ng-if="managedUpdatesEnabled"> <div class="m-top-15 m-left-20"> <div ng-show="pendingUpdateRefreshing">Loading...</div> <div ng-show="!pendingUpdateRefreshing"> <div ng-show="managedUpdates.pendingUpdate && managedUpdates.pendingUpdate.status === actionStatuses.SCHEDULED"> <span ng-show="managedUpdates.pendingUpdate.actionType === actionTypes.INSTANCE_REFRESH">An instance replacement has been scheduled to run during the next maintenance window,</span> <span ng-show="managedUpdates.pendingUpdate.actionType === actionTypes.PLATFORM_UPDATE">A new platform version is available. A platform update has been has been scheduled to run during the next maintenance window,</span> <preferred-window-local-time message="managed_updates_dashboard_maintenance_window_description" value="preferredStartTime.value" format="dddd, MMMM Do h:mm A"> </preferred-window-local-time> <span ng-show="managedUpdates.pendingUpdate.actionType === actionTypes.INSTANCE_REFRESH">To perform the replacement immediately, choose <strong>Apply Now</strong>.</span> <span ng-show="managedUpdates.pendingUpdate.actionType === actionTypes.PLATFORM_UPDATE">To perform the update immediately, choose <strong>Apply Now</strong>.</span> <div class="m-top-10"> <button class="btn" ng-click="managedActionDialog()" ng-disabled="pendingUpdateRefreshing || isEnvironmentUpdating(environment)"> Apply now </button> </div> </div> <div ng-show="managedUpdates.pendingUpdate && managedUpdates.pendingUpdate.status === actionStatuses.PENDING"> <span ng-show="managedUpdates.pendingUpdate.actionType === actionTypes.INSTANCE_REFRESH">An instance replacement is pending for this environment and will begin shortly.</span> <span ng-show="managedUpdates.pendingUpdate.actionType === actionTypes.PLATFORM_UPDATE">A platform update is pending for this environment and will begin shortly.</span> </div> <div ng-show="managedUpdates.pendingUpdate && managedUpdates.pendingUpdate.status === actionStatuses.RUNNING"> <span ng-show="managedUpdates.pendingUpdate.actionType === actionTypes.INSTANCE_REFRESH">An instance replacement is currently in progress.</span> <span ng-show="managedUpdates.pendingUpdate.actionType === actionTypes.PLATFORM_UPDATE">A platform update is currently in progress.</span> </div> <div ng-show="!managedUpdates.pendingUpdate">No managed updates are scheduled for this environment. To learn more about how Elastic Beanstalk schedules managed updates, see <a eb-docs-href="/console/elasticbeanstalk/managed-platform-updates">Managed Platform Updates</a>.</div> </div> </div> <h3 class="underline"> History </h3> <table class="events-table" data-table="resource"> <colgroup> <col class="timestamp"> <col class="type"> <col class="update-info"> <col> </colgroup> <thead> <tr data-table-header="togglable"> <th class="timestamp">Start Time</th> <th class="type">Duration</th> <th class="update-info">Update Information</th> <th>Result</th> </tr> </thead> <tbody ng-hide="historyRefreshing"> <tr ng-repeat="historyItem in managedUpdates.collection.history"> <td>{{historyItem.executedTime | intToDateTimeString}}</td> <td>{{historyItem.executedTime | dateDiffToDateTimeString:historyItem.completedTime}}</td> <td>{{historyItem.actionDescription}}</td> <td><span ng-class="historyItem.result | historyStatusToMood | moodToTextClass">{{historyItem.result.toUpperCase()}}</span> <span ng-if="historyItem.failureType"> - {{historyItem.failureType}} <br> {{historyItem.failureDescription}} </span> </td> </tr> <tr ng-show="managedUpdates.collection.history.length === 0"> <td class="no-history" colspan="4">No update history for this environment</td> </tr> </tbody> </table> <div class="loading" ng-show="historyRefreshing"> <i class="icon-spinner icon-spin color-text-light-grey"></i> </div> <button class="btn load-more-button" ng-click="loadMoreHistoryClicked()" ng-disabled="historyRefreshing" ng-show="hasMoreHistory()"> Load More History </button> </div> </div> <div apply-managed-action-modal-dir></div></div>');
a.put("partials/environment/monitoring/add-alarm.html",'<div environment-header environment="environment"></div><div class="row-fluid add-alarm"> <div class="span2"> <div environment-sidenav selected="alarms" environment="environment"></div> </div> <div class="span10"> <div class="row-fluid"> <div class="span12"> <h3 class="underline header"> <span ng-show="editMode">Edit Alarm</span><span ng-hide="editMode">Add Alarm</span> <div class="pull-right"> {{graphDef.statistic}} {{graphDef.metricName}} <em>{{data[0].unit | prettifyUnit: graphDef}}</em> <em class="type-size-small" ng-show="graphDef.dimensionsAsString()">({{graphDef.dimensionsAsString()}})</em> </div> </h3> </div> </div> <div class="row-fluid"> <div class="span6"> <form class="form-horizontal" name="addAlarmForm" submit-to-class> <div class="control-group" ng-class="{invalid: addAlarmForm.name.$invalid}" blur-to-class> <label class="control-label">Name:</label> <div class="controls"> <div ng-hide="editMode"> <input type="text" class="input-xlarge" ng-model="input.name" required="required" ng-maxlength="238" ng-pattern="/^[0-9a-zA-Z]+$/" name="name" autofocus="autofocus" unique-logical-id="{{!editMode}}" /> </div> <div ng-show="editMode" class="p-top-5">{{input.name}}</div> <div class="help-inline" ng-show="addAlarmForm.name.$error.resourceExists"> <p class="text-error">Resource with name {{input.name}} already exists</p> </div> <div class="help-inline" ng-show="addAlarmForm.name.$invalid && addAlarmForm.name.$dirty"> <p class="text-error">Must be less than 238 characters in length and can only contain numbers and letters</p> </div> </div> </div> <div class="control-group" ng-class="{invalid: addAlarmForm.alarmDescription.$invalid}" blur-to-class> <label class="control-label">Description:</label> <div class="controls"> <input type="text" class="input-xlarge" ng-model="input.properties.AlarmDescription" ng-maxlength="255" name="alarmDescription"/> <p class="help-inline">Optional.</p> </div> </div> <div class="control-group" ng-class="{invalid: addAlarmForm.period.$invalid}" blur-to-class> <label class="control-label">Period:</label> <div class="controls"> <select class="input-medium" ng-model="period" ng-options="period as period | scalePeriod for period in periodSelections" required="required" name="period"></select> </div> </div> <div class="control-group" ng-class="{invalid: addAlarmForm.comparisonOperator.$invalid || addAlarmForm.threshold.$invalid}" blur-to-class> <label class="control-label">Threshold:</label> <div class="controls p-top-5"> {{graphDef.statistic}} {{graphDef.metricName}} <select ng-model="input.properties.ComparisonOperator" ng-options="operator.name as operator.operator for operator in operators" required="required" name="comparisonOperator" class="input-mini"></select> <input ng-model="input.properties.Threshold" type="number" required="required" ng-pattern="/^[\\-\\.0-9]+$/" name="threshold" class="input-small"/> </div> </div> <div class="control-group" ng-class="{invalid: addAlarmForm.evaluationMinutes.$invalid}" blur-to-class> <label class="control-label">Change state after:</label> <div class="controls"> <div> <select ng-model="input.properties.EvaluationPeriods" ng-options="p.periods as p.seconds | scalePeriod for p in evaluationPeriodSelections" name="evaluationMinutes" required="required"></select> </div> </div> </div> <div class="control-group"> <label class="control-label">Notify:</label> <div class="controls"> <external-service-select info="snsTopics" input-model="input" input-key="snsTopic" default-option-text="A new SNS topic&hellip;" on-refresh="refreshTopics()"></external-service-select> <div ng-show="!input.snsTopic" class="new-topic"> <div ng-class="{\'invalid\': addAlarmForm.newTopicName.$invalid}" class="control-group" blur-to-class> <label class="type-size-small topic-label p-top-5">Topic name:</label> <input type="text" ng-model="input.newTopicName" name="newTopicName" maxlength="256" ng-pattern="/^[\\-_0-9a-zA-Z]*$/"/> </div> <div ng-class="{\'invalid\': addAlarmForm.newTopicEmail.$invalid}" class="control-group" blur-to-class> <label class="type-size-small topic-label p-top-5">E-mail address:</label> <input type="email" ng-model="input.newTopicEmail" ng-required="!input.snsTopic && (input.onOK || input.onAlarm || input.onInsufficientData)" name="newTopicEmail" /> </div> </div> </div> </div> <div class="control-group"> <label class="control-label">Notify when state changes to:</label> <div class="controls"> <input type="checkbox" ng-model="input.onOK"/> <label class="inline-block p-top-5 m-right-10">OK</label> <input type="checkbox" ng-model="input.onAlarm"/> <label class="inline-block p-top-5 m-right-10">Alarm</label> <input type="checkbox" ng-model="input.onInsufficientData"/> <label class="inline-block p-top-5">Insufficient data</label> </div> </div> <div> <span ng-show="status" ng-bind-html="status"></span> <div class="pull-right"> <a href="#" class="btn btn-link" click-eater ng-click="cancel()">Cancel</a> <button class="btn btn-primary" ng-click="addAlarmForm.$valid && add()" ng-disabled="status"> <i class="icon-spinner icon-spin" ng-show="status"></i> <span ng-hide="editMode">Add</span><span ng-show="editMode">Save</span> </button> </div> </div> </form> </div> <div class="span5 offset1"> <div class="row-fluid"> <div class="span12"> <div aws-metric-graph graph-size="small" graph-def="graphDef" graph-data="data" max-time="endTime" min-time="startTime" hide-header="true" alarms="inputAsAlarms"></div> </div> </div> <div class="row-fluid" ng-show="metricLabels"> <div class="span12 p-left-10 p-right-10"> <em class="type-size-small color-text-dark-grey">{{metricLabels}}</em> </div> </div> <div class="row-fluid m-top-30 m-bottom-10" ng-show="otherAlarmResources"> <div class="span12"> <h3 class="underline">Other Alarms For This Metric</h3> </div> </div> <div class="row-fluid" ng-show="otherAlarmResources"> <div class="span12"> <ul class="unstyled"> <li ng-repeat="res in otherAlarmResources | orderBy:\'logicalResourceId\'" ng-class="m-bottom-5"> <a ng-href="{{getEditLink(res)}}">{{res.logicalResourceId}}</a> </li> </ul> </div> </div> </div> </div> </div></div>');
a.put("partials/environment/monitoring/add-metric.html",'<div class="add-metric span12"> <h3 class="title">{{title}}</h3> <form class="form-horizontal container-fluid" name="addMetricForm" submit-to-class resettable> <div class="row-fluid"> <div class="control-group span6" ng-class="{ invalid: addMetricForm.newResource.$invalid }" blur-to-class> <label class="control-label">Resource:</label> <div class="controls"> <select name="newResource" ng-model="newResource" ng-options="res.logicalResourceId group by res.type for res in resources | metricable | orderBy:\'logicalResourceId\' track by res.logicalResourceId" required> <option value="" disabled="disabled">-- Choose a resource --</option> </select> </div> </div> <div class="control-group span6" ng-class="{ invalid: addMetricForm.newMetric.$invalid }" blur-to-class> <label class="control-label">CloudWatch metric:</label> <div class="controls"> <div ng-hide="newResourceHasMetrics()" class="gentle-inline-block p-top-5">No metrics available for this resource.</div> <div ng-show="newResourceHasMetrics()" class="gentle-inline-block"> <select focus-on-reset name="newMetric" ng-model="newMetric" ng-options="metric as metric.metricName group by groupByNamespace(metric) for metric in availableMetrics[newResource.logicalResourceId].data track by metric.metricName" ng-show="availableMetrics[newResource.logicalResourceId].state === \'ready\'" required> </select> <div ng-show="availableMetrics[newResource.logicalResourceId].state === \'error\'" class="text-error gentle-inline-block p-top-5">{{availableMetrics[newResource.logicalResourceId].error.message}}</div> </div> <a href="#" click-eater ng-click="refreshMetrics()" class="gentle-inline-block p-top-5" ng-show="newResource && availableMetrics[newResource.logicalResourceId].state !== \'loading\'">Refresh <i class="icon-spinner"></i></a> <div ng-show="availableMetrics[newResource.logicalResourceId].state === \'loading\'" class="p-top-5"> <i class="icon-spinner icon-spin"></i> Loading </div> </div> </div> </div> <div class="row-fluid"> <div class="control-group span6" ng-class="{ invalid: addMetricForm.newStatistic.$invalid }" blur-to-class> <label class="control-label">Statistic:</label> <div class="controls"> <select name="newStatistic" ng-model="newStatistic" ng-options="s.name for s in statistics" required></select> </div> </div> <div class="control-group span6" ng-class="{ invalid: addMetricForm.newDescription.$invalid }" blur-to-class> <label class="control-label">Description:</label> <div class="controls"> <input type="text" name="newDescription" ng-change="onDescriptionChange()" ng-maxlength="64" ng-model="newDescription" ng-pattern="/^[- \\w]+$/" required> </div> </div> </div> <div class="row-fluid"> <div class="span6" ng-class="{ invalid: addMetricForm.newDimensions.$invalid }" blur-to-class> <label class="control-label">Dimensions:</label> <div class="controls" ng-show="newMetric"> <select name="newDimensions" ng-model="newDimensions" ng-options="dimension as dimension.label group by dimension.group for dimension in getMetricDimensionOptions() track by dimension.label" required></select> </div> </div> </div> <div class="row-fluid"> <div class="span12"> <button class="pull-right btn btn-primary" ng-click="addMetricForm.$valid && add()"> <span ng-show="status">Add Another</span><span ng-hide="status">Add</span> </button> <span ng-show="status" class="m-right-10 m-top-5 pull-right" ng-bind-html="status"></span> </div> </div> </form></div>');
a.put("partials/environment/monitoring/dashboard.html",'<div environment-header environment="environment"></div><div class="row-fluid monitoring-dashboard"> <div class="span2"> <div environment-sidenav selected="monitoring" environment="environment"></div> </div> <div class="span10"> <div updating-alert></div> <h3 class="underline has-button bottom-gutter overview-header"> Overview <div class="pull-right"> <span class="time-range type-weight-bold">Period</span> <aws-select-button value-filter-expr="| scalePeriod" values="periodSelections" selection="overviewPeriod" disable-menu="overviews.editing"></aws-select-button> <button class="btn overview-edit" ng-click="overviews.editClicked()" ng-hide="overviews.editing">Edit</button> <a href="#" click-eater class="btn btn-link overview-cancel" ng-click="overviews.cancelClicked()" ng-show="overviews.editing">Cancel</a> <button class="btn btn-primary overview-save" ng-click="overviews.saveClicked()" ng-show="overviews.editing">Save</button> <button class="btn overview-refresh" ng-click="overviews.refreshClicked()" ng-disabled="overviews.editing"><i class="icon-spinner"></i></button> </div> </h3> <div class="row-fluid"> <aws-metric-overview editing="overviews.editing" in-alarm="isInAlarm(def)" metric-def="def" metric-time="overviews.values[def.toKey()].time" metric-unit="overviews.values[def.toKey()].unit" metric-value="overviews.values[def.toKey()].value" ng-repeat="def in overviews.current" remove-clicked="overviews.remove($def)"></aws-metric-overview> </div> <div class="row-fluid" ng-show="overviews.editing && overviews.current.length < 12"> <add-metric add-requested="overviews.add($resource, $metric, $statistic, $description, $dimensions)" available-metrics="availableMetrics" class="m-top-20" load-metrics="loadMetrics($resource)" refresh-available-metrics="refreshAvailableMetrics($resource)" resources="resources.resources | filter:resourceIsMetricable" title="Add Overview"></add-metric> </div> <h3 class="underline has-button bottom-gutter monitoring-header"> Monitoring <div class="pull-right"> <span class="time-range type-weight-bold">Time Range</span> <aws-select-button value-filter-expr="| scalePeriod" values="rangeSelections" selection="graphTimeRange" disable-menu="graphs.editing"></aws-select-button> <span class="time-range type-weight-bold">Period</span> <eb-select-button name-filter-expr="| scalePeriod" options="graphPeriodSelections" on-selection="onGraphPeriodChange(option)" selection="graphPeriod" disable-menu="graphs.editing"></eb-select-button> <button class="btn graph-edit" ng-click="graphs.editClicked()" ng-hide="graphs.editing">Edit</button> <a href="#" click-eater class="btn btn-link graph-cancel" ng-click="graphs.cancelClicked()" ng-show="graphs.editing">Cancel</a> <button class="btn btn-primary graph-save" ng-click="graphs.saveClicked()" ng-show="graphs.editing">Save</button> <button class="btn overview-refresh" ng-click="graphs.refreshClicked()" ng-disabled="graphs.editing"><i class="icon-spinner"></i></button> </div> </h3> <div class="row-fluid" ng-show="graphs.editing"> <add-metric add-requested="graphs.add($resource, $metric, $statistic, $description, $dimensions)" available-metrics="availableMetrics" class="graphs" load-metrics="loadMetrics($resource)" refresh-available-metrics="refreshAvailableMetrics($resource)" resources="resources.resources" title="Add Graph"></add-metric> </div> <div class="row-fluid" ng-repeat="group in groupedGraphs"> <div class="span12"> <a class="graph-link span6" ng-repeat="def in group" ng-href="{{getLink(def)}}"> <div aws-metric-graph add-alarm-clicked="goToAlarm($def)" add-alarm-visible="!legacy" editing="graphs.editing" graph-data="graphs.values[def.toKey()].data" graph-def="def" graph-size="small" has-alarms="hasAlarm(def)" in-alarm="isInAlarm(def)" max-time="graphs.values[def].endTime" min-time="graphs.values[def].startTime" remove-clicked="graphs.remove($def)" see-alarms-clicked="goToManageAlarms($def)" show-hover="false"></div> </a> </div> </div> </div></div>');
a.put("partials/environment/monitoring/graph-detail.html",'<div environment-header environment="environment"></div><div class="row-fluid graph-detail"> <div class="span2"> <div environment-sidenav selected="monitoring" environment="environment"></div> </div> <div class="span10"> <div updating-alert></div> <div class="row-fluid"> <div class="span12"> <h3 class="underline has-button bottom-gutter header"> <aws-select-button values="statistics" selection="graphDef.statistic"></aws-select-button> {{graphDef.metricName}} <em>{{data[0].unit | prettifyUnit: graphDef}}</em> <em class="type-size-small" ng-show="graphDef.dimensionsAsString()">({{graphDef.dimensionsAsString()}})</em> <div class="pull-right"> <span class="period type-weight-bold">Period</span> <aws-select-button class="far-right" value-filter-expr="| scalePeriod" values="periodSelections" selection="period"></aws-select-button> </div> </h3> <div aws-metric-graph graph-size="large" graph-def="graphDef" graph-data="data" max-time="endTime" min-time="startTime" show-hover="true"></div> </div> </div> <div class="row-fluid"> <div class="span3 jumper type-size-small"> Show <a ng-click="jumpTo(3, \'hours\')" href="#" click-eater>3h</a> <a ng-click="jumpTo(8, \'hours\')" href="#" click-eater>8h</a> <a ng-click="jumpTo(24, \'hours\')" href="#" click-eater>24h</a> <a ng-click="jumpTo(7, \'days\')" href="#" click-eater>7d</a> <a ng-click="jumpTo(14, \'days\')" href="#" click-eater>2w</a> </div> <div class="span9 time-select type-size-small"> <double-slider low-value="startTime" high-value="endTime" absolute-min-value="absoluteMinTime" min-value="minTime" max-value="maxTime" allow-min-scaling="true" left-popover="{{startTime | intToDateTimeString}}" right-popover="{{endTime | intToDateTimeString}}" left-label="minTime | intToDateTimeString" right-label="maxTime | intToDateTimeString"></double-slider> </div> </div> </div></div>');
a.put("partials/environment/monitoring/heroes/bytes.html",'<p class="hero-text">{{metricValue | scaleBytes:metricUnit}}</p><p class="sub-text">{{metricDef.description}}</p>');a.put("partials/environment/monitoring/heroes/generic.html","<p class=\"hero-text\">{{metricValue | scaleNumber:1}} <span ng-hide=\"!metricUnit || metricUnit === 'Count' || metricUnit === 'None' || metricDef.statistic === 'SampleCount'\">{{metricUnit}}</span></p><p class=\"sub-text\">{{metricDef.description}}</p>");a.put("partials/environment/monitoring/heroes/labels.html",
'<p class="hero-text">{{metricValue | labels:metricDef}}</p><p class="sub-text">{{metricDef.description}}<br><em ng-hide="metricValue === 0">{{(\'time_on\' | localize) + \' \' + metricTimeAsString()}}</em></p>');a.put("partials/environment/monitoring/heroes/percent.html",'<p class="hero-text">{{metricValue | percent:1}}</p><p class="sub-text">{{metricDef.description}}</p>');a.put("partials/environment/monitoring/heroes/time.html","<p class=\"hero-text\">{{metricValue | scaleTime:metricUnit:0 | optionalNumber:1 }}</p><p class=\"sub-text\">{{metricDef.description}}<br><em>{{ 'in_' + (metricValue | scaleTime:metricUnit:1) | localize:{}:'' }}</em></p>");
a.put("partials/environment/monitoring/large-graph.html",'<div class="large-graph"> <div class="graph-overlay color-text-light-grey type-size-jumbotron" ng-hide="graphData"><i class="icon-spinner icon-spin"></i></div> <div class="graph-overlay color-text-light-grey" ng-show="graphData.length === 0"><i class="icon-ban-circle no-data"></i></div> <div class="chart" ng-show="graphData.length"></div> <div class="hover-point type-size-small" style="display: none;"> <strong>Time:</strong> {{ hoverItem.time | intToDateTimeString }}<br/> <strong>Value:</strong> {{ hoverItem.value }} </div></div>');
a.put("partials/environment/monitoring/manage-alarms.html",'<div environment-header environment="environment"></div><div class="row-fluid manage-alarms"> <div class="span2"> <div environment-sidenav selected="alarms" environment="environment"></div> </div> <div class="span10"> <div updating-alert></div> <div class="row-fluid m-bottom-30"> <div class="span12"> <h3 class="underline header has-button"> Existing Alarms <aws-select-button value-filter-expr="| pluck:\'key\' | localize:value" values="filters" selection="filter" class="m-left-10"></aws-select-button> </h3> </div> </div> <div class="row-fluid" ng-hide="alarmResources.length"> <div class="span12"> <div class="placeholder"> <span class="type-size-big placeholder-title">You have not defined any alarms. They can be added via graphs on the <a ng-href="{{getPathToMonitoringDashboard()}}">Monitoring Dashboard.</a></span> </div> </div> </div> <div class="row-fluid" ng-repeat="alarm in alarmResources | filter:filter.filter | orderBy:\'logicalResourceId\'" ng-show="alarmResources.length"> <div class="span12 alarm-card m-bottom-30" ng-class="{ \'in-alarm\' : alarms[alarm.physicalResourceId].stateValue === \'ALARM\'}"> <div class="header"> <span class="type-weight-bold color-text-dark-grey m-left-20"> <i class="icon-warning-sign p-top-5 m-right-5 color-text-red type-size-big" ng-show="alarms[alarm.physicalResourceId].stateValue === \'ALARM\'"></i> {{alarm.logicalResourceId}} </span> <div class="pull-right controls color-text-mid-grey type-size-big"> <a ng-href="{{getEditLink(alarm.logicalResourceId)}}" class="m-right-10 edit-link"><i class="icon-cog"></i></a> <i class="icon-remove m-right-15 remove" ng-click="removeClicked(alarm.logicalResourceId)" click-eater="both"></i> </div> </div> <div class="row-fluid p-vert-10"> <div class="span4 p-horiz-20"> <h4 class="type-weight-bold">{{alarms[alarm.physicalResourceId].statistic}} {{alarms[alarm.physicalResourceId].metricName}} <em>{{data[alarm.physicalResourceId][0].unit | prettifyUnit: defs[alarm.physicalResourceId]}}</em></h4> <p class="type-size-small m-bottom-20">{{alarms[alarm.physicalResourceId].alarmDescription}}</p> <div class="m-bottom-5"><strong class="m-right-5">Period:</strong>{{alarms[alarm.physicalResourceId].period | scalePeriod}}</div> <div class="m-bottom-5"><strong class="m-right-5">Threshold:</strong>{{alarms[alarm.physicalResourceId].comparisonOperator | prettifyComparison}} {{alarms[alarm.physicalResourceId].threshold}}</div> <div><strong class="m-right-5">Notifying:</strong>{{alarms[alarm.physicalResourceId].alarmActions | prettifyTopics}}</div> </div> <div class="span8 p-right-20 graph-container"> <div aws-metric-graph graph-size="small" alarms="alarms[alarm.physicalResourceId]" graph-def="defs[alarm.physicalResourceId]" graph-data="data[alarm.physicalResourceId]" max-time="endTime" min-time="startTimes[alarm.physicalResourceId]" hide-header="true"></div> <div class="graph-labels"><em class="type-size-small color-text-dark-grey">{{metricLabels(defs[alarm.physicalResourceId])}}</em></div> </div> </div> </div> </div> </div></div>');
a.put("partials/environment/monitoring/overview-hero.html",'<div ng-switch="metricValue !== undefined" class="overview-heros inline-block" ng-class="{ editing: editing, \'color-negative\' : inAlarm }"> <i class="icon-remove color-text-mid-grey remove-link" ng-show="editing" ng-click="removeClicked({$def:metricDef})"></i> <p class="hero-text color-text-light-grey" ng-switch-when="false"><i class="icon-spinner icon-spin"></i></p> <div ng-switch-when="true"><div ng-include src="getIncludePath()"></div></div></div>');
a.put("partials/environment/monitoring/small-graph.html",'<div class="small-graph" ng-class="{\'in-alarm\': inAlarm}"> <div class="header" ng-hide="hideHeader"> <span class="type-size-small type-weight-bold color-text-dark-grey graph-title"> <i class="icon-warning-sign p-top-5 m-right-5 color-text-red type-size-big" ng-show="inAlarm" ng-click="seeAlarmsClicked({$def:graphDef})" click-eater="both"></i> {{graphDef.description}} </span> <em class="type-size-small color-text-dark-grey">{{graphData[0].unit | prettifyUnit: graphDef}}</em> <div class="pull-right controls color-text-mid-grey type-size-big p-top-5"> <i ng-class="{\'icon-bell\' : !hasAlarms, \'icon-bell-alt\': hasAlarms}" ng-show="!editing && addAlarmVisible" ng-click="addAlarmClicked({$def:graphDef})" click-eater="both"></i> <i class="icon-remove" ng-show="editing" ng-click="removeClicked({$def:graphDef})" click-eater="both"></i> </div> </div> <div class="graph-overlay type-size-jumbotron color-text-light-grey" ng-hide="graphData"><i class="icon-spinner icon-spin"></i></div> <div class="graph-overlay color-text-light-grey" ng-show="graphData.length === 0"> <i class="icon-ban-circle no-data"></i><br/> <span class="color-text-dark-grey">Selected time range contains no data.</span> </div> <div class="chart" ng-show="graphData.length"></div></div>');
a.put("partials/environment/save-configuration.html",'<div class="row-fluid"> <h1 class="span12 underline bottom-gutter ">Save Configuration</h1> <p>Save this environment\'s current configuration.</p></div><div class="row-fluid"> <div class="span12"> <form class="form-horizontal" name="saveConfigForm" ng-submit="saveConfigForm.$valid && saveconfiguration()" submit-to-class> <div class="control-group"> <label class="control-label">Environment:</label> <div class="controls"> <p class="control-text">{{environment.environmentName}}</p> </div> </div> <div class="control-group" ng-class="{invalid: saveConfigForm.configurationName.$invalid}" blur-to-class> <label class="control-label">Configuration name:</label> <div class="controls"> <input class="input-large ng-pristine ng-valid ng-valid-required" name="configurationName" type="text" ng-model="configName" required="required" autofocus="autofocus"> </div> </div> <div class="control-group" ng-class="{invalid: saveConfigForm.configDescription.$invalid}"> <label class="control-label">Description:</label> <div class="controls"> <input class="input-large" type="text" name="configDescription" ng-model="configDescription" ng-maxlength="200"> <div class="help-inline">Optional.</div> <div class="help-inline text-error" ng-show="saveConfigForm.configDescription.$invalid">The description cannot have more than 200 characters.</div> </div> </div> <div class="form-actions"> <div class="pull-right"> <a href="" ng-click="cancelRequested()" class="btn btn-link">Cancel</a> <button class="btn btn-primary" ng-click="saveConfigForm.$valid && saveConfiguration()" ng-disabled="inProgress"> <i class="icon-spinner icon-spin" ng-show="inProgress"></i>Save </button> </div> </div> </form> </div></div>');
a.put("partials/environment/sidenav.html",'<div class="aws-sidenav"> <ul> <li class="type-size-big" ng-class="getLinkClass(\'dashboard\')"><a ng-href="{{dashboardPath}}">Dashboard</a></li> <li class="type-size-big" ng-class="getLinkClass(\'configuration\')"><a ng-href="{{configurationPath}}">Configuration</a></li> <li class="type-size-big" ng-class="getLinkClass(\'logs\')"><a ng-href="{{logsPath}}">Logs</a></li> <li class="type-size-big" ng-class="getLinkClass(\'health\')" ng-hide="navigation.hideHealthLink"><a ng-href="{{healthPath}}">Health</a></li> <li class="type-size-big" ng-class="getLinkClass(\'monitoring\')"><a ng-href="{{monitoringPath}}">Monitoring</a></li> <li class="type-size-big" ng-class="getLinkClass(\'alarms\')" ng-hide="navigation.hideAlarmsLink"><a ng-href="{{manageAlarmsPath}}">Alarms</a></li> <li class="type-size-big" ng-class="getLinkClass(\'managed\')" ng-hide="navigation.hideManagedActionsLink"><a ng-href="{{managedActionsPath}}">Managed Updates</a></li> <li class="type-size-big" ng-class="getLinkClass(\'events\')"><a ng-href="{{eventsPath}}">Events</a></li> <li class="type-size-big" ng-class="getLinkClass(\'tags\')" ng-hide="navigation.hideTagsLink"><a ng-href="{{tagsPath}}">Tags</a></li> </ul></div>');
a.put("partials/environment/swap-cnames.html",'<div class="row-fluid"> <div class="span12"> <h1>Swap Environment URLs</h1> <p>When you swap an environment\'s URL with another environment\'s URL, you can deploy versions with no downtime. <a eb-docs-href="/console/elasticbeanstalk/cname-swap">Learn more</a></p> <div ng-show="sourceEnvironments.length > 1" class="alert alert-block alert-icon"> <p>Swapping the environment URL will modify the Route 53 DNS configuration, which may take a few minutes. Your application will continue to run while the changes are propagated.</p> </div> <div ng-hide="sourceEnvironments.length > 1" class="alert alert-block alert-icon alert-error"> <p>You need at least two web tier environments in the Ready state to complete this operation.</p> </div> </div></div><div class="row-fluid" ng-show="sourceEnvironments.length > 1"> <div class="span12"> <h3 class="underline"> Environment Details </h3> </div></div><form class="form-horizontal swapcnames" name="swapCNAMEsForm" ng-submit="swapCNAMEs()" submit-to-class ng-show="sourceEnvironments.length > 1"> <div class="row-fluid swapcnames"> <div class="span12"> <div class="form-horizontal"> <div class="control-group"> <label class="control-label">Environment name:</label> <div class="controls"> <select ng-options="env as env.environmentName + \' (\' + env.environmentId + \')\' for env in sourceEnvironments | orderBy:\'environmentName\' track by env.environmentId" ng-model="sourceEnv" ng-change="sourceEnvironmentChanged()" name="source" required="required" ng-hide="hasDefaultEnvironment" ng-disabled="inProgress"> </select> <span ng-show="hasDefaultEnvironment">{{sourceEnv.environmentName}}</span> </div> </div> <div class="control-group"> <label class="control-label">Environment URL:</label> <div class="controls"><span>{{sourceEnv.cname}}</span></div> </div> </div> </div> </div> <div class="row-fluid"> <div class="span12"> <h3 class="underline"> Select an Environment to Swap </h3> </div> </div> <div class="row-fluid"> <div class="span12"> <div class="control-group" ng-class="{invalid: swapCNAMEsForm.destination.$invalid}" blur-to-class> <label class="control-label">Environment name:</label> <div class="controls"> <select ng-options="env as env.environmentName + \' (\' + env.environmentId + \')\' for env in destinationEnvironments | orderBy:\'environmentName\' track by env.environmentId" ng-model="destinationEnv" name="destination" required="required" ng-disabled="inProgress"> </select> </div> </div> <div class="control-group"> <label class="control-label">Environment URL:</label> <div class="controls"><span>{{destinationEnv.cname}}</span></div> </div> <div class="buttons"> <a href="#" click-eater ng-click="cancelRequested()" class="btn btn-link" ng-disabled="inProgress">Cancel</a> <button class="btn btn-primary" ng-disabled="!swapCNAMEsForm.$valid || inProgress"> <i class="icon-spinner icon-spin" ng-show="inProgress"></i> Swap </button> </div> </div> </div></form>');
a.put("partials/environment/tags.html",'<div environment-header environment="environment"></div><div class="row-fluid events-display"> <div class="span2"> <div environment-sidenav selected="tags" environment="environment"></div> </div> <div class="span10"> <div updating-alert></div> <div class="update-alert alert alert-block alert-info" ng-show="environment.isTerminated()"> <div>This environment is terminated and cannot be modified. It will remain visible for about an hour.</div> </div> <div class="tags-container" ng-hide="environment.isTerminated()"> <h3 class="underline">Tags for {{environment.environmentName}}</h3> <p class="m-bottom-15">Apply up to 47 tags in addition to the default tags to the resources in your environment. You can use tags to group and filter your environments. A tag is a key-value pair. The key must be unique within the environment and is case-sensitive. <a eb-docs-href="/console/elasticbeanstalk/tags">Learn more</a></p> <table class="tags-table" data-table="resource"> <thead> <tr class="tags-control-header-row" data-table-header="togglable"> <th class="first"> <span class="colname"> Key <span class="limit">(128 characters maximum)</span> </span> </th> <th class="last"> <span class="colname"> Value <span class="limit">(256 characters maximum)</span> </span> </th> </tr> </thead> <tbody class="new-form"> <tr ng-repeat="tag in tags.defaults"> <td> <span class="text-disabled">{{tag.key}}</span> </td> <td> <span class="text-disabled">{{tag.value}}</span> </td> </tr> <tr ng-class="{ \'table-input-error\': !tag.errors.isEmpty() }" ng-repeat-start="tag in tags.collection track by $index"> <td> <input type="text" ng-blur="tags.validate()" ng-disabled="environment.isUpdating()" ng-keyup="tags.addBlankTag()" ng-model="tag.key"> </td> <td> <input type="text" ng-blur="tags.validate()" ng-disabled="environment.isUpdating()" ng-keyup="tags.addBlankTag()" ng-model="tag.value"> <span class="row-action type-size-big color-text-mid-grey" ng-hide="tag.isBlank() || environment.isUpdating()"> <i class="icon-remove" aria-label="Remove tag" title="Remove tag" ng-click="tags.remove($index) && tags.validate()"></i> </span> </td> </tr> <tr class="table-input-error validation-message" ng-repeat-end ng-show="!tag.errors.isEmpty()"> <td colspan="2"> <div class="text-error" ng-repeat="error in tag.errors.fullMessages()">{{error}}</div> </td> </tr> </tbody> </table> <p class="help-inline">{{tags.max - tags.length + tags.blanks().length}} remaining</p> <div class="form-actions"> <div class="pull-right"> <a class="btn btn-link" analytics-click="tags_cancel" ng-click="cancel()">Cancel</a> <button class="btn btn-primary" ng-click="save()" ng-disabled="environment.isUpdating() || !tags.isValid() || savingTags"> <i class="icon-spinner icon-spin" ng-show="savingTags"></i> Apply </button> </div> </div> </div> </div></div>');
a.put("partials/environment/terminate-environment-modal.html",'<div class="modal-header"> <button type="button" class="close" data-dismiss="modal" ng-click="dialog.close()">&times;</button> <h3>Confirm Termination</h3></div><div ng-controller="TerminateEnvironmentModalController"> <div class="modal-body"> <div class="alert alert-error alert-icon" ng-show="errorMessage"> <p ng-bind-html="errorMessage"></p> </div> <p>Permanently terminate <strong>{{environment.environmentName}}</strong>? This action cannot be undone.</p> <ul> <li>Tier: {{environment.tier.localize()}}</li> <li>Platform: {{environment.getConfigurationLabel()}}</li> <li>Version: {{environment.versionLabel}}</li> <li>Last modified: {{environment.dateUpdated | intToDateTimeString}}</li> </ul> <hr> <div class="m-bottom-10">Proceeding with this action will result in the following:</div> <ul> <li class="m-bottom-15" ng-show="environment.hasCname()"><em>{{environment.cname}}</em> will be released.</li> <li class="m-bottom-15" ng-show="database">The attached database <strong>will be terminated</strong>. <ul style="list-style:none;margin-left:0;"> <li ng-show="dbDeletionPolicy.value === \'Snapshot\'">Terminate <em>{{getDatabaseEndpoint()}}</em> with snapshot.</li> <li ng-show="dbDeletionPolicy.value === \'Delete\'">Terminate <em>{{getDatabaseEndpoint()}}</em> <strong>without snapshot</strong>.</li> </ul> </li> <li class="m-bottom-15" ng-show="logStreamingEnabled() && logRetentionEnabled()">CloudWatch logs will be kept for <strong>{{retentionInDays.value}} days</strong>.</li> <li class="m-bottom-15" ng-show="logStreamingEnabled() && !logRetentionEnabled()">CloudWatch logs <strong>will be deleted</strong>.</li> <li ng-show="environmentHasTerminationDependencies()">Any additional resources associated with your Elastic Beanstalk environment <strong>will be destroyed</strong>.</li> <li ng-hide="environmentHasTerminationDependencies()">All resources associated with your Elastic Beanstalk environment <strong>will be destroyed</strong>.</li> </ul> <hr> <div class="confirmation-input"> <label>Enter the name of the environment to confirm:</label> <input type="text" autofocus autocomplete="off" name="environmentName" ng-model="environmentNameConfirmation" placeholder="Enter name of the environment to be terminated"> </div> </div> <div class="modal-footer text-left"> <div class="pull-right"> <button class="btn" ng-click="dialog.close()">Cancel</button> <button class="btn btn-danger" ng-click="terminateEnvironment()" ng-disabled="environmentNameConfirmation !== environment.environmentName">Terminate</button> </div> </div></div>');
a.put("partials/environment/update-platform-version-modal.html",'<div class="modal-header"> <button type="button" class="close" data-dismiss="modal" ng-click="dialog.close()">&times;</button> <h3>Update Platform Version</h3></div><div class="form-horizontal" ng-controller="UpdatePlatformVersionModalController"> <div class="modal-body"> <div class="alert alert-error alert-icon" ng-show="errorMessage"> <h3>{{errorTitle}}</h3> <p ng-bind-html="errorMessage"></p> </div> <div ng-if="showAlertMessages()"> <div class="alert alert-warning alert-icon" ng-show="showApplicationUnavailabilityWarning()"> <h3>Availability Warning</h3> <p ng-show="request.configurationOptions.isSingleInstance()">This operation replaces your instances; your application is unavailable during the update. To avoid downtime, clone the environment to use a newer version of the platform. <a eb-docs-href="/elasticbeanstalk/latest/dg/using-features.managing.clone.html">Learn more</a></p> <p ng-show="request.configurationOptions.isLoadBalanced() && !request.configurationOptions.isRollingUpdateEnabled()">This operation replaces your instances; your application is unavailable during the update. To keep at least one instance in service during the update, enable rolling updates. Another option is to clone the current environment, which creates a newer version of the platform, and then swap the CNAME of the environments when you are ready to deploy the clone. Learn more at <a eb-docs-href="/elasticbeanstalk/latest/dg/using-features.rollingupdates.html">Updating AWS Elastic Beanstalk Environments with Rolling Updates</a> and <a eb-docs-href="/elasticbeanstalk/latest/dg/using-features.CNAMESwap.html">Deploying Version with Zero Downtime</a>.</p> </div> <div class="alert alert-info alert-icon no-title-alert" ng-hide="showApplicationUnavailabilityWarning()"> <p>This operation replaces your instances; your application might be briefly unavailable during the update. To avoid downtime, clone the environment to use a newer version of the platform. <a eb-docs-href="/elasticbeanstalk/latest/dg/using-features.managing.clone.html">Learn more</a></p> </div> </div> <div class="control-group"> <label class="control-label">Current platform</label> <div class="controls control-text-data">{{environment.platform.toString()}}</div> </div> <div class="control-group"> <label class="control-label">Platform</label> <div class="controls"> <select class="input-xlarge" ng-model="request.configurationTemplate.platform" ng-options="platformVersion as platformVersion.toString() for platformVersion in group.platformVersions track by platformVersion.platformArn"></select> </div> </div> <div class="control-group"> <label class="control-label">Service role</label> <div class="controls"> <select class="input-xlarge" name="serviceRole" ng-model="request.configurationOptions.options.elasticbeanstalkEnvironmentServiceRole.value"> <option value="" disabled="disabled">-- Choose a service role --</option> <option ng-show="!request.configurationOptions.options.elasticbeanstalkEnvironmentServiceRole.hasDefaultRole()" value="%create-default-role-value%">Create new role</option> <option ng-repeat="option in request.configurationOptions.options.elasticbeanstalkEnvironmentServiceRole.valueOptions" ng-value="option">{{option}}</option> </select> <div class="validation-message" ng-repeat="message in request.configurationOptions.options.elasticbeanstalkEnvironmentServiceRole.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> </div> <div class="modal-footer text-left"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="dialog.close()">Cancel</a> <button class="btn btn-primary" ng-click="updatePlatformVersion()">Save</button> </div> </div></div>');
a.put("partials/environment/update-solution-stack-modal.html",'<div class="modal-backdrop" ng-show="open"></div><div class="modal update-stack" ng-show="open" role="dialog" tabindex="-1"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal" ng-click="cancel()">&times;</button> <h3>Update Platform Version</h3> </div> <div class="form-horizontal"> <div class="modal-body"> <div class="alert alert-info" ng-hide="!isLoadBalancedEnvironment || !isRollingUpdateEnabled"> <i class="icon-info-sign"></i> This operation will replace your instances, and your application might be briefly unavailable during the update. If you want to avoid downtime, you can create a clone of the environment that uses a newer version of the platform. <a eb-docs-href="/elasticbeanstalk/latest/dg/using-features.managing.clone.html">Learn more</a> </div> <div class="alert alert-warning" ng-show="!isLoadBalancedEnvironment || !isRollingUpdateEnabled"> <div ng-hide="isLoadBalancedEnvironment"> <i class="icon-warning-sign color-text-orange"></i> This operation will replace your instances, and your application will be unavailable during the update. If you want to avoid downtime, you can create a clone of the environment that uses a newer version of the platform. <a eb-docs-href="/elasticbeanstalk/latest/dg/using-features.managing.clone.html">Learn more</a> </div> <div ng-hide="!isLoadBalancedEnvironment || isRollingUpdateEnabled"> <i class="icon-warning-sign color-text-orange"></i> This operation will replace your instances, and your application will be unavailable during the update. To keep at least one instance in service during the update, enable rolling updates. Another option is to clone the current environment with a newer platform version and then swap the CNAME of the environments when you are ready to deploy the clone. For more information, see <a eb-docs-href="/elasticbeanstalk/latest/dg/using-features.rollingupdates.html">Updating AWS Elastic Beanstalk Environments with Rolling Updates</a> or <a eb-docs-href="/elasticbeanstalk/latest/dg/using-features.CNAMESwap.html">Deploying Version with Zero Downtime</a>. </div> </div> <div class="alert alert-error" ng-show="errorMessage"> <i class="icon-warning-sign color-text-red"></i> <span ng-bind-html="errorMessage"></span> </div> <div class="control-group"> <label class="control-label">Current platform:</label> <div class="controls control-text-data"> {{environment.solutionStackName}} </div> </div> <solution-stack-version-picker ng-if="solutionStacks && solutionStackName && open" options="solutionStacks" value="$parent.solutionStackName" tier="environment.tier" upgrade="upgrade"> </solution-stack-version-picker> <div class="control-group"> <label class="control-label">Service role:</label> <div class="controls"> <external-service-select info="data.iamRoles" input-model="serviceRole" input-key="value" on-refresh="refreshServiceRoles()"></external-service-select> <a eb-docs-href="/console/elasticbeanstalk/roles">Learn more</a> </div> </div> </div> <div class="modal-footer text-left"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()">Cancel</a> <button class="btn btn-primary" ng-disabled="updateStatus !== null" ng-click="update()"> <i class="icon-spinner icon-spin" ng-show="updateStatus !== null"></i> Save </button> </div> <span class="status-display" ng-bind-html="updateStatus"></span> </div> </div></div>');
a.put("partials/environment/upload-modal.html",'<div class="modal modal-scrollable" ng-show="modal.open" role="dialog" tabindex="-1"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal" ng-click="close()">&times;</button> <h3>{{modal.title}}</h3> </div> <div class="form-horizontal" ng-form="uploadAndDeployForm" submit-to-class resettable> <div class="modal-body"> <div class="alert alert-info" ng-hide="errorMessage"> <i class="icon-info-sign"></i> To deploy a previous version, go to the <a ng-href="{{deployUrl}}" ng-click="close()">Application Versions page</a>. </div> <div class="alert alert-error" ng-show="errorMessage"> <i class="icon-warning-sign color-text-red"></i> <span ng-bind-html="errorMessage"></span> </div> <div class="control-group"> <div ng-class="{ invalid: noFileSelected }"> <label class="control-label">Upload application:</label> <div class="controls"> <file-uploader accept-types="acceptTypes" change-handler="fileChanged($filename)" error-handler="error($messageKey, $error)" get-filename="uploader.getFilename" has-file-checker="uploader.hasFileSelected" reset="uploader.reset" upload-trigger="uploader.upload"></file-uploader> </div> </div> <div ng-class="{ invalid: uploadAndDeployForm.versionLabel.$invalid }"> <label class="control-label">Version label:</label> <div class="controls"> <input type="text" name="versionLabel" ng-maxlength="100" ng-minlength="1" ng-model="versionLabel" ng-required="true" ng-pattern="/^[^/]+$/" unique-from="modal.application.versions"> <div class="help-inline text-error" ng-show="submitted && uploadAndDeployForm.versionLabel.$error.unique"> An application version with that label already exists. </div> <div class="help-inline text-error" ng-show="submitted && uploadAndDeployForm.versionLabel.$error.pattern"> Version label can not contain a slash (/). </div> </div> </div> </div> <div ng-if="modal.hasRollingDeployments"> <h3 ng-click="deploymentCollapsed = !deploymentCollapsed" class="m-bottom-10 underline pointer"> <i ng-class="{\'icon-caret-right\': deploymentCollapsed, \'icon-caret-down\': !deploymentCollapsed}" class="icon-small"></i>Deployment Preferences </h3> <div ng-hide="deploymentCollapsed"> <div class="control-group" ng-if="deploymentPolicy"> <label class="control-label">Deployment policy:</label> <div class="controls"> <select name="deploymentPolicy" ng-model="deploymentPolicy.value" ng-hide="loadingValues"> <option value="{{constants.ALL_AT_ONCE}}" ng-selected="constants.ALL_AT_ONCE === deploymentPolicy.value">All at once</option> <option value="{{constants.ROLLING}}" ng-selected="constants.ROLLING === deploymentPolicy.value">Rolling</option> <option ng-if="isEnhancedPolicies" value="{{constants.ROLLING_WITH_ADDITIONAL_BATCH}}" ng-selected="constants.ROLLING_WITH_ADDITIONAL_BATCH === deploymentPolicy.value">Rolling with additional batch</option> <option ng-if="modal.isEnhancedHealth && isEnhancedPolicies" value="{{constants.IMMUTABLE}}" ng-selected="constants.IMMUTABLE === deploymentPolicy.value">Immutable</option> </select> <span ng-show="loadingValues"><i class="icon-spinner icon-spin"></i> Loading</span> </div> </div> <div class="control-group" ng-if="modal.isEnhancedHealth"> <label class="control-label">Healthy threshold:</label> <div class="controls"> <select ng-model="healthThreshold.value" ng-hide="loadingValues" ng-options="value as (value | localizeHealthStatus) for value in healthThresholdValues track by value"> </select> <span ng-show="loadingValues"><i class="icon-spinner icon-spin"></i> Loading</span> </div> </div> <div class="control-group m-bottom-1-em"> <label class="control-label">Ignore health check:</label> <div class="controls"> <select class="input-small" ng-model="ignoreHealthCheck.value"> <option value="true" ng-selected="ignoreHealthCheck.value === \'true\'">True</option> <option value="false" ng-selected="ignoreHealthCheck.value === \'false\'">False</option> </select> </div> </div> <div blur-to-class class="control-group"> <label class="control-label">Batch size:</label> <div class="controls m-top-5"> <batch-size-picker batch-size="batchSize" batch-size-type="batchSizeType" deployment-policy="deploymentPolicy" max-size="maxSize"></batch-size-picker> </div> </div> </div> <p> <span ng-show="deploymentPolicy.value === constants.ALL_AT_ONCE">The application version will be deployed using the <strong>All at once</strong> policy.</span> <span ng-show="deploymentPolicy.value === constants.ROLLING">The application version will be deployed using the <strong>Rolling</strong> policy and a batch size of <strong>{{batchSizeDisplay}}</strong></span> <span ng-show="deploymentPolicy.value === constants.ROLLING_WITH_ADDITIONAL_BATCH">The application version will be deployed using the <strong>Rolling with Additional Batch</strong> policy and a batch size of <strong>{{batchSizeDisplay}}</strong></span> <span ng-show="deploymentPolicy.value === constants.IMMUTABLE">The application version will be deployed using the <strong>Immutable</strong> policy.</span> </p> <span>Current number of instances: <strong>{{modal.instances.length}}</strong></span> </div> </div> <div class="modal-footer text-left"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()">{{modal.cancelButtonText}}</a> <button class="btn btn-primary" ng-disabled="deploymentStatus !== null" ng-click="deploy()"> <i class="icon-spinner icon-spin" ng-show="deploymentStatus !== null"></i> {{modal.confirmButtonText}} </button> </div> <span class="status-display" ng-bind-html="deploymentStatus"></span> </div> </div></div><div class="modal-backdrop" ng-show="modal.open"></div>');
a.put("partials/experimental/application/directives/environments-list.html",'<div class="environment-list"> <div class="environment-display" ng-repeat="env in environments | orderBy:\'environmentName\' track by env.environmentId"> <a class="environment-health" ng-class="env | environmentToMood" ng-click="goToEnvironmentDashboard(env)" ng-href="" data-env-name="{{env.environmentName}}"> <h4 class="break-word" title="{{env.environmentName}}">{{env.environmentName}} <span ng-if="env.status === \'Terminated\'">(Terminated)</span></h4> <dl class="environment-info-list clearfix"> <dt>Environment tier:</dt> <dd class="ellipsis-overflow">{{env.tier.localize()}}</dd> <dt>Platform:</dt> <dd>{{env.getConfigurationLabel()}}</dd> <dt>Running versions:</dt> <dd class="version-label break-word">{{env.versionLabel | cleanVersionLabel}}</dd> <dt>Last modified:</dt> <dd class="ellipsis-overflow">{{env.dateUpdated | intToDateTimeString}}</dd> <dt ng-show="env.tier.isWebServer()">URL: </dt> <dd ng-show="env.tier.isWebServer()" class="ellipsis-overflow" title="{{env.cname}}">{{env.cname}}</dd> </dl> </a> </div></div><div ng-hide="environments" class="row-fluid"> <div class="span12"> <div class="placeholder"> <span class="type-size-big placeholder-title">No environments currently exist for this application. <a href ng-click="openCreateEnvironmentModal(application)">Create one now.</a></span> </div> </div></div>');
a.put("partials/experimental/application/saved-configurations.html",'<div class="saved-configurations"> <div application-header application="application" show-actions="false"></div> <div class="row-fluid"> <div class="span2" application-sidenav selected="configurations" application="application"></div> <div class="span10"> <div class="pull-right"> <button class="btn" ng-click="deleteConfigurations()" ng-disabled="hasNoTemplates">Delete</button> <div class="relative inline-block" click-outside="closeLoadForm()" click-outside-enabler="loadFormVisible"> <button class="btn" ng-click="toggleLoadForm()" ng-disabled="hasNoTemplates">Load</button> <div class="popover bottom popover-form" ng-class="{show: loadFormVisible}"> <div class="arrow far-right"></div> <div name="loadSavedConfigurationForm" class="form-horizontal popover-content" ng-form submit-to-class> <div class="control-group blurred" ng-class="{invalid: getSelectedConfigurations().length !== 1 }"> <label class="control-label">Configuration name:</label> <div class="controls"> <p class="help-inline control-text">{{getSelectedConfigurationName()}}</p> </div> </div> <div class="control-group" ng-class="{invalid: loadSavedConfigurationForm.environment.$invalid}" blur-to-class> <label class="control-label">Environment:</label> <div class="controls"> <select name="environment" ng-model="loadInfo.environment" ng-options="env as env.environmentName for env in getEnvironments | deployableEnvironment track by env.environmentId" ng-show="(getEnvironments | deployableEnvironment).length > 0" on-enter="loadSavedConfiguration()" required="required"> </select> <p class="help-inline control-text" ng-show="(getEnvironments | deployableEnvironment).length === 0">No Environments are currently available.</p> <p class="help-inline" ng-show="(getEnvironments | deployableEnvironment).length > 0 && !loadInfo.environment && noEnvironmentSelected">You must select an environment.</p> </div> </div> <div class="control-group" ng-show="loadInfo.environment && loadInfo.environment.cname !== null"> <label class="control-label">Environment URL:</label> <div class="controls"><p class="help-inline control-text">{{loadInfo.environment.cname}}</p></div> </div> <div class="clearfix"> <div class="pull-right"> <a href="" class="btn btn-link" ng-click="closeLoadForm()">Cancel</a> <button class="btn btn-primary" ng-disabled="loadInProgress" ng-click="loadSavedConfiguration()"> <i class="icon-spinner icon-spin" ng-show="loadInProgress"></i> Load </button> </div> </div> </div> </div> </div> <button class="btn btn-primary" ng-click="launchEnvironment()" ng-disabled="!singleTemplateSelected()">Launch environment</button> </div> <div class="row-fluid"> <div class="span12"> <table data-table="resource"> <colgroup> <col class="selection"> <col> <col class="timestamp"> <col> <col> </colgroup> <thead> <tr data-table-header="togglable"> <th data-table-input="true"><input type="checkbox" check-all-box check-all-all="savedConfigurations.byApplication[application.applicationName]" check-all-selected="configSelection" check-all-key="templateName"></th> <th>Configuration Name</th> <th>Last Updated</th> <th>Solution Stack</th> <th>Description</th> </tr> </thead> <tbody> <tr ng-repeat="config in application.configurationTemplates"> <th data-table-input="true"><input type="checkbox" ng-model="configSelection[config]" /></th> <td>{{config}}</td> <td>{{savedConfigurations.byApplication[application.applicationName][config].dateUpdated | intToDateTimeString}}</td> <td>{{savedConfigurations.byApplication[application.applicationName][config].solutionStackName }}</td> <td>{{savedConfigurations.byApplication[application.applicationName][config].description }}</td> </tr> </tbody> </table> <div class="placeholder m-top-20" ng-show="application.configurationTemplates.length === 0"> <span class="type-size-big placeholder-title">No saved configurations</span> </div> </div> </div> </div> </div></div>');
a.put("partials/experimental/components/eb-dialog.html",'<div class="modal-scroll-box" ng-show="dialog.isOpen()"> <div class="{{dialog.getDisplayType()}}" ng-class="{ open: dialog.isOpen() }" role="dialog" tabindex="-1"> <div ng-include="dialog.partial"></div> <status-indicator/> </div></div><div class="modal-backdrop" ng-show="dialog.isOpen()"></div>');a.put("partials/experimental/components/environment-header.html",'<div class="row-fluid environment-header-display bottom-gutter"> <div class="heading-with-actions clearfix"> <div class="actions"> <environment-action-button actions="actions" class="far-right" disable-menu="actionButtonIsDisabled()" on-action="actionSelected(action)"></environment-action-button> </div> <h2> <a class="header-link" ng-href="{{pathToAllApplications}}">All Applications</a> <i class="icon-angle-right header-icon"></i> <a class="header-link" ng-href="{{pathToApplicationOverview}}">{{environment.applicationName}}</a> <i class="icon-angle-right header-icon"></i> {{environment.environmentName}} <span class="environment-info m-left-5"> <strong>Environment ID:</strong> <span ng-bind="environment.environmentId"></span><span ng-show="hasHeaderLink()">, <span ng-if="environment.tier.isWebServer()"> <strong>URL:</strong> <a target="_blank" ng-href="{{protocol}}://{{environment.cname}}{{port}}" ng-show="displayCname">{{environment.cname}}</a> <span ng-hide="displayCname">--</span> </span> <span ng-if="environment.tier.isWorker()"> <a target="_blank" ng-href="{{pathToSqsConsoleRedirect}}">View Queue</a> </span> </span> </span> </h2> </div></div>');
a.put("partials/experimental/components/learn-more.html",'<div> <h3 class="underline">Learn More</h3> <ul class="unstyled m-top-10"> <li><a eb-docs-href="/console/quickstarts">Get started using Elastic Beanstalk</a></li> <li><a eb-docs-href="/console/quickstarts/modify-the-code">Modify the code</a></li> <li><a eb-docs-href="/console/quickstarts/add-a-database">Create and connect to a database</a></li> <li><a eb-docs-href="/console/quickstarts/custom-domain">Add a custom domain</a></li> </ul> <h3 class="underline">Featured</h3> <ul class="unstyled m-top-10"> <li><a eb-docs-href="/console/elasticbeanstalk/custom-platform">Create your own custom platform</a></li> </ul> <h3 class="underline">Command Line Interface (v3)</h3> <ul class="unstyled m-top-10"> <li><a eb-docs-href="/console/elasticbeanstalk/eb-cli-install">Installing the AWS EB CLI</a></li> <li><a eb-docs-href="/console/elasticbeanstalk/eb-cli-commands">EB CLI Command Reference</a></li> </ul></div>');
a.put("partials/experimental/directives/eb-day-time-selector.html",'<select name="managementWindowDay" ng-disabled="ngDisabled" ng-model="day" ng-options="day.value as day.name for day in getWeekdays()" style="max-width:220px;"></select>&nbsp;at&nbsp;<select class="input-small" name="managementWindowHour" ng-disabled="ngDisabled" ng-model="hour" ng-options="n for n in [] | paddedRange:0:23" style="width:60px;"></select>&nbsp;:&nbsp;<select class="input-small" name="managementWindowMin" ng-disabled="ngDisabled" ng-model="min" ng-options="n for n in [] | paddedRange:0:59" style="width:60px;"></select>');
a.put("partials/experimental/directives/eb-inline-editor.html",'<div class="inline-editor-label" ng-hide="showEditor"> <ng-transclude></ng-transclude> <a href="" class="edit-link" ng-click="edit()"><i class="icon-pencil"></i></a></div><div class="inline-editor-input" ng-show="showEditor"> <input type="text" enter-press="confirm()" ng-change="temp.validate()" ng-class="{ invalid: !temp.isValid() }" ng-model="temp.value"> <i class="icon-remove-circle" ng-click="cancel()"></i> <i class="icon-ok-circle" ng-class="{ disabled: !temp.isValid() }" ng-click="confirm()"></i></div>');
a.put("partials/experimental/directives/eb-top-bar.html",'<div class="clearfix"> <ul class="nav"> <li class="service-name"> <a href="#/" id="elastic-beanstalk-logo"> <i class="service-icon s24 elastic-beanstalk"></i> Elastic Beanstalk </a> </li> <li click-outside-enabler="open === application.applicationName" click-outside="closeDropdown()" data-app-name="{{application.applicationName}}" ng-class="{ open: isDropdownOpen(application), selected: isApplicationSelected(application) }" ng-repeat="application in getNavApplications(applications)"> <a href="#" click-eater ng-click="toggleOpen(application)">{{application.applicationName}} <i class="icon-caret-down"></i></a> <div class="application-nav-dropdown"> <ul class="nav-environments"> <li><a href="" ng-click="openCreateEnvironmentModal(application)" style="padding-left:34px;">Create New Environment</a></li> </ul> <ul class="nav-environments" ng-show="environmentsByApplication[application.applicationName]"> <li ng-repeat="environment in environmentsByApplication[application.applicationName]"> <a data-env-name="{{environment.environmentName}}" ng-click="closeDropdown()" ng-href="{{getPathToEnvironment(environment)}}"><i class="icon-sign-blank" ng-class="environment | environmentToMood"></i> {{environment.environmentName}}</a> </li> </ul> <ul class="nav-application"> <li><a ng-click="closeDropdown()" ng-href="{{getPathToApplicationOverview(application.applicationName)}}">Environments</a></li> <li><a ng-click="closeDropdown()" ng-href="{{getPathToApplicationVersions(application)}}">Application Versions</a></li> <li><a ng-click="closeDropdown()" ng-href="{{getPathToApplicationConfigurations(application)}}">Saved Configurations</a></li> </ul> </div> </li> </ul> <a href="" class="create-link" ng-click="openCreateApplicationModal()" ng-show="displayCreateLink">Create New Application</a></div>');
a.put("partials/experimental/directives/platform-picker.html",'<select class="platform-picker input-xlarge" name="platform" ng-change="selectPlatform(selectedPlatform)" ng-disabled="controlsDisabled" ng-model="selectedPlatform" ng-options="platform as platform.name group by platform.category for platform in platforms.options"> <option value="" ng-disabled="true" selected="selected">-- Choose a platform --</option></select>');a.put("partials/experimental/environment/clone/clone-environment.html",'<div class="clone-environment row-fluid"> <div class="span2"></div> <div class="span10"> <div class="alert alert-error alert-icon" ng-show="errorMessage"> <h3>{{errorTitle}}</h3> <p ng-bind-html="errorMessage"></p> </div> <h1 class="underline">Clone Environment <a eb-docs-href="/console/elasticbeanstalk/clone"><i class="icon-question-sign pull-right"></i></a> </h1> <p>You can launch a new environment based on an existing environment\u2019s configuration settings while optionally choosing a different platform version for the new environment.</p> <h3 class="underline">Original Environment</h3> <dl class="dl-horizontal"> <dt><p>Environment name</p></dt> <dd><p>{{environment.environmentName}}</p></dd> <dt ng-show="environment.tier.isWebServer() && environment.hasCname()"><p>Environment URL</p></dt> <dd ng-show="environment.tier.isWebServer() && environment.hasCname()"><p>{{environment.cname}}</p></dd> <dt ng-show="environment.description"><p>Description</p></dt> <dd ng-show="environment.description"><p>{{environment.description}}</p></dd> <dt><p>Platform</p></dt> <dd><p>{{environment.platform.toString()}}</p></dd> </dl> <form class="form-horizontal new-form" name="cloneEnvironmentForm"> <h3 class="underline bottom-gutter">New Environment</h3> <div class="control-group" ng-class="{ \'input-error\': !request.environmentName.isValid() }"> <label class="control-label">Environment name</label> <div class="controls"> <input type="text" autofocus="autofocus" class="input-xlarge" name="environmentName" ng-change="request.environmentName.errors.reset()" ng-model="request.environmentName.value" unique-from="environmentNames"> <div class="text-error" ng-show="cloneEnvironmentForm.environmentName.$error.unique">Environment name must be unique.</div> <div class="text-error" ng-bind-html="message" ng-repeat="message in request.environmentName.errorMessages()"></div> </div> </div> <div class="control-group dns-availability" ng-class="{ \'input-error\': checkAvailabilityErrorMessage || request.cnameprefix.isUnavailable(), \'input-positive\': request.cnameprefix.isAvailable() }" ng-if="request.isWebServerTier()"> <label class="control-label">Environment URL</label> <div class="controls"> <div class="inline-block input-append"> <input type="text" class="input-xlarge" enter-press="checkDnsAvailability()" name="cnameprefix" ng-change="request.cnameprefix.errors.reset()" ng-model="request.cnameprefix.value" placeholder="Leave blank for autogenerated value"> <span class="add-on" ng-bind-html="request.cnameprefix.getCnameDomain()"></span> </div> <button class="btn" ng-click="checkDnsAvailability()" ng-disabled="checkAvailabilityButtonDisabled()">Check availability</button> <div class="help-block" ng-show="request.cnameprefix.hasBeenChecked()"> <strong class="text-success" ng-show="request.cnameprefix.isAvailable()">URL is available.</strong> <strong class="text-error" ng-show="request.cnameprefix.isUnavailable()">That URL is already taken.</strong> </div> <div class="text-error" ng-bind-html="checkAvailabilityErrorMessage" ng-show="checkAvailabilityErrorMessage"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': !request.description.isValid() }"> <label class="control-label">Description</label> <div class="controls"> <textarea class="input-xxlarge" name="description" ng-change="request.description.errors.reset()" ng-model="request.description.value" style="resize:none;"></textarea> <div class="help-block">Maximum length of 200 characters.</div> <div class="text-error" ng-bind-html="message" ng-repeat="message in request.description.errorMessages()"></div> </div> </div> <div class="control-group"> <label class="control-label">Platform</label> <div class="controls"> <select class="input-xxlarge" name="platform" ng-model="request.configurationTemplate.platform" ng-options="platformVersion as platformVersion.toString() for platformVersion in group.platformVersions track by platformVersion.platformArn"></select> </div> </div> <div class="control-group" ng-class="{ \'input-error\': request.configurationOptions.options.elasticbeanstalkEnvironmentServiceRole.validationMessages.isSeverityError(), \'input-warning\': request.configurationOptions.options.elasticbeanstalkEnvironmentServiceRole.validationMessages.isSeverityWarning() }"> <label class="control-label">Service role</label> <div class="controls"> <select class="input-xxlarge" name="serviceRole" ng-model="request.configurationOptions.options.elasticbeanstalkEnvironmentServiceRole.value"> <option ng-show="!request.configurationOptions.options.elasticbeanstalkEnvironmentServiceRole.hasDefaultRole()" value="%create-default-role-value%">Create new role</option> <option ng-repeat="option in request.configurationOptions.options.elasticbeanstalkEnvironmentServiceRole.valueOptions" ng-value="option">{{option}}</option> </select> <div class="validation-message" ng-repeat="message in request.configurationOptions.options.elasticbeanstalkEnvironmentServiceRole.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <div class="form-actions"> <div class="pull-right"> <a class="btn btn-link" ng-click="cancel()" >Cancel</a> <button id="clone-button" class="btn btn-primary" ng-click="cloneEnvironment()" ng-disabled="cloneEnvironmentForm.$invalid || inProgress"> <i class="icon-spinner icon-spin" ng-show="inProgress"></i> Clone </button> </div> </div> </form> </div></div>');
a.put("partials/experimental/environment/configuration/cards/auto-scaling-card.html",'Environment type: <span ng-bind-html="card.options.elasticbeanstalkEnvironmentEnvironmentType | renderValue"></span><br>Availability Zones: <span ng-bind-html="card.options.autoscalingAsgAvailabilityZones | renderValue"></span><br>Instances: <span ng-bind-html="card.options.autoscalingAsgMinSize.value"></span>&ndash;<span ng-bind-html="card.options.autoscalingAsgMaxSize.value"></span><br>');a.put("partials/experimental/environment/configuration/cards/deployment-card.html",
'Deployment policy: <span ng-bind-html="card.options.elasticbeanstalkCommandDeploymentPolicy | renderValue"></span><br><div ng-if="card.options.elasticbeanstalkCommandDeploymentPolicy.isRolling()"> Deployment batch size: <span ng-if="card.options.elasticbeanstalkCommandBatchSizeType.isPercentage()">{{card.options.elasticbeanstalkCommandBatchSize.value}}% of virtual machines at a time</span> <span ng-if="card.options.elasticbeanstalkCommandBatchSizeType.isFixed()">{{card.options.elasticbeanstalkCommandBatchSize.value}} virtual machines at a time</span></div>Rolling updates: <span ng-show="card.options.autoscalingUpdatepolicyRollingupdateRollingUpdateEnabled.value" ng-bind-html="card.options.autoscalingUpdatepolicyRollingupdateRollingUpdateType | renderValue"></span><span ng-hide="card.options.autoscalingUpdatepolicyRollingupdateRollingUpdateEnabled.value">disabled</span><br><div ng-if="!card.options.elasticbeanstalkCommandIgnoreHealthCheck.isDisabled()"> Health check: <span ng-bind="card.options.elasticbeanstalkCommandIgnoreHealthCheck.value ? \'disabled\' : \'enabled\'"></span></div>');
a.put("partials/experimental/environment/configuration/cards/health-card.html",'Health check path: <span ng-bind-html="card.options.elasticbeanstalkApplicationApplicationHealthcheckUrl | renderValue"></span><br>Health reporting system: <span ng-bind-html="card.options.elasticbeanstalkHealthreportingSystemSystemType | renderValue"></span>');a.put("partials/experimental/environment/configuration/cards/instances-card.html",'EC2 instance type: <span ng-bind-html="card.options.autoscalingLaunchconfigurationInstanceType | renderValue"></span><br>EC2 image ID: <span ng-bind-html="card.options.autoscalingLaunchconfigurationImageId | renderValue"></span><br><div ng-show="request.isUpdateRequest()"> Monitoring interval: <span ng-bind-html="card.options.autoscalingLaunchconfigurationMonitoringInterval.value | localizeOption"></span></div>Root volume type: <span ng-bind-html="card.options.autoscalingLaunchconfigurationRootVolumeType | renderValue"></span><br>Root volume size (GB): <span ng-bind-html="card.options.autoscalingLaunchconfigurationRootVolumeSize | renderValue"></span><br>Root volume IOPS: <span ng-bind-html="card.options.autoscalingLaunchconfigurationRootVolumeIoPs | renderValue"></span>');
a.put("partials/experimental/environment/configuration/cards/load-balancing-card.html",'<div ng-if="!card.options.elasticbeanstalkEnvironmentLoadBalancerType.isDisabled()"> Port: <span ng-show="card.options.elbLoadbalancerLoadBalancerHttpPort.isOff()">disabled</span><span ng-hide="card.options.elbLoadbalancerLoadBalancerHttpPort.isOff()"><span ng-bind-html="card.options.elbLoadbalancerLoadBalancerPortProtocol.value"></span> on port <span ng-bind-html="card.options.elbLoadbalancerLoadBalancerHttpPort.value"></span></span><br> Secure port: <span ng-bind-html="card.options.elbLoadbalancerLoadBalancerHttpsPort.renderEnabled()"></span>&nbsp;<span ng-if="!card.options.elbLoadbalancerLoadBalancerHttpsPort.isOff()">(<span ng-bind-html="card.options.elbLoadbalancerLoadBalancerHttpsPort.renderPortNumber()"></span>)</span><br> Cross-zone load balancing: <span ng-bind="card.options.elbLoadbalancerCrossZone.value ? \'enabled\' : \'disabled\'"></span><br> Connection draining: <span ng-bind="card.options.elbPoliciesConnectionDrainingEnabled.value ? \'enabled\' : \'disabled\'"></span>&nbsp;<span ng-bind-html="card.options.elbPoliciesConnectionDrainingEnabled.isDefault() ? \'(default)\' : \'\'"></span></div><div ng-if="card.options.elasticbeanstalkEnvironmentLoadBalancerType.isDisabled()"> <p style="font-style:italic;margin-top:20px;text-align:center;">This configuration does not contain a load balancer.</p></div>');
a.put("partials/experimental/environment/configuration/cards/managed-card.html",'Managed updates: <span ng-bind-html="card.options.elasticbeanstalkManagedactionsManagedActionsEnabled | renderValue"></span><br><div ng-if="!card.options.elasticbeanstalkManagedactionsPreferredStartTime.isDisabled()"> Weekly update window: <span ng-bind-html="card.options.elasticbeanstalkManagedactionsPreferredStartTime | renderValue"></span><br></div>');a.put("partials/experimental/environment/configuration/cards/notifications-card.html",
'Email address: <span ng-bind-html="card.options.elasticbeanstalkSnsTopicsNotificationEndpoint | renderValue"></span>');a.put("partials/experimental/environment/configuration/cards/permissions-card.html",'Service role: <span ng-bind-html="card.options.elasticbeanstalkEnvironmentServiceRole | renderValue"></span><br>Virtual machine key pair: <span ng-bind-html="card.options.autoscalingLaunchconfigurationEc2KeyName | renderValue"></span><br>Virtual machine instance profile: <span ng-bind-html="card.options.autoscalingLaunchconfigurationIamInstanceProfile | renderValue"></span>');
a.put("partials/experimental/environment/configuration/cards/rds-card.html",'<div ng-if="request.isUpdateRequest() && dbEndpoint"> Endpoint: <a target="_blank" ng-href="{{dbEndpoint.path}}">{{dbEndpoint.label}} <i class="icon-external-link"></i></a></div>Engine: <span ng-bind-html="card.options.rdsDbinstanceDbEngine | renderValue"></span><br>Instance class: <span ng-bind-html="card.options.rdsDbinstanceDbInstanceClass | renderValue"></span><br>Storage (GB): <span ng-bind-html="card.options.rdsDbinstanceDbAllocatedStorage | renderValue"></span><br>Multi-AZ: <span ng-bind-html="card.options.rdsDbinstanceMultiAzDatabase | renderValue"></span><div ng-if="card.options.rdsDbinstanceDbDeletionPolicy">When terminating: <span ng-if="card.options.rdsDbinstanceDbDeletionPolicy.isDelete()">all data is lost</span> <span ng-if="card.options.rdsDbinstanceDbDeletionPolicy.isSnapshot()">snapshot the database</span></div>');
a.put("partials/experimental/environment/configuration/cards/software-card.html",'<div ng-show="card.options.elasticbeanstalkContainerNodejsNodeVersion"> Node.js version: <span ng-bind-html="card.options.elasticbeanstalkContainerNodejsNodeVersion.value"></span></div><div ng-show="card.options.elasticbeanstalkXrayXrayEnabled"> AWS X-Ray: <span ng-bind="card.options.elasticbeanstalkXrayXrayEnabled.value ? \'enabled\' : \'disabled\'"></span></div><div ng-show="card.options.elasticbeanstalkHostmanagerLogPublicationControl"> Rotate logs: <span ng-bind="card.options.elasticbeanstalkHostmanagerLogPublicationControl.value ? \'enabled\' : \'disabled\'"></span>&nbsp;<span ng-bind-html="card.options.elasticbeanstalkHostmanagerLogPublicationControl.isDefault() ? \'(default)\' : \'\'"></span></div><div ng-show="card.options.elasticbeanstalkCloudwatchLogsStreamLogs"> Log streaming: <span ng-show="request.isUpdateRequest() && request.configurationOptions.isLogStreamingEnabled()"> <a target="_blank" ng-href="{{cloudwatchEndpoint.path}}"> <span ng-bind-html="card.options.elasticbeanstalkCloudwatchLogsStreamLogs | renderValue"></span>&nbsp;<i class="icon-external-link"></i> </a> </span> <span ng-show="!request.isUpdateRequest() || !request.configurationOptions.isLogStreamingEnabled()"> <span ng-bind-html="card.options.elasticbeanstalkCloudwatchLogsStreamLogs | renderValue"></span> </span> <span ng-bind-html="card.options.elasticbeanstalkCloudwatchLogsStreamLogs.isDefault() ? \'(default)\' : \'\'"></span></div><div ng-show="request.configurationOptions.hasStaticFiles()"> Static files: <span ng-bind-html="request.configurationOptions.getStaticFilesCollection().count()"></span></div>Environment properties: <span ng-bind-html="request.configurationOptions.collections.elasticbeanstalkApplicationEnvironment.count()"></span>');
a.put("partials/experimental/environment/configuration/cards/tags-card.html",'<div ng-if="request.tags">Tags: <span ng-bind-html="request.tags.noBlanks().length === 0 ? \'none\' : request.tags.noBlanks().length" ng-class="{ \'empty-value\': request.tags.noBlanks().length === 0 }"></span></div>');a.put("partials/experimental/environment/configuration/cards/unknown-card.html","");a.put("partials/experimental/environment/configuration/cards/vpc-card.html",'VPC: <span ng-bind-html="card.options.ec2VpcVpcId | renderValue"></span>&nbsp;<span ng-bind-html="card.options.ec2VpcVpcId.isDefaultVpc() ? \'(default)\' : \'\'"></span><br><div ng-if="request.configurationOptions.isLoadBalanced()"> Load balancer visibility: <span ng-bind-html="card.options.ec2VpcElbScheme | renderValue"></span><br> Load balancer subnets: <span ng-bind-html="card.options.ec2VpcElbSubnets | renderValue"></span><br></div>Associate public IP address: <span ng-bind="card.options.ec2VpcAssociatePublicIpAddress.value ? \'enabled\' : \'disabled\'"></span><br>Instance subnets: <span ng-bind-html="card.options.ec2VpcSubnets | renderValue"></span><br>Security groups: <span ng-bind-html="card.options.autoscalingLaunchconfigurationSecurityGroups | renderValue"></span><div ng-if="card.options.rdsDbinstanceDbEngine.value"> Database subnets: <span ng-bind-html="card.options.ec2VpcDbSubnets | renderValue"></span></div>');
a.put("partials/experimental/environment/configuration/cards/worker-card.html",'Worker queue: <span ng-bind-html="card.options.elasticbeanstalkSqsdWorkerQueueUrl | renderValue"></span><br>HTTP path: <span ng-bind-html="card.options.elasticbeanstalkSqsdHttpPath | renderValue"></span><br>MIME type: <span ng-bind-html="card.options.elasticbeanstalkSqsdMimeType | renderValue"></span><br>HTTP connections: <span ng-bind-html="card.options.elasticbeanstalkSqsdHttpConnections | renderValue"></span><br>Visibility timeout: <span ng-bind-html="card.options.elasticbeanstalkSqsdErrorVisibilityTimeout | renderValue"></span>');
a.put("partials/experimental/environment/configuration/configuration-dashboard-cards.html","<configuration-cards ng-controller=\"ConfigurationController\" ng-init=\"rows = [[ card('software', 'Software'), card('instances', 'Instances'), card('auto-scaling', 'Capacity') ], [ card('load-balancing', 'Load balancer', { visible: request.isWebServerTier() }), card('worker', 'Worker', { visible: request.isWorkerTier() }), card('deployment', 'Rolling updates and deployments'), card('permissions', 'Security') ], [ card('health', 'Monitoring'), card('managed', 'Managed updates', { visible: request.configurationOptions.hasManagedActions }), card('notifications', 'Notifications') ], [ card('vpc', 'Network'), card('rds', 'Database') ]]\"> <div class=\"row-fluid\" ng-repeat=\"row in rows\"> <div class=\"span4\" ng-if=\"card.isVisible()\" ng-repeat=\"card in row\"> <div class=\"card\" ng-class=\"{ 'card-error': card.hasErrors() }\"> <div class=\"card-header\"><span class=\"card-title\" ng-bind-html=\"card.title\"></span></div> <div class=\"card-body\" ng-include=\"'partials/experimental/environment/configuration/cards/' + card.section + '-card.html'\"></div> <a href=\"\" class=\"modify-link\" ng-click=\"modify(card)\">Modify</a> </div> </div> </div></configuration-cards>");
a.put("partials/experimental/environment/configuration/configuration-dashboard.html",'<div environment-header environment="environment"></div><div class="row-fluid configuration-dashboard"> <div class="span2"> <div environment-sidenav selected="configuration" environment="environment"></div> </div> <div class="span10" ng-include="\'partials/experimental/environment/configuration/configuration-dashboard-cards.html\'" ng-show="initialized"></div></div>');a.put("partials/experimental/environment/configuration/getting-started-cards.html",
"<configuration-cards ng-controller=\"ConfigurationController\" ng-init=\"rows = [[ card('software', 'Software'), card('instances', 'Instances'), card('auto-scaling', 'Capacity') ], [ card('load-balancing', 'Load balancer', { visible: request.isWebServerTier() }), card('worker', 'Worker', { visible: request.isWorkerTier() }), card('deployment', 'Rolling updates and deployments'), card('permissions', 'Security') ], [ card('health', 'Monitoring'), card('notifications', 'Notifications'), card('vpc', 'Network') ], [ card('rds', 'Database'), card('tags', 'Tags') ]]\"> <div class=\"row-fluid\" ng-repeat=\"row in rows\"> <div class=\"span4\" ng-if=\"card.isVisible()\" ng-repeat=\"card in row\"> <div class=\"card\" ng-class=\"{ 'card-error': card.hasErrors() }\"> <div class=\"card-header\"><span class=\"card-title\" ng-bind-html=\"card.title\"></span></div> <div class=\"card-body\" ng-include=\"'partials/experimental/environment/configuration/cards/' + card.section + '-card.html'\"></div> <a href=\"\" class=\"modify-link\" ng-click=\"modify(card)\">Modify</a> </div> </div> </div></configuration-cards>");
a.put("partials/experimental/environment/configuration/panels/auto-scaling-panel.html",'<div class="row-fluid getting-started-layout" ng-controller="ConfigurationPanelController"> <div class="span1 getting-started-icon"> <img src="/elasticbeanstalk/img/getting-started/globe.png" alt="Getting started with AWS Elastic Beanstalk"> </div> <div class="span8 mainbar form-horizontal new-form" ng-form="configurationPanelForm"> <alert></alert> <h1 class="m-bottom-20 p-top-10">Modify capacity</h1> <h3 class="underline">Auto Scaling Group</h3> <p class="m-bottom-15">Configure the compute capacity of your environment and Auto Scaling settings to optimize the number of instances used.</p> <div class="control-group" ng-class="{ \'input-error\': options.elasticbeanstalkEnvironmentEnvironmentType.validationMessages.isSeverityError() }"> <label class="control-label">Environment type</label> <div class="controls"> <select class="input-large" name="environmentType" ng-model="options.elasticbeanstalkEnvironmentEnvironmentType.value"> <option value="SingleInstance">Single instance</option> <option value="LoadBalanced">Load balanced</option> </select> <div class="validation-message" ng-repeat="message in options.elasticbeanstalkEnvironmentEnvironmentType.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.asgMaxSize.$invalid || configurationPanelForm.asgMinSize.$invalid, \'input-warning\': configurationPanelForm.asgMaxSize.$error.warningMessages || configurationPanelForm.asgMinSize.$error.warningMessages }"> <label class="control-label">Instances</label> <div class="controls"> Min <input type="number" class="input-mini" eb-validation-messages="options.autoscalingAsgMinSize.validationMessages" maxvalue="options.autoscalingAsgMaxSize.value" minvalue="options.autoscalingAsgMinSize.minValue" name="asgMinSize" ng-disabled="options.autoscalingAsgMinSize.isDisabled()" ng-model="options.autoscalingAsgMinSize.value" ng-model-options="{ updateOn: \'blur\' }"> Max <input type="number" class="input-mini" eb-validation-messages="options.autoscalingAsgMaxSize.validationMessages" maxvalue="options.autoscalingAsgMaxSize.maxValue" minvalue="options.autoscalingAsgMinSize.value" name="asgMaxSize" ng-disabled="options.autoscalingAsgMaxSize.isDisabled()" ng-model="options.autoscalingAsgMaxSize.value" ng-model-options="{ updateOn: \'blur\' }"> <div ng-messages="configurationPanelForm.asgMinSize.$error"> <div class="validation-message" ng-message="minvalue">Min must be between {{options.autoscalingAsgMinSize.minValue}} and {{options.autoscalingAsgMaxSize.value}}.</div> <div class="validation-message" ng-message="maxvalue">Min must be between {{options.autoscalingAsgMinSize.minValue}} and {{options.autoscalingAsgMaxSize.value}}.</div> <div class="validation-message" ng-message="number">Min must be a number.</div> </div> <div class="validation-message" ng-repeat="message in options.autoscalingAsgMinSize.validationMessages.messages" ng-bind-html="message.message"></div> <div ng-messages="configurationPanelForm.asgMaxSize.$error"> <div class="validation-message" ng-message="minvalue">Max must be between {{options.autoscalingAsgMinSize.value}} and {{options.autoscalingAsgMaxSize.maxValue}}.</div> <div class="validation-message" ng-message="maxvalue">Max must be between {{options.autoscalingAsgMinSize.value}} and {{options.autoscalingAsgMaxSize.maxValue}}.</div> <div class="validation-message" ng-message="number">Max must be a number.</div> </div> <div class="validation-message" ng-repeat="message in options.autoscalingAsgMaxSize.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': options.autoscalingAsgAvailabilityZones.validationMessages.isSeverityError(), \'input-warning\': options.autoscalingAsgAvailabilityZones.validationMessages.isSeverityWarning() }"> <label class="control-label">Availability Zones</label> <div class="controls"> <select name="availabilityZones" ng-disabled="options.autoscalingAsgAvailabilityZones.isDisabled()" ng-model="options.autoscalingAsgAvailabilityZones.value" ng-options="option as (option | localizeOption) for option in options.autoscalingAsgAvailabilityZones.valueOptions"> </select> <span class="help-block">Number of Availability Zones (AZs) to use.</span> <div class="validation-message" ng-repeat="message in options.autoscalingAsgAvailabilityZones.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': options.autoscalingAsgCustomAvailabilityZones.validationMessages.isSeverityError(), \'input-warning\': options.autoscalingAsgCustomAvailabilityZones.validationMessages.isSeverityWarning() }"> <label class="control-label">Placement</label> <div class="controls"> <select class="input-large" multiple name="customAvailabilityZones" ng-attr-size="{{options.autoscalingAsgCustomAvailabilityZones.valueOptions.length}}" ng-disabled="options.autoscalingAsgCustomAvailabilityZones.isDisabled()" ng-model="options.autoscalingAsgCustomAvailabilityZones.value" ng-options="option as option for option in options.autoscalingAsgCustomAvailabilityZones.valueOptions"> </select> <span class="help-block">Specify Availability Zones (AZs) to use.</span> <div class="validation-message" ng-repeat="message in options.autoscalingAsgCustomAvailabilityZones.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.asgCooldown.$invalid, \'input-warning\': configurationPanelForm.asgCooldown.$error.warningMessages }" ng-show="request.isUpdateRequest() && options.autoscalingAsgCooldown"> <label class="control-label">Scaling cooldown</label> <div class="controls"> <div class="input-append"> <input type="number" class="input-small" eb-validation-messages="options.autoscalingAsgCooldown.validationMessages" minvalue="options.autoscalingAsgCooldown.minValue" name="asgCooldown" ng-disabled="options.autoscalingAsgCooldown.isDisabled()" ng-model="options.autoscalingAsgCooldown.value" ng-model-options="{ updateOn: \'blur\' }"> <span class="add-on">seconds</span> </div> <div class="validation-message" ng-repeat="message in options.autoscalingAsgCooldown.validationMessages.messages" ng-bind-html="message.message"></div> <div ng-messages="configurationPanelForm.asgCooldown.$error"> <div class="validation-message" ng-message="minvalue">Cooldown must be greater than {{options.autoscalingAsgCooldown.minValue}}.</div> <div class="validation-message" ng-message="number">Cooldown must be a number.</div> </div> </div> </div> <div ng-show="request.configurationOptions.hasAutoScalingTriggerOptions()"> <h3 class="m-bottom-15 underline">Scaling triggers</h3> <div class="control-group" ng-class="{ \'input-error\': options.autoscalingTriggerMeasureName.validationMessages.isSeverityError(), \'input-warning\': options.autoscalingTriggerMeasureName.validationMessages.isSeverityWarning() }"> <label class="control-label">Metric</label> <div class="controls"> <select class="input-large" name="autoscalingTriggerMeasureName" ng-disabled="options.autoscalingTriggerMeasureName.isDisabled()" ng-model="options.autoscalingTriggerMeasureName.value" ng-options="option as option for option in options.autoscalingTriggerMeasureName.valueOptions"> </select> <span class="help-block">Change the metric that is monitored to determine if the environment\u2019s capacity is too low or too high.</span> <div class="validation-message" ng-repeat="message in options.autoscalingTriggerMeasureName.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': options.autoscalingTriggerStatistic.validationMessages.isSeverityError(), \'input-warning\': options.autoscalingTriggerStatistic.validationMessages.isSeverityWarning() }"> <label class="control-label">Statistic</label> <div class="controls"> <select class="input-large" name="autoscalingTriggerStatistic" ng-disabled="options.autoscalingTriggerStatistic.isDisabled()" ng-model="options.autoscalingTriggerStatistic.value" ng-options="option as (option | localizeOption) for option in options.autoscalingTriggerStatistic.valueOptions"> </select> <span class="help-block">Choose how the metric is interpreted.</span> <div class="validation-message" ng-repeat="message in options.autoscalingTriggerStatistic.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': options.autoscalingTriggerUnit.validationMessages.isSeverityError(), \'input-warning\': options.autoscalingTriggerUnit.validationMessages.isSeverityWarning() }"> <label class="control-label">Unit</label> <div class="controls"> <select class="input-large" name="autoscalingTriggerUnit" ng-disabled="options.autoscalingTriggerUnit.isDisabled()" ng-model="options.autoscalingTriggerUnit.value" ng-options="option as (option | localizeOption) for option in options.autoscalingTriggerUnit.valueOptions"> </select> <span class="help-block"></span> <div class="validation-message" ng-repeat="message in options.autoscalingTriggerUnit.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.autoscalingTriggerPeriod.$invalid, \'input-warning\': configurationPanelForm.autoscalingTriggerPeriod.$error.warningMessages }"> <label class="control-label">Period</label> <div class="controls"> <div class="input-append"> <input type="number" class="input-mini" eb-validation-messages="options.autoscalingTriggerPeriod.validationMessages" maxvalue="options.autoscalingTriggerPeriod.maxValue" minvalue="options.autoscalingTriggerPeriod.minValue" name="autoscalingTriggerPeriod" ng-disabled="options.autoscalingTriggerPeriod.isDisabled()" ng-model="options.autoscalingTriggerPeriod.value" ng-model-options="{ updateOn: \'blur\' }"> <span class="add-on">Min</span> </div> <span class="help-block">The period between metric evaluations.</span> <div ng-messages="configurationPanelForm.autoscalingTriggerPeriod.$error"> <div class="validation-message" ng-message="minvalue">Period must be between {{options.autoscalingTriggerPeriod.minValue}} and {{options.autoscalingTriggerPeriod.maxValue}}.</div> <div class="validation-message" ng-message="maxvalue">Period must be between {{options.autoscalingTriggerPeriod.minValue}} and {{options.autoscalingTriggerPeriod.maxValue}}.</div> <div class="validation-message" ng-message="number">Period must be a number.</div> </div> <div class="validation-message" ng-repeat="message in options.autoscalingTriggerPeriod.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.autoscalingTriggerBreachDuration.$invalid, \'input-warning\': configurationPanelForm.autoscalingTriggerBreachDuration.$error.warningMessages }"> <label class="control-label">Breach duration</label> <div class="controls"> <div class="input-append"> <input type="number" class="input-mini" eb-validation-messages="options.autoscalingTriggerBreachDuration.validationMessages" maxvalue="options.autoscalingTriggerBreachDuration.maxValue" minvalue="options.autoscalingTriggerBreachDuration.minValue" name="autoscalingTriggerBreachDuration" ng-disabled="options.autoscalingTriggerBreachDuration.isDisabled()" ng-model="options.autoscalingTriggerBreachDuration.value" ng-model-options="{ updateOn: \'blur\' }"> <span class="add-on">Min</span> </div> <span class="help-block">The amount of time a metric can exceed a threshold before triggering a scaling operation.</span> <div ng-messages="configurationPanelForm.autoscalingTriggerBreachDuration.$error"> <div class="validation-message" ng-message="minvalue">Breach duration must be between {{options.autoscalingTriggerBreachDuration.minValue}} and {{options.autoscalingTriggerBreachDuration.maxValue}}.</div> <div class="validation-message" ng-message="maxvalue">Breach duration must be between {{options.autoscalingTriggerBreachDuration.minValue}} and {{options.autoscalingTriggerBreachDuration.maxValue}}.</div> <div class="validation-message" ng-message="number">Breach duration must be a number.</div> </div> <div class="validation-message" ng-repeat="message in options.autoscalingTriggerBreachDuration.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.autoscalingTriggerUpperThreshold.$invalid, \'input-warning\': configurationPanelForm.autoscalingTriggerUpperThreshold.$error.warningMessages }"> <label class="control-label">Upper threshold</label> <div class="controls"> <div ng-class="{ \'input-append\': !options.autoscalingTriggerUnit.isNone() }"> <input type="number" class="input-small" eb-validation-messages="options.autoscalingTriggerUpperThreshold.validationMessages" minvalue="options.autoscalingTriggerUpperThreshold.minValue" name="autoscalingTriggerUpperThreshold" ng-disabled="options.autoscalingTriggerUpperThreshold.isDisabled()" ng-model="options.autoscalingTriggerUpperThreshold.value" ng-model-options="{ updateOn: \'blur\' }"> <span class="add-on" ng-show="!options.autoscalingTriggerUnit.isNone()">{{options.autoscalingTriggerUnit.value | localizeOption}}</span> </div> <div class="validation-message" ng-repeat="message in options.autoscalingTriggerUpperThreshold.validationMessages.messages" ng-bind-html="message.message"></div> <div ng-messages="configurationPanelForm.autoscalingTriggerUpperThreshold.$error"> <div class="validation-message" ng-message="minvalue">Upper threshold can\'t be negative.</div> <div class="validation-message" ng-message="number">Upper threshold must be a number.</div> </div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.autoscalingTriggerLowerThreshold.$invalid, \'input-warning\': configurationPanelForm.autoscalingTriggerLowerThreshold.$error.warningMessages }"> <label class="control-label">Lower threshold</label> <div class="controls"> <div ng-class="{ \'input-append\': !options.autoscalingTriggerUnit.isNone() }"> <input type="number" class="input-small" eb-validation-messages="options.autoscalingTriggerLowerThreshold.validationMessages" minvalue="options.autoscalingTriggerLowerThreshold.minValue" name="autoscalingTriggerLowerThreshold" ng-disabled="options.autoscalingTriggerLowerThreshold.isDisabled()" ng-model="options.autoscalingTriggerLowerThreshold.value" ng-model-options="{ updateOn: \'blur\' }"> <span class="add-on" ng-show="!options.autoscalingTriggerUnit.isNone()">{{options.autoscalingTriggerUnit.value | localizeOption}}</span> </div> <div class="validation-message" ng-repeat="message in options.autoscalingTriggerLowerThreshold.validationMessages.messages" ng-bind-html="message.message"></div> <div ng-messages="configurationPanelForm.autoscalingTriggerLowerThreshold.$error"> <div class="validation-message" ng-message="minvalue">Lower threshold can\'t be negative.</div> <div class="validation-message" ng-message="number">Lower threshold must be a number.</div> </div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.upperBreachScaleIncrement.$invalid, \'input-warning\': configurationPanelForm.upperBreachScaleIncrement.$error.warningMessages }" ng-show="request.isUpdateRequest()"> <label class="control-label">Scale up increment</label> <div class="controls"> <div class="input-append"> <input type="text" class="input-mini" eb-validation-messages="options.autoscalingTriggerUpperBreachScaleIncrement.validationMessages" name="upperBreachScaleIncrement" ng-disabled="options.autoscalingTriggerUpperBreachScaleIncrement.isDisabled()" ng-model="options.autoscalingTriggerUpperBreachScaleIncrement.value" ng-model-options="{ updateOn: \'blur\' }" ng-pattern="/^\\d{1,3}\\%*$/"> <span class="add-on">EC2 instances</span> </div> <div class="validation-message" ng-repeat="message in options.autoscalingTriggerUpperBreachScaleIncrement.validationMessages.messages" ng-bind-html="message.message"></div> <div ng-messages="configurationPanelForm.upperBreachScaleIncrement.$error"> <div class="validation-message" ng-message="pattern">Must be a positive integer, optionally followed by a percent (%) sign.</div> </div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.lowerBreachScaleIncrement.$invalid, \'input-warning\': configurationPanelForm.lowerBreachScaleIncrement.$error.warningMessages }" ng-show="request.isUpdateRequest()"> <label class="control-label">Scale down increment</label> <div class="controls"> <div class="input-append"> <input type="text" class="input-mini" eb-validation-messages="options.autoscalingTriggerLowerBreachScaleIncrement.validationMessages" name="lowerBreachScaleIncrement" ng-disabled="options.autoscalingTriggerLowerBreachScaleIncrement.isDisabled()" ng-model="options.autoscalingTriggerLowerBreachScaleIncrement.value" ng-model-options="{ updateOn: \'blur\' }" ng-pattern="/^-\\d{1,3}\\%*$/"> <span class="add-on">EC2 instances</span> </div> <div class="validation-message" ng-repeat="message in options.autoscalingTriggerLowerBreachScaleIncrement.validationMessages.messages" ng-bind-html="message.message"></div> <div ng-messages="configurationPanelForm.lowerBreachScaleIncrement.$error"> <div class="validation-message" ng-message="pattern">Must be a negative integer, optionally followed by a percent (%) sign.</div> </div> </div> </div> </div> <div class="wizard-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()" ng-disabled="status">Cancel</a> <button class="btn btn-primary" ng-click="save()" ng-disabled="status">Save</button> </div> </div> </div></div>');
a.put("partials/experimental/environment/configuration/panels/deployment-panel.html",'<div class="row-fluid getting-started-layout" ng-controller="DeploymentPanelController"> <div class="span1 getting-started-icon"> <img src="/elasticbeanstalk/img/getting-started/globe.png" alt="Getting started with AWS Elastic Beanstalk"> </div> <div class="span8 mainbar form-horizontal new-form" ng-form="configurationPanelForm"> <alert></alert> <h1 class="m-bottom-20 p-top-10">Modify rolling updates and deployments</h1> <div ng-show="options.elasticbeanstalkCommandDeploymentPolicy"> <h3 class="underline">Application deployments</h3> <p class="m-bottom-15">Choose how AWS Elastic Beanstalk propagates source code changes and software configuration updates. <a eb-docs-href="/console/elasticbeanstalk/rolling-version-deployment">Learn more</a></p> <div class="control-group"> <label class="control-label">Deployment policy</label> <div class="controls"> <select name="deploymentPolicy" ng-model="options.elasticbeanstalkCommandDeploymentPolicy.value"> <option value="AllAtOnce">All at once</option> <option ng-if="request.configurationOptions.isLoadBalanced()" value="Rolling">Rolling</option> <option ng-if="request.configurationOptions.isLoadBalanced() && request.configurationOptions.isEnhancedHealth()" value="RollingWithAdditionalBatch">Rolling with additional batch</option> <option ng-if="options.elasticbeanstalkCommandDeploymentPolicy.immutableSupported()" value="Immutable">Immutable</option> </select> </div> </div> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.batchSizeFixed.$invalid || configurationPanelForm.batchSizePercentage.$invalid }" ng-show="request.configurationOptions.isLoadBalanced()"> <label class="control-label">Batch size</label> <div class="controls m-top-5"> <div class="control"> <label class="radio inline-block"> <input type="radio" name="deploymentBatchSizeType" ng-disabled="options.elasticbeanstalkCommandBatchSizeType.isDisabled()" ng-model="options.elasticbeanstalkCommandBatchSizeType.value" value="Percentage"> Percentage </label> <div class="conditional-input"> <div class="input-append"> <input type="number" class="input-mini" max="100" min="1" name="batchSizePercentage" ng-disabled="options.elasticbeanstalkCommandBatchSizeType.isDisabled() || !options.elasticbeanstalkCommandBatchSizeType.isPercentage()" ng-model="batchSizePercentage"> <span class="add-on">%</span> </div> <div class="help-inline">of the fleet at a time</div> </div> </div> <div class="control"> <label class="radio inline-block"> <input type="radio" name="deploymentBatchSizeType" ng-disabled="options.elasticbeanstalkCommandBatchSizeType.isDisabled()" ng-model="options.elasticbeanstalkCommandBatchSizeType.value" value="Fixed"> Fixed </label> <div class="conditional-input"> <input type="number" class="input-mini" maxvalue="options.elasticbeanstalkCommandBatchSize.maxValue" minvalue="options.elasticbeanstalkCommandBatchSize.minValue" name="batchSizeFixed" ng-disabled="options.elasticbeanstalkCommandBatchSizeType.isDisabled() || !options.elasticbeanstalkCommandBatchSizeType.isFixed()" ng-model="batchSizeFixed" ng-required="options.elasticbeanstalkCommandBatchSizeType.isFixed()"> <div class="help-inline">instances at a time</div> </div> </div> <div ng-messages="configurationPanelForm.batchSizeFixed.$error"> <div class="validation-message" ng-message="minvalue">Batch size must be between {{options.elasticbeanstalkCommandBatchSize.minValue}} and {{options.elasticbeanstalkCommandBatchSize.maxValue}} instances.</div> <div class="validation-message" ng-message="maxvalue">Batch size must be between {{options.elasticbeanstalkCommandBatchSize.minValue}} and {{options.elasticbeanstalkCommandBatchSize.maxValue}} instances.</div> <div class="validation-message" ng-message="required">Batch size is required.</div> <div class="validation-message" ng-message="number">Batch size must be a number.</div> </div> <div ng-messages="configurationPanelForm.batchSizePercentage.$error"> <div class="validation-message" ng-message="min">Batch size must be 1-100%.</div> <div class="validation-message" ng-message="max">Batch size must be 1-100%.</div> <div class="validation-message" ng-message="required">Batch size is required.</div> <div class="validation-message" ng-message="number">Batch size must be a number.</div> </div> </div> </div> </div> <h3 class="underline">Configuration updates</h3> <p class="m-bottom-15">Changes to virtual machine settings and VPC configuration trigger rolling updates to replace the instances in your environment without downtime. <a eb-docs-href="/console/elasticbeanstalk/rolling-environment-config">Learn more</a></p> <eb-control-group validation-messages="options.autoscalingUpdatepolicyRollingupdateRollingUpdateType.validationMessages"> <label class="control-label">Rolling update type</label> <div class="controls"> <select name="rollingUpdateType" ng-change="rollingUpdateTypeChange(rollingUpdateType)" ng-model="rollingUpdateType"> <option value="Disabled">Disabled</option> <option ng-if="options.autoscalingUpdatepolicyRollingupdateRollingUpdateType.healthBasedUpdatesSupported()" value="Health">Rolling based on Health</option> <option ng-if="request.configurationOptions.isLoadBalanced()" value="Time">Rolling based on Time</option> <option ng-if="options.autoscalingUpdatepolicyRollingupdateRollingUpdateType.immutableSupported()" value="Immutable">Immutable</option> </select> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.autoscalingUpdatepolicyRollingupdateRollingUpdateType.validationMessages.messages"></div> </div> </eb-control-group> <div ng-show="request.configurationOptions.isLoadBalanced()"> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.maxBatchSize.$invalid, \'input-warning\': configurationPanelForm.maxBatchSize.$error.warningMessages }"> <label class="control-label">Batch size</label> <div class="controls"> <input type="number" class="input-small" eb-validation-messages="options.autoscalingUpdatepolicyRollingupdateMaxBatchSize.validationMessages" maxvalue="options.autoscalingUpdatepolicyRollingupdateMaxBatchSize.maxValue" minvalue="options.autoscalingUpdatepolicyRollingupdateMaxBatchSize.minValue" name="maxBatchSize" ng-disabled="options.autoscalingUpdatepolicyRollingupdateMaxBatchSize.isDisabled()" ng-model="options.autoscalingUpdatepolicyRollingupdateMaxBatchSize.value" ng-required="!options.autoscalingUpdatepolicyRollingupdateMaxBatchSize.isDisabled()"> <div class="help-block">The maximum number of instances to replace in each phase of the update.</div> <div ng-messages="configurationPanelForm.maxBatchSize.$error"> <div class="validation-message" ng-message="minvalue">Batch size must be between {{options.autoscalingUpdatepolicyRollingupdateMaxBatchSize.minValue}} and {{options.autoscalingUpdatepolicyRollingupdateMaxBatchSize.maxValue}}.</div> <div class="validation-message" ng-message="maxvalue">Batch size must be between {{options.autoscalingUpdatepolicyRollingupdateMaxBatchSize.minValue}} and {{options.autoscalingUpdatepolicyRollingupdateMaxBatchSize.maxValue}}.</div> <div class="validation-message" ng-message="required">Batch size is required.</div> <div class="validation-message" ng-message="number">Batch size must be a number.</div> </div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.minInstancesInService.$invalid, \'input-warning\': configurationPanelForm.minInstancesInService.$error.warningMessages }"> <label class="control-label">Minimum capacity</label> <div class="controls"> <input type="number" class="input-small" eb-validation-messages="options.autoscalingUpdatepolicyRollingupdateMinInstancesInService.validationMessages" maxvalue="options.autoscalingUpdatepolicyRollingupdateMinInstancesInService.getMaxValue()" minvalue="options.autoscalingUpdatepolicyRollingupdateMinInstancesInService.minValue" name="minInstancesInService" ng-disabled="options.autoscalingUpdatepolicyRollingupdateMinInstancesInService.isDisabled()" ng-model="options.autoscalingUpdatepolicyRollingupdateMinInstancesInService.value" ng-required="!options.autoscalingUpdatepolicyRollingupdateMinInstancesInService.isDisabled()"> <div class="help-block">The minimum number of instances to keep in service at all times.</div> <div ng-messages="configurationPanelForm.minInstancesInService.$error"> <div class="validation-message" ng-message="minvalue">Minimum capacity must be between {{options.autoscalingUpdatepolicyRollingupdateMinInstancesInService.minValue}} and {{options.autoscalingUpdatepolicyRollingupdateMinInstancesInService.getMaxValue()}}.</div> <div class="validation-message" ng-message="maxvalue">Minimum capacity must be between {{options.autoscalingUpdatepolicyRollingupdateMinInstancesInService.minValue}} and {{options.autoscalingUpdatepolicyRollingupdateMinInstancesInService.getMaxValue()}}.</div> <div class="validation-message" ng-message="required">Minimum capacity is required.</div> <div class="validation-message" ng-message="number">Minimum capacity must be a number.</div> </div> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.autoscalingUpdatepolicyRollingupdateMinInstancesInService.validationMessages.messages"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': options.autoscalingUpdatepolicyRollingupdatePauseTime.validationMessages.isSeverityError() || pauseTimeError, \'input-warning\': options.autoscalingUpdatepolicyRollingupdatePauseTime.validationMessages.isSeverityWarning(), }"> <label class="control-label">Pause time</label> <div class="controls"> <pause-time-input controls-disabled="options.autoscalingUpdatepolicyRollingupdatePauseTime.isDisabled()" error="pauseTimeError" max-value="PT1H0M0S" model="options.autoscalingUpdatepolicyRollingupdatePauseTime.value"></pause-time-input> <div class="help-block">Pause the update for up to an hour between each batch.</div> <div class="validation-message" ng-bind-html="pauseTimeError" ng-show="pauseTimeError"></div> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.autoscalingUpdatepolicyRollingupdatePauseTime.validationMessages.messages"></div> </div> </div> </div> <h3 class="underline">Deployment preferences</h3> <p class="m-bottom-15">Customize health check requirements and deployment timeouts.</p> <div class="control-group" ng-show="options.elasticbeanstalkCommandIgnoreHealthCheck"> <label class="control-label">Ignore health check</label> <div class="controls"> <label class="checkbox"> <input type="checkbox" name="ignoreHealthCheck" ng-disabled="options.elasticbeanstalkCommandIgnoreHealthCheck.isDisabled()" ng-model="options.elasticbeanstalkCommandIgnoreHealthCheck.value"> <span class="help-inline">Don\u2019t fail deployments due to health check failures.</span> </label> </div> </div> <div class="control-group"> <label class="control-label">Healthy threshold</label> <div class="controls"> <select ng-disabled="options.elasticbeanstalkHealthreportingSystemHealthCheckSuccessThreshold.isDisabled()" ng-model="options.elasticbeanstalkHealthreportingSystemHealthCheckSuccessThreshold.value" ng-options="option as (option | localizeHealthStatus) for option in options.elasticbeanstalkHealthreportingSystemHealthCheckSuccessThreshold.valueOptions track by option"> </select> <div class="help-block">Lower the threshold for an instance in a batch to pass health checks during an update or deployment.</div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.commandTimeout.$invalid, \'input-warning\': configurationPanelForm.commandTimeout.$error.warningMessages }"> <label class="control-label">Command timeout</label> <div class="controls"> <input type="number" class="input-small" eb-validation-messages="options.elasticbeanstalkCommandTimeout.validationMessages" maxvalue="options.elasticbeanstalkCommandTimeout.maxValue" minvalue="options.elasticbeanstalkCommandTimeout.minValue" name="commandTimeout" ng-disabled="options.elasticbeanstalkCommandTimeout.isDisabled()" ng-model="options.elasticbeanstalkCommandTimeout.value" ng-required="!options.elasticbeanstalkCommandTimeout.isDisabled()"> <div class="help-block">Change the amount of time in seconds that AWS Elastic Beanstalk allows an instance to complete deployment commands.</div> <div ng-messages="configurationPanelForm.commandTimeout.$error"> <div class="validation-message" ng-message="minvalue">Command timeout must be between {{options.elasticbeanstalkCommandTimeout.minValue}} and {{options.elasticbeanstalkCommandTimeout.maxValue}} seconds.</div> <div class="validation-message" ng-message="maxvalue">Command timeout must be between {{options.elasticbeanstalkCommandTimeout.minValue}} and {{options.elasticbeanstalkCommandTimeout.maxValue}} seconds.</div> <div class="validation-message" ng-message="required">Command timeout is required.</div> <div class="validation-message" ng-message="number">Command timeout must be a number.</div> </div> </div> </div> <div class="wizard-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()" ng-disabled="status">Cancel</a> <button class="btn btn-primary" ng-click="save()" ng-disabled="status">Save</button> </div> </div> </div></div>');
a.put("partials/experimental/environment/configuration/panels/health-panel.html",'<div class="row-fluid getting-started-layout" ng-controller="ConfigurationPanelController"> <div class="span1 getting-started-icon"> <img src="/elasticbeanstalk/img/getting-started/globe.png" alt="Getting started with AWS Elastic Beanstalk"> </div> <div class="span8 mainbar form-horizontal new-form" ng-form="configurationPanelForm"> <alert></alert> <h1 class="m-bottom-20 p-top-10">Modify monitoring</h1> <h3 class="underline">Health check</h3> <p class="m-bottom-15">Set the path (relative to the root of your application) to which the load balancer sends health check requests.</p> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.healthCheckUrl.$invalid, \'input-warning\': configurationPanelForm.healthCheckUrl.$error.warningMessages }"> <label class="control-label">Health check path</label> <div class="controls"> <input type="text" eb-validation-messages="options.elasticbeanstalkApplicationApplicationHealthcheckUrl.validationMessages" name="healthCheckUrl" ng-maxlength="options.elasticbeanstalkApplicationApplicationHealthcheckUrl.maxLength" ng-model="options.elasticbeanstalkApplicationApplicationHealthcheckUrl.value" ng-model-options="{ updateOn: \'blur\' }" ng-pattern="options.elasticbeanstalkApplicationApplicationHealthcheckUrl.regex.pattern"> <div ng-messages="configurationPanelForm.healthCheckUrl.$error"> <div class="validation-message" ng-message="maxlength">Health check URL must be less than {{options.elasticbeanstalkApplicationApplicationHealthcheckUrl.maxLength}} characters.</div> <div class="validation-message" ng-message="pattern">Must be a valid URL path. You can optionally add protocol and port. <em>(example: HTTPS:443/health)</em></div> </div> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.elasticbeanstalkApplicationApplicationHealthcheckUrl.validationMessages.messages"></div> </div> </div> <h3 class="underline" ng-class="{ \'text-disabled\': !request.configurationOptions.hasHealthReportingSystemType() }">Health reporting</h3> <div ng-class="{ \'text-disabled\': !request.configurationOptions.hasHealthReportingSystemType() }"> <p class="m-bottom-15">Enhanced health reporting provides free real-time application and operating system monitoring of the instances and other resources in your environment.</p> <div class="control-group"> <label class="control-label">System</label> <div class="controls"> <div class="radio"> <label><input type="radio" ng-disabled="!request.configurationOptions.hasHealthReportingSystemType()" ng-model="options.elasticbeanstalkHealthreportingSystemSystemType.value" ng-value="\'enhanced\'">Enhanced</label> </div> <div class="radio"> <label><input type="radio" ng-disabled="!request.configurationOptions.hasHealthReportingSystemType()" ng-model="options.elasticbeanstalkHealthreportingSystemSystemType.value" ng-value="\'basic\'">Basic</label> </div> </div> </div> </div> <div class="wizard-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()" ng-disabled="status">Cancel</a> <button class="btn btn-primary" ng-click="save()" ng-disabled="status">Save</button> </div> </div> </div></div>');
a.put("partials/experimental/environment/configuration/panels/instances-panel.html",'<div class="row-fluid getting-started-layout" ng-controller="ConfigurationPanelController"> <div class="span1 getting-started-icon"> <img src="/elasticbeanstalk/img/getting-started/globe.png" alt="Getting started with AWS Elastic Beanstalk"> </div> <div class="span8 mainbar form-horizontal new-form" ng-form="configurationPanelForm"> <alert></alert> <h1 class="m-bottom-20 p-top-10">Modify instances</h1> <h3 class="underline">Instance type</h3> <p class="m-bottom-15">Choose an instance type that best matches your workload requirement.</p> <div class="control-group" ng-class="{ \'input-error\': options.autoscalingLaunchconfigurationInstanceType.validationMessages.isSeverityError(), \'input-warning\': options.autoscalingLaunchconfigurationInstanceType.validationMessages.isSeverityWarning() }"> <label class="control-label">Instance type</label> <div class="controls"> <select name="instanceType" ng-model="options.autoscalingLaunchconfigurationInstanceType.value" ng-options="value for value in options.autoscalingLaunchconfigurationInstanceType.valueOptions"></select> <div class="validation-message" ng-repeat="message in options.autoscalingLaunchconfigurationInstanceType.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': options.autoscalingLaunchconfigurationImageId.validationMessages.isSeverityError(), \'input-warning\': options.autoscalingLaunchconfigurationImageId.validationMessages.isSeverityWarning() }"> <label class="control-label">AMI ID</label> <div class="controls"> <input type="text" name="imageId" ng-model="options.autoscalingLaunchconfigurationImageId.value"> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.autoscalingLaunchconfigurationImageId.validationMessages.messages"></div> </div> </div> <div ng-show="request.isUpdateRequest()"> <h3 class="underline">Amazon CloudWatch monitoring</h3> <p class="m-bottom-15">The time interval between when metrics are reported from the EC2 instances.</p> <div class="control-group"> <label class="control-label">Monitoring interval</label> <div class="controls"> <select name="monitoringInterval" ng-model="options.autoscalingLaunchconfigurationMonitoringInterval.value" ng-options="option as (option | localizeOption) for option in options.autoscalingLaunchconfigurationMonitoringInterval.valueOptions"></select> </div> </div> </div> <h3 class="m-bottom-15 underline">Root volume (boot device)</h3> <div class="control-group" ng-class="{ \'input-error\': options.autoscalingLaunchconfigurationRootVolumeType.validationMessages.isSeverityError(), \'input-warning\': options.autoscalingLaunchconfigurationRootVolumeType.validationMessages.isSeverityWarning() }"> <label class="control-label">Root volume type</label> <div class="controls"> <select name="rootVolumeType" ng-model="options.autoscalingLaunchconfigurationRootVolumeType.value" ng-options="option as (option|localize) for option in options.autoscalingLaunchconfigurationRootVolumeType.valueOptions"> <option value="">(Container default)</option> </select> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.autoscalingLaunchconfigurationRootVolumeType.validationMessages.messages"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.rootVolumeSize.$invalid, \'input-warning\': configurationPanelForm.rootVolumeSize.$error.warningMessages }"> <label class="control-label">Size</label> <div class="controls"> <div class="input-append"> <input type="number" class="input-mini" eb-validation-messages="options.autoscalingLaunchconfigurationRootVolumeSize.validationMessages" maxvalue="options.autoscalingLaunchconfigurationRootVolumeSize.getMaxValue()" minvalue="options.autoscalingLaunchconfigurationRootVolumeSize.minValue" name="rootVolumeSize" ng-disabled="options.autoscalingLaunchconfigurationRootVolumeSize.isDisabled()" ng-model-options="{ updateOn: \'blur\' }" ng-model="options.autoscalingLaunchconfigurationRootVolumeSize.value" ng-required="!options.autoscalingLaunchconfigurationRootVolumeSize.isDisabled()"> <span class="add-on">GB</span> </div> <div class="help-block">The number of gigabytes of the root volume attached to each instance.</div> <div ng-messages="configurationPanelForm.rootVolumeSize.$error"> <div class="validation-message" ng-message="minvalue">Size must be between {{options.autoscalingLaunchconfigurationRootVolumeSize.minValue}} and {{options.autoscalingLaunchconfigurationRootVolumeSize.getMaxValue()}}.</div> <div class="validation-message" ng-message="maxvalue">Size must be between {{options.autoscalingLaunchconfigurationRootVolumeSize.minValue}} and {{options.autoscalingLaunchconfigurationRootVolumeSize.getMaxValue()}}.</div> <div class="validation-message" ng-message="required">Size is required for {{options.autoscalingLaunchconfigurationRootVolumeType.value|localize}}.</div> <div class="validation-message" ng-message="number">Size must be a number.</div> </div> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.autoscalingLaunchconfigurationRootVolumeSize.validationMessages.messages"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.rootVolmeIops.$invalid, \'input-warning\': configurationPanelForm.rootVolmeIops.$error.warningMessages }"> <label class="control-label">IOPS</label> <div class="controls"> <div class="input-append"> <input type="number" class="input-mini" eb-validation-messages="options.autoscalingLaunchconfigurationRootVolumeIoPs.validationMessages" maxvalue="options.autoscalingLaunchconfigurationRootVolumeIoPs.maxValue" minvalue="options.autoscalingLaunchconfigurationRootVolumeIoPs.minValue" name="rootVolmeIops" ng-disabled="options.autoscalingLaunchconfigurationRootVolumeIoPs.isDisabled()" ng-model="options.autoscalingLaunchconfigurationRootVolumeIoPs.value" ng-required="!options.autoscalingLaunchconfigurationRootVolumeIoPs.isDisabled()"> <span class="add-on">IOPS</span> </div> <div class="help-block">Input/output operations per second for a provisioned IOPS (SSD) volume.</div> <div ng-messages="configurationPanelForm.rootVolmeIops.$error"> <div class="validation-message" ng-message="minvalue">IOPS must be between {{options.autoscalingLaunchconfigurationRootVolumeIoPs.minValue}} and {{options.autoscalingLaunchconfigurationRootVolumeIoPs.maxValue}}.</div> <div class="validation-message" ng-message="maxvalue">IOPS must be between {{options.autoscalingLaunchconfigurationRootVolumeIoPs.minValue}} and {{options.autoscalingLaunchconfigurationRootVolumeIoPs.maxValue}}.</div> <div class="validation-message" ng-message="required">IOPS is required for {{options.autoscalingLaunchconfigurationRootVolumeType.value|localize}}.</div> <div class="validation-message" ng-message="number">IOPS must be a number.</div> </div> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.autoscalingLaunchconfigurationRootVolumeIoPs.validationMessages.messages"></div> </div> </div> <div class="wizard-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()" ng-disabled="status">Cancel</a> <button class="btn btn-primary" ng-click="save()" ng-disabled="status">Save</button> </div> </div> </div></div>');
a.put("partials/experimental/environment/configuration/panels/load-balancing-panel.html",'<div class="row-fluid getting-started-layout" ng-controller="ConfigurationPanelController"> <div class="span1 getting-started-icon"> <img src="/elasticbeanstalk/img/getting-started/globe.png" alt="Getting started with AWS Elastic Beanstalk"> </div> <div class="span8 mainbar form-horizontal new-form" ng-form="configurationPanelForm"> <alert></alert> <h1 class="m-bottom-20 p-top-10">Modify load balancer</h1> <h3 class="underline">Elastic load balancer (ELB)</h3> <p class="m-bottom-15">You can configure ports and protocols for your load balancer. Traffic from your clients can be routed from any load balancer port to your instances. By default, we&rsquo;ve configured your load balancer with a standard web server on port 80.</p> <h3 class="m-bottom-15 underline">ELB listener</h3> <div class="control-group" ng-class="{ \'input-error\': options.elbLoadbalancerLoadBalancerHttpPort.validationMessages.isSeverityError(), \'input-warning\': options.elbLoadbalancerLoadBalancerHttpPort.validationMessages.isSeverityWarning() }"> <label class="control-label">Port</label> <div class="controls"> <select name="elbLoadbalancerLoadBalancerHttpPort" ng-model="options.elbLoadbalancerLoadBalancerHttpPort.value" ng-options="option as (option | localizeOption) for option in options.elbLoadbalancerLoadBalancerHttpPort.valueOptions"></select> <span class="help-block">The external facing HTTP port number to the load balancer.</span> <div class="validation-message" ng-repeat="message in options.elbLoadbalancerLoadBalancerHttpPort.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': options.elbLoadbalancerLoadBalancerPortProtocol.validationMessages.isSeverityError(), \'input-warning\': options.elbLoadbalancerLoadBalancerPortProtocol.validationMessages.isSeverityWarning() }"> <label class="control-label">Protocol</label> <div class="controls"> <select name="elbLoadbalancerLoadBalancerPortProtocol" ng-model="options.elbLoadbalancerLoadBalancerPortProtocol.value" ng-options="option for option in options.elbLoadbalancerLoadBalancerPortProtocol.valueOptions"></select> <span class="help-block">The protocol used by the listener.</span> <div class="validation-message" ng-repeat="message in options.elbLoadbalancerLoadBalancerPortProtocol.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <h3 class="m-bottom-15 underline">Secure ELB listener</h3> <div class="control-group" ng-class="{ \'input-error\': options.elbLoadbalancerLoadBalancerHttpsPort.validationMessages.isSeverityError(), \'input-warning\': options.elbLoadbalancerLoadBalancerHttpsPort.validationMessages.isSeverityWarning() }"> <label class="control-label">Port</label> <div class="controls"> <select name="elbLoadbalancerLoadBalancerHttpsPort" ng-model="options.elbLoadbalancerLoadBalancerHttpsPort.value" ng-options="option as (option | localizeOption) for option in options.elbLoadbalancerLoadBalancerHttpsPort.valueOptions"></select> <span class="help-block">The external facing HTTPS port number to the load balancer.</span> <div class="validation-message" ng-repeat="message in options.elbLoadbalancerLoadBalancerHttpsPort.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': options.elbLoadbalancerLoadBalancerSslPortProtocol.validationMessages.isSeverityError(), \'input-warning\': options.elbLoadbalancerLoadBalancerSslPortProtocol.validationMessages.isSeverityWarning() }"> <label class="control-label">Protocol</label> <div class="controls"> <select name="elbLoadbalancerLoadBalancerSslPortProtocol" ng-model="options.elbLoadbalancerLoadBalancerSslPortProtocol.value" ng-options="option for option in options.elbLoadbalancerLoadBalancerSslPortProtocol.valueOptions"></select> <span class="help-block">The protocol used by the secure listener.</span> <div class="validation-message" ng-repeat="message in options.elbLoadbalancerLoadBalancerSslPortProtocol.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': options.elbLoadbalancerSslCertificateId.validationMessages.isSeverityError(), \'input-warning\': options.elbLoadbalancerSslCertificateId.validationMessages.isSeverityWarning() }"> <label class="control-label">SSL certificate</label> <div class="controls"> <select name="elbLoadbalancerSslCertificateId" ng-model="options.elbLoadbalancerSslCertificateId.value" ng-options="cert.value as cert.displayName for cert in options.elbLoadbalancerSslCertificateId.valueObjects"></select> <div class="help-inline"> <i class="icon-spinner" click-eater ng-class="{ \'icon-spin\': options.elbLoadbalancerSslCertificateId.refreshing }" ng-click="options.elbLoadbalancerSslCertificateId.refresh()"></i> </div> <span class="help-block">The SSL certificate assigned to the secure port listener.</span> <div class="validation-message" ng-repeat="message in options.elbLoadbalancerSslCertificateId.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <h3 class="m-bottom-15 underline">Cross-zone load balancing</h3> <div class="control-group" ng-class="{ \'input-error\': options.elbLoadbalancerCrossZone.validationMessages.isSeverityError(), \'input-warning\': options.elbLoadbalancerCrossZone.validationMessages.isSeverityWarning() }"> <label class="checkbox"> <input type="checkbox" name="elbElbCrossZone" ng-model="options.elbLoadbalancerCrossZone.value">Enable load balancing across multiple AZs <div class="validation-message" ng-repeat="message in options.elbLoadbalancerCrossZone.validationMessages.messages" ng-bind-html="message.message"></div> </label> </div> <h3 class="m-bottom-15 underline">Connection draining</h3> <div class="control-group" ng-class="{ \'input-error\': options.elbPoliciesConnectionDrainingEnabled.validationMessages.isSeverityError(), \'input-warning\': options.elbPoliciesConnectionDrainingEnabled.validationMessages.isSeverityWarning() }"> <label class="checkbox"> <input type="checkbox" name="elbPoliciesConnectionDrainingEnabled" ng-model="options.elbPoliciesConnectionDrainingEnabled.value">Enable connection draining <div class="validation-message" ng-repeat="message in options.elbPoliciesConnectionDrainingEnabled.validationMessages.messages" ng-bind-html="message.message"></div> </label> </div> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.elbPoliciesConnectionDrainingTimeout.$invalid, \'input-warning\': configurationPanelForm.elbPoliciesConnectionDrainingTimeout.$error.warningMessages }"> <label class="control-label">Draining timeout</label> <div class="controls"> <div class="input-append"> <input type="number" class="input-mini" eb-validation-messages="options.elbPoliciesConnectionDrainingTimeout.validationMessages" maxvalue="options.elbPoliciesConnectionDrainingTimeout.maxValue" minvalue="options.elbPoliciesConnectionDrainingTimeout.minValue" name="elbPoliciesConnectionDrainingTimeout" ng-disabled="!options.elbPoliciesConnectionDrainingEnabled.value" ng-model="options.elbPoliciesConnectionDrainingTimeout.value" ng-model-options="{ updateOn: \'blur\' }"> <span class="add-on">seconds</span> </div> <span class="help-block">Maximum time that the load balancer maintains connections to an Amazon EC2 instance before forcibly closing connections.</span> <div ng-messages="configurationPanelForm.elbPoliciesConnectionDrainingTimeout.$error"> <div class="validation-message" ng-message="maxvalue">Timeout must be between {{options.elbPoliciesConnectionDrainingTimeout.minValue}} and {{options.elbPoliciesConnectionDrainingTimeout.maxValue}}.</div> <div class="validation-message" ng-message="minvalue">Timeout must be between {{options.elbPoliciesConnectionDrainingTimeout.minValue}} and {{options.elbPoliciesConnectionDrainingTimeout.maxValue}}.</div> <div class="validation-message" ng-message="number">Timeout must be a number.</div> </div> <div class="validation-message" ng-repeat="message in options.elbPoliciesConnectionDrainingTimeout.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <div class="wizard-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()" ng-disabled="status">Cancel</a> <button class="btn btn-primary" ng-click="save()" ng-disabled="status">Save</button> </div> </div> </div></div>');
a.put("partials/experimental/environment/configuration/panels/managed-panel.html",'<div class="row-fluid getting-started-layout" ng-controller="ConfigurationPanelController"> <div class="span1 getting-started-icon"> <img src="/elasticbeanstalk/img/getting-started/globe.png" alt="Getting started with AWS Elastic Beanstalk"> </div> <div class="span8 mainbar form-horizontal new-form" ng-form="configurationPanelForm"> <alert></alert> <h3 class="underline">Managed platform updates</h3> <p class="m-bottom-15">Enable managed platform updates to apply platform updates automatically during a weekly maintenance window that you choose. Your application stays available during the update process.</p> <div class="control-group"> <label class="control-label">Managed updates</label> <div class="controls"> <label class="checkbox"> <input type="checkbox" name="managedActionsEnabled" ng-model="options.elasticbeanstalkManagedactionsManagedActionsEnabled.value"> Enabled </label> </div> </div> <div class="control-group"> <label class="control-label">Weekly update window</label> <div class="controls"> <eb-day-time-selector ng-disabled="options.elasticbeanstalkManagedactionsPreferredStartTime.isDisabled()" ng-model="options.elasticbeanstalkManagedactionsPreferredStartTime.value"></eb-day-time-selector> {{options.elasticbeanstalkManagedactionsPreferredStartTime.getUnit()}} <br> <div class="m-top-10 help-inline" ng-show="!options.elasticbeanstalkManagedactionsPreferredStartTime.isDisabled()"> <eb-managed-update-window-message format="dddd, h:mm A" message="configuration_maintenance_window_description" value="options.elasticbeanstalkManagedactionsPreferredStartTime.value"> </eb-managed-update-window-message> </div> </div> </div> <div class="control-group"> <label class="control-label">Update level</label> <div class="controls"> <select name="updateLevel" ng-disabled="options.elasticbeanstalkManagedactionsPlatformupdateUpdateLevel.isDisabled()" ng-model="options.elasticbeanstalkManagedactionsPlatformupdateUpdateLevel.value" ng-options="option as (option | localizeOption) for option in options.elasticbeanstalkManagedactionsPlatformupdateUpdateLevel.valueOptions | orderBy"> </select> </div> </div> <div class="control-group"> <label class="control-label">Instance replacement</label> <div class="controls"> <label class="checkbox" ng-if="options.elasticbeanstalkManagedactionsPlatformupdateInstanceRefreshEnabled"> <input type="checkbox" name="instanceRefreshEnabled" ng-disabled="options.elasticbeanstalkManagedactionsPlatformupdateInstanceRefreshEnabled.isDisabled()" ng-model="options.elasticbeanstalkManagedactionsPlatformupdateInstanceRefreshEnabled.value"> <span class="help-inline">If enabled, an instance replacement will be scheduled if no other updates are available.</span> </label> <div class="p-top-5 help-inline" ng-if="!options.elasticbeanstalkManagedactionsPlatformupdateInstanceRefreshEnabled">Instance replacement requires a 2.1.0 or newer platform version.</div> </div> </div> <div class="wizard-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()" ng-disabled="status">Cancel</a> <button class="btn btn-primary" ng-click="save()" ng-disabled="status">Save</button> </div> </div> </div></div>');
a.put("partials/experimental/environment/configuration/panels/notifications-panel.html",'<div class="row-fluid getting-started-layout" ng-controller="ConfigurationPanelController"> <div class="span1 getting-started-icon"> <img src="/elasticbeanstalk/img/getting-started/globe.png" alt="Getting started with AWS Elastic Beanstalk"> </div> <div class="span8 mainbar form-horizontal new-form" ng-form="configurationPanelForm"> <alert></alert> <h1 class="m-bottom-20 p-top-10">Modify notifications</h1> <h3 class="underline">Email notifications</h3> <p class="m-bottom-15">Enter an email address to receive email notifications for important events from your environment. <a eb-docs-href="/console/elasticbeanstalk/config-notifications">Learn more</a></p> <div class="control-group"> <label class="control-label">Email</label> <div class="controls"> <input type="text" name="notificationEndpoint" ng-model="options.elasticbeanstalkSnsTopicsNotificationEndpoint.value" placeholder="user@example.com"> </div> </div> <div class="wizard-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()" ng-disabled="status">Cancel</a> <button class="btn btn-primary" ng-click="save()" ng-disabled="status">Save</button> </div> </div> </div></div>');
a.put("partials/experimental/environment/configuration/panels/permissions-panel.html",'<div class="row-fluid getting-started-layout" ng-controller="ConfigurationPanelController"> <div class="span1 getting-started-icon"> <img src="/elasticbeanstalk/img/getting-started/globe.png" alt="Getting started with AWS Elastic Beanstalk"> </div> <div class="span8 mainbar form-horizontal new-form" ng-form="configurationPanelForm"> <alert></alert> <h1 class="m-bottom-20 p-top-10">Modify security</h1> <h3 class="m-bottom-15 underline">Service role</h3> <div class="control-group" ng-class="{ \'input-error\': options.elasticbeanstalkEnvironmentServiceRole.validationMessages.isSeverityError(), \'input-warning\': options.elasticbeanstalkEnvironmentServiceRole.validationMessages.isSeverityWarning() }"> <label class="control-label">Service role</label> <div class="controls"> <select name="serviceRole" ng-disabled="options.elasticbeanstalkEnvironmentServiceRole.refreshing" ng-model="options.elasticbeanstalkEnvironmentServiceRole.value" ng-options="option for option in options.elasticbeanstalkEnvironmentServiceRole.valueOptions"> <option ng-show="!options.elasticbeanstalkEnvironmentServiceRole.hasDefaultRole()" value="%create-default-role-value%">Create new role</option> </select> <div class="help-inline"> <i class="icon-spinner" click-eater ng-class="{\'icon-spin\': options.elasticbeanstalkEnvironmentServiceRole.refreshing }" ng-click="options.elasticbeanstalkEnvironmentServiceRole.refresh()"></i> </div> <div class="validation-message" ng-repeat="message in options.elasticbeanstalkEnvironmentServiceRole.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <h3 class="m-bottom-15 underline">Virtual machine permissions</h3> <div class="control-group" ng-class="{ \'input-error\': options.autoscalingLaunchconfigurationEc2KeyName.validationMessages.isSeverityError(), \'input-warning\': options.autoscalingLaunchconfigurationEc2KeyName.validationMessages.isSeverityWarning() }"> <label class="control-label">EC2 key pair</label> <div class="controls"> <select name="ec2KeyName" ng-disabled="options.autoscalingLaunchconfigurationEc2KeyName.refreshing" ng-model="options.autoscalingLaunchconfigurationEc2KeyName.value" ng-options="option for option in options.autoscalingLaunchconfigurationEc2KeyName.valueOptions"> <option value="">-- Choose a key pair --</option> </select> <div class="help-inline"> <i class="icon-spinner" click-eater ng-class="{\'icon-spin\': options.autoscalingLaunchconfigurationEc2KeyName.refreshing }" ng-click="options.autoscalingLaunchconfigurationEc2KeyName.refresh()"></i> </div> <div class="validation-message" ng-repeat="message in options.autoscalingLaunchconfigurationEc2KeyName.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': options.autoscalingLaunchconfigurationIamInstanceProfile.validationMessages.isSeverityError(), \'input-warning\': options.autoscalingLaunchconfigurationIamInstanceProfile.validationMessages.isSeverityWarning() }"> <label class="control-label">IAM instance profile</label> <div class="controls"> <select name="iamInstanceProfile" ng-disabled="options.autoscalingLaunchconfigurationIamInstanceProfile.refreshing" ng-model="options.autoscalingLaunchconfigurationIamInstanceProfile.value" ng-options="option for option in options.autoscalingLaunchconfigurationIamInstanceProfile.valueOptions"> <option ng-show="!options.autoscalingLaunchconfigurationIamInstanceProfile.hasDefaultRole()" value="%create-default-role-value%">Create instance profile</option> </select> <div class="help-inline"> <i class="icon-spinner" click-eater ng-class="{\'icon-spin\': options.autoscalingLaunchconfigurationIamInstanceProfile.refreshing }" ng-click="options.autoscalingLaunchconfigurationIamInstanceProfile.refresh()"></i> </div> <div class="validation-message" ng-repeat="message in options.autoscalingLaunchconfigurationIamInstanceProfile.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <div class="wizard-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()" ng-disabled="status">Cancel</a> <button class="btn btn-primary" ng-click="save()" ng-disabled="status">Save</button> </div> </div> </div></div>');
a.put("partials/experimental/environment/configuration/panels/rds-panel.html",'<div class="row-fluid getting-started-layout" ng-controller="RdsPanelController"> <div class="span1 getting-started-icon"> <img src="/elasticbeanstalk/img/getting-started/globe.png" alt="Getting started with AWS Elastic Beanstalk"> </div> <div class="span8 mainbar form-horizontal new-form" ng-form="configurationPanelForm"> <alert></alert> <h1 class="m-bottom-20 p-top-10">Modify database</h1> <p class="m-bottom-15 p-top-10">Add an Amazon RDS SQL database to your environment for development and testing. AWS Elastic Beanstalk provides connection information to your instances by setting environment properties for the database hostname, username, password, table name, and port. When you add a database to your environment, its lifecycle is tied to your environment\'s.<br>For production environments, you can configure your instances to connect to an external database. <a eb-docs-href="/console/elasticbeanstalk/config-dbs">Learn more</a></p> <h3 class="underline">Database settings</h3> <p class="m-bottom-15">Choose an engine and instance type for your environment\'s database.</p> <div class="control-group" ng-if="request.isUpdateRequest() && dbEndpoint"> <label class="control-label">Endpoint</label> <div class="controls"> <p class="control-text"> <a target="_blank" ng-href="{{dbEndpoint.path}}">{{dbEndpoint.label}} <i class="icon-external-link"></i></a> </p> </div> </div> <eb-control-group validation-messages="options.rdsDbinstanceDbEngine.validationMessages"> <label class="control-label">Engine</label> <div class="controls"> <select name="dbEngine" ng-change="engineChange()" ng-disabled="options.rdsDbinstanceDbEngine.isDisabled() || status" ng-model="options.rdsDbinstanceDbEngine.value" ng-options="option for option in options.rdsDbinstanceDbEngine.valueOptions track by option"> </select> </div> </eb-control-group> <eb-control-group validation-messages="options.rdsDbinstanceDbEngineVersion.validationMessages"> <label class="control-label">Engine version</label> <div class="controls"> <select name="dbEngineVersion" ng-change="engineVersionChange()" ng-disabled="options.rdsDbinstanceDbEngineVersion.isDisabled() || status" ng-model="options.rdsDbinstanceDbEngineVersion.value" ng-options="option for option in options.rdsDbinstanceDbEngineVersion.valueOptions track by option"> </select> </div> </eb-control-group> <eb-control-group validation-messages="options.rdsDbinstanceDbInstanceClass.validationMessages"> <label class="control-label">Instance class</label> <div class="controls"> <select name="dbInstaceClass" ng-disabled="options.rdsDbinstanceDbInstanceClass.isDisabled() || status" ng-model="options.rdsDbinstanceDbInstanceClass.value" ng-options="option for option in options.rdsDbinstanceDbInstanceClass.valueOptions track by option"> </select> </div> </eb-control-group> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.allocatedStorage.$invalid, \'input-warning\': configurationPanelForm.allocatedStorage.$error.warningMessages }"> <label class="control-label">Storage</label> <div class="controls"> <div class="input-append"> <input type="number" class="input-mini" eb-validation-messages="options.rdsDbinstanceDbAllocatedStorage.validationMessages" maxvalue="options.rdsDbinstanceDbAllocatedStorage.maxValue" minvalue="options.rdsDbinstanceDbAllocatedStorage.minValue" name="allocatedStorage" ng-model="options.rdsDbinstanceDbAllocatedStorage.value" ng-model-options="{ updateOn: \'blur\' }"> <span class="add-on">GB</span> </div> <div class="help-block">Choose a number between {{options.rdsDbinstanceDbAllocatedStorage.minValue}} GB and {{options.rdsDbinstanceDbAllocatedStorage.maxValue}} GB.</div> <div ng-messages="configurationPanelForm.allocatedStorage.$error"> <div class="validation-message" ng-message="maxvalue">Storage size must be less than {{options.rdsDbinstanceDbAllocatedStorage.maxValue}} GB.</div> <div class="validation-message" ng-message="minvalue">Storage size must be greater than {{options.rdsDbinstanceDbAllocatedStorage.minValue}} GB.</div> <div class="validation-message" ng-message="number">Allocated storage must be a number.</div> </div> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.rdsDbinstanceDbAllocatedStorage.validationMessages.messages"></div> </div> </div> <eb-control-group validation-messages="options.rdsDbinstanceDbUser.validationMessages"> <label class="control-label">Username</label> <div class="controls"> <input type="text" name="username" ng-model="options.rdsDbinstanceDbUser.value"> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.rdsDbinstanceDbUser.validationMessages.messages"></div> </div> </eb-control-group> <eb-control-group validation-messages="options.rdsDbinstanceDbPassword.validationMessages"> <label class="control-label">Password</label> <div class="controls"> <input type="password" name="password" ng-model="options.rdsDbinstanceDbPassword.value"> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.rdsDbinstanceDbPassword.validationMessages.messages"></div> </div> </eb-control-group> <eb-control-group validation-messages="options.rdsDbinstanceDbDeletionPolicy.validationMessages"> <label class="control-label">Retention</label> <div class="controls"> <select name="deletionPolicy" ng-model="options.rdsDbinstanceDbDeletionPolicy.value"> <option value="Snapshot">Create snapshot</option> <option value="Delete">Delete</option> </select> <div class="help-block">When you terminate your environment, your database instance is also terminated. Choose <strong>Create snapshot</strong> to save a snapshot of the database prior to termination. Snapshots incur standard storage charges.</div> </div> </eb-control-group> <eb-control-group validation-messages="options.rdsDbinstanceMultiAzDatabase.validationMessages"> <label class="control-label">Availability</label> <div class="controls"> <select name="multiAzDatabase" ng-model="options.rdsDbinstanceMultiAzDatabase.value" ng-options="(option ? \'High (Multi-AZ)\' : \'Low (one AZ)\') for option in [true, false]"> <option ng-show="false" value=""></option> </select> </div> </eb-control-group> <div class="wizard-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()" ng-disabled="status">Cancel</a> <button class="btn btn-primary" ng-click="save()" ng-disabled="status">Save</button> </div> </div> </div></div>');
a.put("partials/experimental/environment/configuration/panels/software-panel.html",'<div class="row-fluid getting-started-layout" ng-controller="SoftwarePanelController"> <div class="span1 getting-started-icon"> <img src="/elasticbeanstalk/img/getting-started/globe.png" alt="Getting started with AWS Elastic Beanstalk"> </div> <div class="span8 mainbar form-horizontal new-form" ng-form="configurationPanelForm"> <alert></alert> <h1 class="m-bottom-20 p-top-10">Modify software</h1> <h3 class="underline">Container Options</h3> <p class="m-bottom-15">The following settings control container behavior and let you pass key-value pairs in as OS environment variables. <a eb-docs-href="/console/elasticbeanstalk/config-containers">Learn more</a></p> <div class="control-group" ng-show="request.isUpdateRequest() && options.elasticbeanstalkContainerNodejsNodeVersion"> <label class="control-label">Node.js version</label> <div class="controls"> <select class="input-large" name="nodeVersion" ng-model="options.elasticbeanstalkContainerNodejsNodeVersion.value" ng-options="option for option in options.elasticbeanstalkContainerNodejsNodeVersion.valueOptions" ng-show="options.elasticbeanstalkContainerNodejsNodeVersion.isEnum()"> </select> <input type="text" name="nodeVersion" ng-hide="options.elasticbeanstalkContainerNodejsNodeVersion.isEnum()" ng-model="options.elasticbeanstalkContainerNodejsNodeVersion.value"> </div> </div> <div class="control-group" ng-show="request.isUpdateRequest() && options.elasticbeanstalkContainerNodejsNodeCommand"> <label class="control-label">Node command</label> <div class="controls"> <input type="text" name="nodeCommand" ng-model="options.elasticbeanstalkContainerNodejsNodeCommand.value"> <div class="help-block">Command to start the Node.js application. If an empty string is specified, app.js is used, then server.js, then "npm start" in that order.</div> </div> </div> <div class="control-group" ng-show="request.isUpdateRequest() && options.elasticbeanstalkContainerNodejsProxyServer"> <label class="control-label">Proxy server</label> <div class="controls"> <select class="input-small" name="proxyServer" ng-model="options.elasticbeanstalkContainerNodejsProxyServer.value" ng-options="option as (option | localizeOption) for option in options.elasticbeanstalkContainerNodejsProxyServer.valueOptions"></select> <div class="help-inline">Specifies which proxy server to be used for client connections. <span ng-show="showProxyServerWarning()">Static file mappings and gzip compression will not take effect if the proxy server is set to "None".</span></div> </div> </div> <div class="control-group" ng-show="request.isUpdateRequest() && options.elasticbeanstalkContainerNodejsGzipCompression"> <label class="control-label">Gzip compression</label> <div class="controls"> <label class="checkbox"> <input type="checkbox" name="gzipCompression" ng-disabled="options.elasticbeanstalkContainerNodejsGzipCompression.isDisabled()" ng-model="options.elasticbeanstalkContainerNodejsGzipCompression.value"> Enabled </label> </div> </div> <eb-control-group ng-show="request.isUpdateRequest() && options.elasticbeanstalkContainerPythonWsgiPath" validation-messages=options.elasticbeanstalkContainerPythonWsgiPath.validationMessages> <label class="control-label">WSGIPath</label> <div class="controls"> <input type="text" name="pythonWsgiPath" ng-model="options.elasticbeanstalkContainerPythonWsgiPath.value"> <div class="help-block">The file that contains the WSGI application.</div> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.elasticbeanstalkContainerPythonWsgiPath.validationMessages.messages"></div> </div> </eb-control-group> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.pythonNumProcesses.$invalid, \'input-warning\': configurationPanelForm.pythonNumProcesses.$error.warningMessages }" ng-if="request.isUpdateRequest() && options.elasticbeanstalkContainerPythonNumProcesses"> <label class="control-label">NumProcesses</label> <div class="controls"> <input type="number" class="input-small" eb-validation-messages="options.elasticbeanstalkContainerPythonNumProcesses.validationMessages" minvalue="options.elasticbeanstalkContainerPythonNumProcesses.minValue" name="pythonNumProcesses" ng-disabled="options.elasticbeanstalkContainerPythonNumProcesses.isDisabled()" ng-model="options.elasticbeanstalkContainerPythonNumProcesses.value" ng-model-options="{ updateOn: \'blur\' }" ng-required="!options.elasticbeanstalkContainerPythonNumProcesses.isDisabled()"> <div class="help-block">The number of daemon processes that should be started for the process group.</div> <div ng-messages="configurationPanelForm.pythonNumProcesses.$error"> <div class="validation-message" ng-message="minvalue">NumProcesses can\'t be negative.</div> <div class="validation-message" ng-message="required">NumProcesses is required.</div> <div class="validation-message" ng-message="number">NumProcesses must be a number.</div> </div> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.elasticbeanstalkContainerPythonNumProcesses.validationMessages.messages"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': configurationPanelForm.pythonNumThreads.$invalid, \'input-warning\': configurationPanelForm.pythonNumThreads.$error.warningMessages }" ng-if="request.isUpdateRequest() && options.elasticbeanstalkContainerPythonNumThreads"> <label class="control-label">NumThreads</label> <div class="controls"> <input type="number" class="input-small" eb-validation-messages="options.elasticbeanstalkContainerPythonNumThreads.validationMessages" minvalue="options.elasticbeanstalkContainerPythonNumThreads.minValue" name="pythonNumThreads" ng-disabled="options.elasticbeanstalkContainerPythonNumThreads.isDisabled()" ng-model="options.elasticbeanstalkContainerPythonNumThreads.value" ng-model-options="{ updateOn: \'blur\' }" ng-required="!options.elasticbeanstalkContainerPythonNumThreads.isDisabled()"> <div class="help-block">The number of threads to create to handle requests in each daemon process.</div> <div ng-messages="configurationPanelForm.pythonNumThreads.$error"> <div class="validation-message" ng-message="minvalue">NumThreads can\'t be negative.</div> <div class="validation-message" ng-message="required">NumThreads is required.</div> <div class="validation-message" ng-message="number">NumThreads must be a number.</div> </div> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.elasticbeanstalkContainerPythonNumThreads.validationMessages.messages"></div> </div> </div> <eb-control-group validation-messages="options.elasticbeanstalkContainerTomcatJvmoptionsXms.validationMessages" ng-show="request.isUpdateRequest() && options.elasticbeanstalkContainerTomcatJvmoptionsXms"> <label class="control-label">Initial JVM heap size (Xms)</label> <div class="controls"> <input type="text" name="xms" ng-model="options.elasticbeanstalkContainerTomcatJvmoptionsXms.value"> <div class="help-block">Must be a multiple of 1024 greater than 2MB. Use \'k\' or \'K\' for kilobytes, or \'m\' or \'M\' for megabytes.</div> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.elasticbeanstalkContainerTomcatJvmoptionsXms.validationMessages.messages"></div> </div> </eb-control-group> <eb-control-group validation-messages="options.elasticbeanstalkContainerTomcatJvmoptionsXmx.validationMessages" ng-show="request.isUpdateRequest() && options.elasticbeanstalkContainerTomcatJvmoptionsXmx"> <label class="control-label">Max JVM heap size (Xmx)</label> <div class="controls"> <input type="text" name="xmx" ng-model="options.elasticbeanstalkContainerTomcatJvmoptionsXmx.value"> <div class="help-block">Must be a multiple of 1024 greater than 2MB. Use \'k\' or \'K\' for kilobytes, or \'m\' or \'M\' for megabytes.</div> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.elasticbeanstalkContainerTomcatJvmoptionsXmx.validationMessages.messages"></div> </div> </eb-control-group> <eb-control-group validation-messages="options.elasticbeanstalkContainerTomcatJvmoptionsXxMaxPermSize.validationMessages" ng-show="request.isUpdateRequest() && options.elasticbeanstalkContainerTomcatJvmoptionsXxMaxPermSize"> <label class="control-label">XX:MaxPermSize</label> <div class="controls"> <input type="text" name="xxMaxPermSize" ng-model="options.elasticbeanstalkContainerTomcatJvmoptionsXxMaxPermSize.value"> <div class="help-block">The maximum JVM permanent generation size.</div> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.elasticbeanstalkContainerTomcatJvmoptionsXxMaxPermSize.validationMessages.messages"></div> </div> </eb-control-group> <eb-control-group validation-messages="options.elasticbeanstalkContainerTomcatJvmoptionsJvmOptions.validationMessages" ng-show="request.isUpdateRequest() && options.elasticbeanstalkContainerTomcatJvmoptionsJvmOptions"> <label class="control-label">JVM options</label> <div class="controls"> <input type="text" name="jvmOptions" ng-model="options.elasticbeanstalkContainerTomcatJvmoptionsJvmOptions.value"> <div class="help-block">Additional options to append to the JVM arguments at startup.</div> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.elasticbeanstalkContainerTomcatJvmoptionsJvmOptions.validationMessages.messages"></div> </div> </eb-control-group> <div class="control-group" ng-show="request.isUpdateRequest() && options.elasticbeanstalkEnvironmentProxyProxyServer"> <label class="control-label">Proxy server</label> <div class="controls"> <select class="input-small" name="proxyServer" ng-model="options.elasticbeanstalkEnvironmentProxyProxyServer.value" ng-options="option as (option | localizeOption) for option in options.elasticbeanstalkEnvironmentProxyProxyServer.valueOptions"></select> <div class="help-inline">Specifies which proxy server to be used for client connections. <span ng-show="showProxyServerWarning()">Static file mappings and gzip compression will not take effect if the proxy server is set to "None".</span></div> </div> </div> <div class="control-group" ng-show="requestion.isUpdateRequest() && options.elasticbeanstalkEnvironmentProxyGzipCompression"> <label class="control-label">Gzip compression</label> <div class="controls"> <label class="checkbox"> <input type="checkbox" name="gzipCompression" ng-disabled="options.elasticbeanstalkEnvironmentProxyGzipCompression.isDisabled()" ng-model="options.elasticbeanstalkEnvironmentProxyGzipCompression.value"> Enabled </label> </div> </div> <div ng-show="options.elasticbeanstalkXrayXrayEnabled"> <h3 class="m-bottom-15 underline">AWS X-Ray</h3> <div class="control-group"> <label class="control-label">X-Ray daemon</label> <div class="controls"> <label class="checkbox"> <input type="checkbox" name="xrayEnabled" ng-model="options.elasticbeanstalkXrayXrayEnabled.value"> Enabled <span class="help-inline">(Service charges may apply.)</span> </label> </div> </div> </div> <div ng-show="options.elasticbeanstalkHostmanagerLogPublicationControl"> <h3 class="underline">S3 log storage</h3> <p class="m-bottom-15">Configure the instances in your environment to upload rotated logs to Amazon S3. <a eb-docs-href="/console/elasticbeanstalk/config-containers">Learn more</a></p> <div class="control-group"> <label class="control-label">Rotate logs</label> <div class="controls"> <label class="checkbox"> <input type="checkbox" name="logPublication" ng-model="options.elasticbeanstalkHostmanagerLogPublicationControl.value"> Enabled <span class="help-inline">(Standard S3 charges apply.)</span> </label> </div> </div> </div> <div ng-show="options.elasticbeanstalkCloudwatchLogsStreamLogs"> <h3 class="underline">CloudWatch logs</h3> <p class="m-bottom-15">Configure the instances in your environment to stream logs to CloudWatch. You can set the retention to up to ten years and configure Elastic Beanstalk to delete the logs when you terminate your environment.</p> <div class="control-group" ng-show="request.isUpdateRequest() && request.configurationOptions.isLogStreamingEnabled()"> <label class="control-label">Log Group</label> <div class="controls"> <p class="control-text"> <a ng-href="{{cloudwatchEndpoint.path}}" target="_blank">{{cloudwatchEndpoint.label}}</a> </p> </div> </div> <div class="control-group"> <label class="control-label">Log streaming</label> <div class="controls"> <label class="checkbox"> <input type="checkbox" name="streamLogs" ng-model="options.elasticbeanstalkCloudwatchLogsStreamLogs.value"> Enabled <span class="help-inline">(Standard CloudWatch charges apply.)</span> </label> </div> </div> <eb-control-group validation-messages="options.elasticbeanstalkCloudwatchLogsRetentionInDays.validationMessages"> <label class="control-label">Retention</label> <div class="controls"> <select name="retentionInDays" ng-disabled="options.elasticbeanstalkCloudwatchLogsRetentionInDays.isDisabled()" ng-model="options.elasticbeanstalkCloudwatchLogsRetentionInDays.value" ng-options="option as option for option in options.elasticbeanstalkCloudwatchLogsRetentionInDays.valueOptions" style="width:60px;"> </select> days <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.elasticbeanstalkCloudwatchLogsRetentionInDays.validationMessages.messages"></div> </div> </eb-control-group> <eb-control-group validation-messages="options.elasticbeanstalkCloudwatchLogsDeleteOnTerminate.validationMessages"> <label class="control-label">Lifecycle</label> <div class="controls"> <select class="input-large" name="deleteOnTerminate" ng-disabled="options.elasticbeanstalkCloudwatchLogsDeleteOnTerminate.isDisabled()" ng-model="options.elasticbeanstalkCloudwatchLogsDeleteOnTerminate.value" ng-options="(option ? \'Delete logs upon termination\' : \'Keep logs after terminating environment\') for option in [false, true]"> <option ng-show="false" value=""></option> </select> </div> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.elasticbeanstalkCloudwatchLogsDeleteOnTerminate.validationMessages.messages"></div> </eb-control-group> </div> <div ng-show="request.configurationOptions.hasStaticFiles()"> <h3 class="underline">Static files</h3> <p>Configure the proxy server to serve static files to reduce the request load on your application. <a eb-docs-href="/console/elasticbeanstalk/nodejs-static-files">Learn more</a></p> <table class="statics-table" data-table="resource" ng-init="staticFiles = request.configurationOptions.getStaticFilesCollection()"> <colgroup> <col> <col class="input-column"> </colgroup> <thead> <tr data-table-header="togglable"> <th class="statics-path first"><span class="colname">Path <span class="type-weight-thin">(Example: /assets)</span></span></th> <th class="statics-directory last"><span class="colname">Directory <span class="type-weight-thin">(Example: /static/assets)</span></span></th> </tr> </thead> <tbody> <tr ng-class="{ \'table-input-disabled\': staticFiles.isDisabled(), \'table-input-error\': configurationPanelForm.staticFilesPath{{$index}}.$invalid }" ng-repeat-start="option in staticFiles.collection track by $index"> <td> <input type="text" name="staticFilesPath{{$index}}" ng-blur="staticFiles.validate()" ng-disabled="staticFiles.isDisabled()" ng-keyup="staticFiles.add(\'\', \'\')" ng-model="option.optionName" unique-among="staticFiles.getKeys()"> </td> <td> <input type="text" eb-validation-messages="option.validationMessages" ng-blur="staticFiles.validate()" ng-disabled="staticFiles.isDisabled()" ng-model="option.value"> <span class="row-action type-size-big color-text-mid-grey" ng-hide="option.isBlank() || staticFiles.isDisabled()"> <i class="icon-remove" ng-click="staticFiles.removeByIndex($index)"></i> </span> </td> </tr> <tr class="table-input-error validation-message" ng-repeat-end ng-show="configurationPanelForm.staticFilesPath{{$index}}.$invalid"> <td colspan="2"> <div class="text-error" ng-show="configurationPanelForm.staticFilesPath{{$index}}.$error.duplicate">Name must be unique.</div> <div class="text-error" ng-bind-html="message.message" ng-repeat="message in option.validationMessages.messages"></div> </td> </tr> </tbody> </table> </div> <h3 class="underline">Environment properties</h3> <p>The following properties are passed in the application as environment properties. <a eb-docs-href="/console/elasticbeanstalk/config-containers">Learn more</a></p> <table class="properties-table" data-table="resource" ng-init="environmentVariables = request.configurationOptions.collections.elasticbeanstalkApplicationEnvironment"> <colgroup> <col> <col class="input-column"> </colgroup> <thead> <tr data-table-header="togglable"> <th class="statics-path first"><span class="colname">Name</span></th> <th class="statics-directory last"><span class="colname">Value</span></th> </tr> </thead> <tbody> <tr ng-class="{ \'table-input-error\': configurationPanelForm.environmentVariablesName{{$index}}.$invalid }" ng-repeat-start="option in environmentVariables.collection track by $index"> <td> <input type="text" name="environmentVariablesName{{$index}}" ng-blur="environmentVariables.validate()" ng-keyup="environmentVariables.add(\'\', \'\')" ng-model="option.optionName" unique-among="environmentVariables.getKeys()"> </td> <td> <input type="text" eb-validation-messages="option.validationMessages" ng-blur="environmentVariables.validate()" ng-model="option.value"> <span class="row-action type-size-big color-text-mid-grey" ng-hide="option.isBlank()"> <i class="icon-remove" ng-click="environmentVariables.removeByIndex($index)"></i> </span> </td> </tr> <tr class="table-input-error validation-message" ng-repeat-end ng-show="configurationPanelForm.environmentVariablesName{{$index}}.$invalid"> <td colspan="2"> <div class="text-error" ng-show="configurationPanelForm.environmentVariablesName{{$index}}.$error.duplicate">Name must be unique.</div> <div class="text-error" ng-bind-html="message.message" ng-repeat="message in option.validationMessages.messages"></div> </td> </tr> </tbody> </table> <div class="wizard-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()" ng-disabled="status">Cancel</a> <button class="btn btn-primary" ng-click="save()" ng-disabled="status">Save</button> </div> </div> </div></div>');
a.put("partials/experimental/environment/configuration/panels/tags-panel.html",'<div class="row-fluid getting-started-layout" ng-controller="TagsPanelController"> <div class="span1 getting-started-icon"> <img src="/elasticbeanstalk/img/getting-started/globe.png" alt="Getting started with AWS Elastic Beanstalk"> </div> <div class="span8 mainbar form-horizontal new-form" ng-form="configurationPanelForm"> <alert></alert> <h1 class="m-bottom-20 p-top-10">Modify tags</h1> <p class="m-bottom-15">Apply up to {{request.tags.max}} tags to the resources in your environment in addition to the default tags.</p> <table class="tags-table" data-table="resource" ng-init="request.configurationOptions.environmentVariables.addBlank()"> <thead> <tr class="tags-control-header-row" data-table-header="togglable"> <th class="first"><span class="colname">Key <span class="limit">(128 characters maximum)</span></span></th> <th class="last"><span class="colname">Value <span class="limit">(256 characters maximum)</span></span></th> </tr> </thead> <tbody> <tr ng-class="{ \'table-input-error\': !tag.errors.isEmpty() }" ng-form="tagRowForm" ng-repeat-start="tag in request.tags.collection track by $index"> <td> <input type="text" class="input-xlarge" name="tagKey" ng-blur="request.tags.validate()" ng-keyup="request.tags.addBlankTag()" ng-maxlength="128" ng-model="tag.key" onclick="this.select()"> </td> <td> <input type="text" class="input-xlarge" name="tagValue" ng-blur="request.tags.validate()" ng-keyup="request.tags.addBlankTag()" ng-maxlength="256" ng-model="tag.value" onclick="this.select()"> <span class="row-action type-size-big color-text-mid-grey" ng-hide="tag.isBlank()"><i class="icon-remove" aria-label="Remove tag" ng-click="request.tags.remove($index) && request.tags.validate()" title="Remove tag"></i></span> </td> </tr> <tr class="table-input-error validation-message" ng-repeat-end ng-show="!tag.errors.isEmpty()"> <td colspan="2"> <div class="text-error" ng-show="tagRowForm.tagKey.$error.maxlength">Tag keys can\'t be longer than 128 characters.</div> <div class="text-error" ng-show="tagRowForm.tagValue.$error.maxlength">Tag values can\'t be longer than 256 characters.</div> <div class="text-error" ng-repeat="error in tag.errors.fullMessages()">{{error}}</div> </td> </tr> </tbody> </table> <p class="help-inline">{{request.tags.max - request.tags.length + request.tags.blanks().length}} remaining</p> <div class="wizard-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()" ng-disabled="status">Cancel</a> <button class="btn btn-primary" ng-click="save()" ng-disabled="status">Save</button> </div> </div> </div></div>');
a.put("partials/experimental/environment/configuration/panels/unknown-panel.html",'<div ng-controller="ConfigurationPanelController"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal" ng-click="cancel()">&times;</button> <h3>Unknown settings</h3> </div> <div class="modal-body"> <div class="row-fluid form-horizontal new-form"> <div class="span12"> <p>The following settings are new to AWS Elastic Beanstalk. Support is limited and should be considered experimental.</p> </div> </div> </div> <div class="modal-footer text-left"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()" ng-disabled="status">Cancel</a> <button class="btn btn-primary" ng-click="save()" ng-disabled="status">Save</button> </div> </div></div>');
a.put("partials/experimental/environment/configuration/panels/vpc-panel.html",'<div class="row-fluid getting-started-layout" ng-controller="VpcPanelController"> <div class="span1 getting-started-icon"> <img src="/elasticbeanstalk/img/getting-started/globe.png" alt="Getting started with AWS Elastic Beanstalk"> </div> <div class="span8 mainbar form-horizontal new-form" ng-form="configurationPanelForm"> <alert></alert> <h1 class="m-bottom-20 p-top-10">Modify network</h1> <h3 class="underline">Virtual private cloud (VPC)</h3> <p class="m-bottom-15">Launch your environment in a custom VPC instead of the default VPC. You can create a VPC and subnets in the VPC management console. <a eb-docs-href="/console/elasticbeanstalk/vpc">Learn more</a></p> <eb-control-group validation-messages="options.ec2VpcVpcId.validationMessages"> <label class="control-label">VPC</label> <div class="controls"> <select class="input-large" name="vpc" ng-disabled="options.ec2VpcVpcId.isDisabled()" ng-model="options.ec2VpcVpcId.value" ng-options="vpc.value as (vpc.isDefault ? vpc.label + \' (default)\' : vpc.label) for vpc in options.ec2VpcVpcId.valueObjects | orderBy: [\'-isDefault\',\'label\']"> <option value="" ng-if="!options.ec2VpcVpcId.hasDefaultVpc()" disabled>-- Choose a VPC --</option> </select> <div class="help-inline"> <i class="icon-spinner" click-eater ng-click="refresh()"></i> </div> <div class="help-block" ng-show="options.ec2VpcVpcId.hasDefaultVpc()"><a target="_blank" ng-href="{{vpcDashboardUrl}}">Create custom VPC</a></div> <div class="help-block" ng-show="!options.ec2VpcVpcId.hasDefaultVpc()">Your account doesn\u2019t have a default VPC for this region. <a target="_blank" ng-href="{{createDefaultVpcUrl}}">Create default VPC</a></div> <div class="validation-message" ng-repeat="message in options.ec2VpcVpcId.validationMessages.messages" ng-bind-html="message.message"></div> </div> </eb-control-group> <div ng-if="request.configurationOptions.isLoadBalanced()"> <h3 class="underline">Load balancer settings</h3> <p class="m-bottom-15">Assign your load balancer to a subnet in each Availability Zone (AZ) in which your application runs. For a publically accessible application, set <strong>Visibility</strong> to <strong>Public</strong> and choose public subnets.</p> <div class="control-group" ng-class="{ \'input-error\': options.ec2VpcElbScheme.validationMessages.isSeverityError() }"> <label class="control-label">Visibility</label> <div class="controls"> <select class="input-large" name="elbScheme" ng-model="options.ec2VpcElbScheme.value"> <option value="public">Public</option> <option value="internal">Internal</option> </select> <div class="help-block">Make your load balancer internal if your application serves requests only from connected VPCs. Public load balancers serve requests from the Internet.</div> <div class="validation-message" ng-repeat="message in options.ec2VpcElbScheme.validationMessages.messages" ng-bind-html="message.message"></div> </div> </div> <h4>Load balancer subnets</h4> <table class="subnet-selection-table m-bottom-15" data-table="resource" eb-rowspan-hover ng-class="{ \'input-error\': options.ec2VpcElbSubnets.validationMessages.isSeverityError(), \'input-warning\': options.ec2VpcElbSubnets.validationMessages.isSeverityWarning() }"> <thead> <tr data-table-header="togglable"> <th class="selection"></th> <th class="availability-zone">Availability Zone</th> <th class="subnet">Subnet</th> <th class="cidr">CIDR</th> <th class="name">Name</th> </tr> </thead> <tfoot ng-show="options.ec2VpcElbSubnets.validationMessages.messages.length"> <tr> <td colspan="5"> <div class="validation-message" ng-repeat="message in options.ec2VpcElbSubnets.validationMessages.messages" ng-bind-html="message.message"></div> </td> </tr> </tfoot> <tbody ng-repeat="az in options.ec2VpcElbSubnets.getByVpc(options.ec2VpcVpcId.value) | orderBy:\'label\'"> <tr class="subnet-row" ng-click="options.ec2VpcElbSubnets.toggleSelection(subnet.value)" ng-repeat="subnet in az.subnets | orderBy:\'cidr\' track by $index"> <td class="selection"> <label><input type="checkbox" name="subnets[]" ng-checked="options.ec2VpcElbSubnets.value.indexOf(subnet.value) > -1" ng-disabled="options.ec2VpcElbSubnets.isDisabled()" value="{{subnet.value}}"></label> </td> <td class="availability-zone" ng-if="$index === 0" rowspan="{{az.subnets.length}}"><strong>{{az.label}}</strong></td> <td class="subnet"><span>{{subnet.value}}</span></td> <td class="cidr"><span>{{subnet.cidr}}</span></td> <td class="name"><span title="{{subnet.name}}">{{subnet.name}}</span></td> </tr> </tbody> <tbody> <tr ng-show="options.ec2VpcVpcId.value === null"> <td class="empty-list" colspan="5">Choose a VPC.</td> </tr> <tr ng-show="options.ec2VpcElbSubnets.valueObjects[options.ec2VpcVpcId.value].length === 0"> <td class="empty-list" colspan="5">No subnets in {{options.ec2VpcVpcId.value}}.</td> </tr> </tbody> </table> </div> <h3 class="underline">Instance settings</h3> <p class="m-bottom-15">Choose a subnet in each AZ for the instances that run your application. To avoid exposing your instances to the Internet, run your instances in private subnets and load balancer in public subnets. To run your load balancer and instances in the same public subnets, assign public IP addresses to the instances.</p> <div ng-show="options.ec2VpcAssociatePublicIpAddress"> <div class="control-group"> <label class="control-label">Public IP address</label> <div class="controls"> <label class="checkbox"> <input type="checkbox" name="associatePublicIpAddress" ng-disabled="options.ec2VpcAssociatePublicIpAddress.isDisabled()" ng-model="options.ec2VpcAssociatePublicIpAddress.value"> <div class="help-inline">Assign a public IP address to the Amazon EC2 instances in your environment.</div> </label> </div> </div> </div> <h4>Instance subnets</h4> <table class="subnet-selection-table" data-table="resource" eb-rowspan-hover ng-class="{ \'input-error\': options.ec2VpcSubnets.validationMessages.isSeverityError(), \'input-warning\': options.ec2VpcSubnets.validationMessages.isSeverityWarning() }"> <thead> <tr data-table-header="togglable"> <th class="selection"></th> <th class="availability-zone">Availability Zone</th> <th class="subnet">Subnet</th> <th class="cidr">CIDR</th> <th class="name">Name</th> </tr> </thead> <tfoot ng-show="options.ec2VpcSubnets.validationMessages.messages.length"> <tr> <td colspan="5"> <div class="validation-message" ng-repeat="message in options.ec2VpcSubnets.validationMessages.messages" ng-bind-html="message.message"></div> </td> </tr> </tfoot> <tbody ng-repeat="az in options.ec2VpcSubnets.getByVpc(options.ec2VpcVpcId.value) | orderBy:\'label\'"> <tr class="subnet-row" ng-click="options.ec2VpcSubnets.toggleSelection(subnet.value)" ng-repeat="subnet in az.subnets | orderBy:\'cidr\' track by $index"> <td class="selection"> <label><input type="checkbox" name="subnets[]" ng-checked="options.ec2VpcSubnets.value.indexOf(subnet.value) > -1" ng-disabled="options.ec2VpcSubnets.isDisabled()" value="{{subnet.value}}"></label> </td> <td class="availability-zone" ng-if="$index === 0" rowspan="{{az.subnets.length}}"><strong>{{az.label}}</strong></td> <td class="subnet"><span>{{subnet.value}}</span></td> <td class="cidr"><span>{{subnet.cidr}}</span></td> <td class="name"><span title="{{subnet.name}}">{{subnet.name}}</span></td> </tr> </tbody> <tbody> <tr ng-show="options.ec2VpcVpcId.value === null"> <td class="empty-list" colspan="5">Choose a VPC.</td> </tr> <tr ng-show="options.ec2VpcSubnets.valueObjects[options.ec2VpcVpcId.value].length === 0"> <td class="empty-list" colspan="5">No subnets in {{options.ec2VpcVpcId.value}}.</td> </tr> </tbody> </table> <h4>Instance security groups</h4> <table class="security-group-selection-table" data-table="resource" ng-class="{ \'input-error\': options.autoscalingLaunchconfigurationSecurityGroups.validationMessages.isSeverityError(), \'input-warning\': options.autoscalingLaunchconfigurationSecurityGroups.validationMessages.isSeverityWarning() }"> <thead> <tr data-table-header="togglable"> <th class="selection"></th> <th class="security-group-name">Group name</th> <th class="security-group-id">Group ID</th> <th class="security-group-name-tag">Name</th> </tr> </thead> <tbody> <tr class="security-group-row" ng-class="{ selected: options.autoscalingLaunchconfigurationSecurityGroups.value.indexOf(securityGroup.groupId) > -1 }" ng-click="options.autoscalingLaunchconfigurationSecurityGroups.toggleSelection(securityGroup.groupId)" ng-repeat="securityGroup in options.autoscalingLaunchconfigurationSecurityGroups.valueObjects[options.ec2VpcVpcId.value]"> <td class="selection"> <label><input type="checkbox" name="securityGroups[]" ng-checked="options.autoscalingLaunchconfigurationSecurityGroups.value.indexOf(securityGroup.groupId) > -1" value="{{securityGroup.groupId}}"></label> </td> <td class="security-group-name"> <span title="{{securityGroup.groupName}}">{{securityGroup.groupName}}</span> </td> <td class="security-group-id"> <span>{{securityGroup.groupId}}</span> </td> <td class="security-group-name-tag"> <span title="{{securityGroup.name}}">{{securityGroup.name}}</span> </td> </tr> <tr ng-show="options.ec2VpcVpcId.value === null"> <td class="empty-list" colspan="4">Choose a VPC.</td> </tr> <tr ng-show="options.autoscalingLaunchconfigurationSecurityGroups.valueObjects[options.ec2VpcVpcId.value].length === 0"> <td class="empty-list" colspan="4">No subnets in {{options.ec2VpcVpcId.value}}.</td> </tr> </tbody> </tbody> <tfoot ng-show="options.autoscalingLaunchconfigurationSecurityGroups.validationMessages.messages.length"> <tr> <td colspan="4"> <div class="validation-message" ng-repeat="message in options.autoscalingLaunchconfigurationSecurityGroups.validationMessages.messages" ng-bind-html="message.message"></div> </td> </tr> </tfoot> </table> <div ng-show="request.configurationOptions.hasRdsOptions()"> <h3 class="underline">Database settings</h3> <table class="subnet-selection-table" data-table="resource" eb-rowspan-hover ng-class="{ \'input-error\': options.ec2VpcDbSubnets.validationMessages.isSeverityError(), \'input-warning\': options.ec2VpcDbSubnets.validationMessages.isSeverityWarning() }"> <thead> <tr data-table-header="togglable"> <th class="selection"></th> <th class="availability-zone">Availability Zone</th> <th class="subnet">Subnet</th> <th class="cidr">CIDR</th> <th class="name">Name</th> </tr> </thead> <tfoot ng-show="options.ec2VpcDbSubnets.validationMessages.messages.length"> <tr> <td colspan="5"> <div class="validation-message" ng-repeat="message in options.ec2VpcDbSubnets.validationMessages.messages" ng-bind-html="message.message"></div> </td> </tr> </tfoot> <tbody ng-repeat="az in options.ec2VpcDbSubnets.getByVpc(options.ec2VpcVpcId.value) | orderBy:\'label\'"> <tr class="subnet-row" ng-click="options.ec2VpcDbSubnets.toggleSelection(subnet.value)" ng-repeat="subnet in az.subnets | orderBy:\'cidr\' track by $index"> <td class="selection"> <label><input type="checkbox" name="subnets[]" ng-checked="options.ec2VpcDbSubnets.value.indexOf(subnet.value) > -1" ng-disabled="options.ec2VpcDbSubnets.isDisabled()" value="{{subnet.value}}"></label> </td> <td class="availability-zone" ng-if="$index === 0" rowspan="{{az.subnets.length}}"><strong>{{az.label}}</strong></td> <td class="subnet"><span>{{subnet.value}}</span></td> <td class="cidr"><span>{{subnet.cidr}}</span></td> <td class="name"><span title="{{subnet.name}}">{{subnet.name}}</span></td> </tr> </tbody> <tbody> <tr ng-show="options.ec2VpcVpcId.value === null"> <td class="empty-list" colspan="5">Choose a VPC.</td> </tr> <tr ng-show="options.ec2VpcDbSubnets.valueObjects[options.ec2VpcVpcId.value].length === 0"> <td class="empty-list" colspan="5">No subnets in {{options.ec2VpcVpcId.value}}.</td> </tr> </tbody> </table> </div> <div class="wizard-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()" ng-disabled="status">Cancel</a> <button class="btn btn-primary" ng-click="save()" ng-disabled="status">Save</button> </div> </div> </div></div>');
a.put("partials/experimental/environment/configuration/panels/worker-panel.html",'<div class="row-fluid getting-started-layout" ng-controller="ConfigurationPanelController"> <div class="span1 getting-started-icon"> <img src="/elasticbeanstalk/img/getting-started/globe.png" alt="Getting started with AWS Elastic Beanstalk"> </div> <div class="span8 mainbar form-horizontal new-form" ng-form="configurationPanelForm"> <alert></alert> <h1 class="m-bottom-20 p-top-10">Modify worker</h1> <p class="m-bottom-15">You can create a new Amazon SQS queue for your worker application or pull work items from an existing queue. The worker daemon on the instances in your environment pulls an item from the queue and relays it in the body of a POST request to a local HTTP path relative to localhost.</p> <h3 class="m-bottom-15 underline">Queue</h3> <div class="control-group"> <label class="control-label">Worker queue</label> <div class="controls"> <select name="workerQueueUrl" ng-model="options.elasticbeanstalkSqsdWorkerQueueUrl.value" ng-options="value for value in options.elasticbeanstalkSqsdWorkerQueueUrl.valueOptions"> <option value>Autogenerated queue</option> </select> <div class="help-inline"> <i class="icon-spinner" click-eater ng-class="{ \'icon-spin\': options.elasticbeanstalkSqsdWorkerQueueUrl.refreshing }" ng-click="options.elasticbeanstalkSqsdWorkerQueueUrl.refresh()"></i> </div> <div class="validation-message" ng-repeat="message in options.elasticbeanstalkSqsdWorkerQueueUrl.validationMessages.messages" ng-bind-html="message.message"></div> <div class="help-block">SQS queue from which to read work items.</div> </div> </div> <div class="control-group"> <label class="control-label">Worker queue</label> <div class="controls"> <select name="workerQueueUrl" ng-model="options.elasticbeanstalkSqsdWorkerQueueUrl.value" ng-options="value for value in options.elasticbeanstalkSqsdWorkerQueueUrl.valueOptions"> <option value>Autogenerated queue</option> </select> <div class="validation-message" ng-repeat="message in options.elasticbeanstalkSqsdWorkerQueueUrl.validationMessages.messages" ng-bind-html="message.message"></div> <div class="help-block">SQS queue from which to read work items.</div> </div> </div> <h3 class="m-bottom-15 underline">Messages</h3> <div class="control-group"> <label class="control-label">HTTP path</label> <div class="controls"> <input type="text" name="httpPath" ng-model="options.elasticbeanstalkSqsdHttpPath.value"> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.elasticbeanstalkSqsdHttpPath.validationMessages.messages"></div> <div class="help-block">The daemon pulls items from the Amazon SQS queue and posts them locally to this path.</div> </div> </div> <div class="control-group"> <label class="control-label">MIME type</label> <div class="controls"> <div class="control"> <select ng-model="options.elasticbeanstalkSqsdMimeType.value"> <option value="%CUSTOM%">Custom</option> <option ng-repeat="option in options.elasticbeanstalkSqsdMimeType.getTypeOptions()" ng-value="option">{{option}}</option> </select> </div> <div class="control" ng-show="options.elasticbeanstalkSqsdMimeType.isCustom()"> <input type="text" ng-model="options.elasticbeanstalkSqsdMimeType.customType" placeholder="e.g. \'text/xml\'"> </div> <div class="help-block">Change the MIME type of the POST requests that the worker daemon sends to your application.</div> </div> </div> <div class="control-group"> <label class="control-label">HTTP connections</label> <div class="controls"> <input type="number" class="input-mini" maxvalue="options.elasticbeanstalkSqsdHttpConnections.maxValue" minvalue="options.elasticbeanstalkSqsdHttpConnections.minValue" name="httpConnections" ng-model="options.elasticbeanstalkSqsdHttpConnections.value"> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.elasticbeanstalkSqsdHttpConnections.validationMessages.messages"></div> <div class="help-block">Maximum number of concurrent connections to the application.</div> </div> </div> <div class="control-group"> <label class="control-label">Visibility timeout</label> <div class="controls"> <input type="number" class="input-small" maxvalue="options.elasticbeanstalkSqsdErrorVisibilityTimeout.maxValue" minvalue="options.elasticbeanstalkSqsdErrorVisibilityTimeout.minValue" name="errorVisibilityTimeout" ng-model="options.elasticbeanstalkSqsdErrorVisibilityTimeout.value"> <span class="help-inline">(Optional)</span> <div class="validation-message" ng-bind-html="message.message" ng-repeat="message in options.elasticbeanstalkSqsdErrorVisibilityTimeout.validationMessages.messages"></div> <div class="help-block">Number of seconds to lock an incoming message for processing before returning it to the queue.</div> </div> </div> <div class="wizard-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()" ng-disabled="status">Cancel</a> <button class="btn btn-primary" ng-click="save()" ng-disabled="status">Save</button> </div> </div> </div></div>');
a.put("partials/experimental/environment/launching/launch-environment.html",'<div environment-header environment="environment"></div><div class="row-fluid launch-environment-layout"> <div class="span9"> <div class="alert alert-info alert-icon"> <h3>Creating <span ng-bind-html="environment.environmentName"></span></h3> <p>This will take a few minutes.<eb-animated-ellipsis></eb-animated-ellipsis></p> </div> <div id="events-block"> <dl class="events-list"> <dt class="event-time" ng-repeat-start="event in events.eventsByEnvironmentId[environment.environmentId].events | orderBy:\'eventDate\':true" ng-bind-html="event.eventDate | intToDateTimeString:\'launching_event_time_format\'"></dt> <dd class="event-message" ng-repeat-end ng-bind-html="event.message | eventMessageFormat"></dd> <dd class="event-message" ng-show="events.eventsByEnvironmentId[environment.environmentId].events.length === 0">No events</dt> </dl> </div> </div> <div class="span3"> <learn-more></learn-more> </div></div>');
a.put("partials/experimental/getting-started/advanced-configuration.html",'<div ng-controller="AdvancedConfigurationController"> <div class="row-fluid getting-started-layout"> <div class="span1 getting-started-icon"> <img src="/elasticbeanstalk/img/getting-started/globe.png" alt="Getting started with AWS Elastic Beanstalk"> </div> <div class="span11 mainbar"> <h1 class="p-top-10 underline">Configure {{request.environmentName.value}}</h1> <div ng-show="presetsEnabled"> <p class="m-bottom-15">Start from a preset that matches your use case or choose <em>Custom configuration</em> to unset recommended values and use the service\'s default values.</p> <div class="form-horizontal new-form"> <div class="control-group"> <label class="control-label">Configuration presets</label> <div class="controls pull-left" style="margin-left:20px;"> <label class="radio"> <input type="radio" name="preset" ng-change="changePreset(preset)" ng-model="preset" value="low"> Low cost <em>(Free Tier eligible)</em> </label> <label class="radio"> <input type="radio" name="preset" ng-change="changePreset(preset)" ng-model="preset" value="high"> High availability </label> <label class="radio"> <input type="radio" name="preset" ng-change="changePreset(preset)" ng-model="preset" value="custom"> Custom configuration </label> </div> </div> </div> </div> <p class="m-bottom-15" ng-if="request.configurationTemplate.templateNameRequired()">Source configuration: <strong>{{request.configurationTemplate.getTemplateName()}}</strong></p> <h4 class="m-bottom-20" ng-class="{ underline: !request.configurationTemplate.isCustomPlatform() }">Platform {{request.configurationTemplate.render()}} <a href="" class="type-size-small m-left-10" ng-click="openSelectPlatformVersionModel()" ng-show="request.configurationTemplate.platformRequired()">Change platform configuration</a> </h4> <div ng-include="\'partials/experimental/environment/configuration/getting-started-cards.html\'"></div> <div class="wizard-actions"> <div class="pull-right"> <a href="" class="btn btn-link" analytics-click="create_env_adv_BtnCancel" ng-click="cancel()">Cancel</a> <button class="btn" id="previous-button" analytics-click="create_env_adv_BtnPrevious" ng-click="previous()">Previous</button> <button class="btn btn-primary" analytics-click="create_env_adv_BtnCreate" ng-click="create()"> <span ng-bind-html="isNewEnvironmentMode() ? \'Create environment\' : \'Create app\'"></span> </button> </div> </div> </div> </div></div><div class="row-fluid" style="margin-top:60px;"> <div class="span11 offset1 text-center color-text-mid-grey type-size-small" style="padding:0 20px;"><span>We&rsquo;re moving to a new design for AWS Elastic Beanstalk. <a href="" show-feedback>Let us know what you think</a>!</span><span ng-if="experimentEnabled"> You can <a qs-experiment-opt-out-href>switch back to the previous version</a> while we finalize the design.</span></div></div>');
a.put("partials/experimental/getting-started/basic-environment.html",'<div ng-controller="BasicEnvironmentController"> <div class="row-fluid getting-started-layout"> <div class="span1 getting-started-icon"> <img src="/elasticbeanstalk/img/getting-started/globe.png" alt="Getting started with AWS Elastic Beanstalk"> </div> <div class="span8 mainbar"> <h1 class="p-top-10 underline" ng-bind-html="isNewEnvironmentMode() ? \'Create a new environment\' : environmentRequest.isWorkerTier() ? \'Create a worker application\' : \'Create a web app\'"></h1> <p class="m-bottom-15"> <span ng-if="isNewEnvironmentMode()">Launch an environment with a sample application or your own code. By creating an environment, you allow AWS Elastic Beanstalk to manage AWS resources and permissions on your behalf.</span> <span ng-if="!isNewEnvironmentMode()">Create a new application and environment with a sample application or your own code. By creating an environment, you allow AWS Elastic Beanstalk to manage AWS resources and permissions on your behalf.</span> <a eb-docs-href="/console/elasticbeanstalk/roles">Learn more</a> </p> <div class="form-horizontal new-form"> <div ng-if="!isNewEnvironmentMode() || !createApplication.applicationName.isAutofilled()"> <h3 class="m-bottom-15 underline">Application information</h3> <div class="control-group" ng-class="{ \'input-error\': !createApplication.applicationName.isValid() }"> <label class="control-label">Application name</label> <div class="controls"> <input type="text" class="input-xlarge" name="applicationName" ng-blur="applicationNameChange()" ng-minlength="createApplication.applicationName.minLength" ng-model="createApplication.applicationName.value"> <div class="help-block">Up to 100 Unicode characters, not including forward slash (/).</div> <div class="text-error" ng-bind-html="message" ng-repeat="message in createApplication.applicationName.errorMessages()"></div> </div> </div> </div> <div ng-if="!isGettingStartedMode()"> <h3 class="underline">Environment information</h3> <p class="m-bottom-15">Choose the name, subdomain, and description for your environment. These cannot be changed later.</p> <div class="control-group" ng-if="isNewEnvironmentMode() && createApplication.applicationName.isAutofilled()"> <label class="control-label">Application name</label> <div class="controls"> <p>{{createApplication.applicationName.value}}</p> </div> </div> <div class="control-group" ng-class="{ \'input-error\': !environmentRequest.environmentName.isValid() }" ng-show="environmentRequest.environmentName"> <label class="control-label">Environment name</label> <div class="controls"> <input type="text" class="input-xlarge" name="environmentName" ng-model="environmentRequest.environmentName.value"> <div class="text-error" ng-bind-html="message" ng-repeat="message in environmentRequest.environmentName.errorMessages()"></div> </div> </div> <div class="control-group dns-availability" ng-class="{ \'input-error\': checkAvailabilityErrorMessage || environmentRequest.cnameprefix.isUnavailable(), \'input-positive\': environmentRequest.cnameprefix.isAvailable() }" ng-if="environmentRequest.cnameprefix && environmentRequest.isWebServerTier()"> <label class="control-label">Domain</label> <div class="controls"> <div class="inline-block input-append"> <input type="text" class="input-xlarge" enter-press="checkDnsAvailability()" name="cnameprefix" ng-model="environmentRequest.cnameprefix.value" placeholder="Leave blank for autogenerated value"> <span class="add-on" ng-bind-html="environmentRequest.cnameprefix.getCnameDomain()"></span> </div> <button class="btn input-width" analytics-click="create_env_BtnCheckDnsAvailability" ng-click="checkDnsAvailability()" ng-disabled="checkAvailabilityButtonDisabled()">Check availability</button> <div class="help-block" ng-show="environmentRequest.cnameprefix.hasBeenChecked()"> <span ng-bind-html="environmentRequest.cnameprefix.getFqdn()"></span> <strong class="text-error" ng-show="environmentRequest.cnameprefix.isUnavailable()">is unavailable.</strong> <strong class="text-success" ng-show="environmentRequest.cnameprefix.isAvailable()">is available.</strong> </div> <div class="text-error" ng-bind-html="checkAvailabilityErrorMessage" ng-show="checkAvailabilityErrorMessage"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': !environmentRequest.description.isValid() }"> <label class="control-label">Description</label> <div class="controls"> <textarea type="text" class="input-xlarge" name="description" ng-model="environmentRequest.description.value"></textarea> <div class="text-error" ng-bind-html="message" ng-repeat="message in environmentRequest.description.errorMessages()"></div> </div> </div> </div> <h3 class="m-bottom-15 underline">Base configuration</h3> <div class="control-group" ng-if="environmentRequest.configurationTemplate.templateNameRequired()"> <label class="control-label">Saved configuration</label> <div class="controls"> <p>{{environmentRequest.configurationTemplate.getTemplateName()}}</p> </div> </div> <div class="control-group" ng-hide="isGettingStartedMode()"> <label class="control-label">Tier</label> <div class="controls"> <p>{{environmentRequest.tier.name | localize}} <a style="font-size: 12px" href ng-click="changeTier()">(Choose tier)</a></p> </div> </div> <div class="control-group" ng-class="{ \'input-error\': !environmentRequest.configurationTemplate.isValid() }" ng-show="environmentRequest.configurationTemplate.platformRequired()"> <label class="control-label">Platform</label> <div class="controls" ng-show="isGettingStartedMode()"> <platform-picker change="platformChange(platformName)" value="environmentRequest.configurationTemplate.solutionStack"></platform-picker> <div class="help-block">Choose <strong>Configure more options</strong> for more platform configuration options.</div> <div class="text-error" ng-show="!environmentRequest.configurationTemplate.isValid() && !environmentRequest.configurationTemplate.getSolutionStackName()">Choose a platform.</div> </div> <div class="controls" ng-hide="isGettingStartedMode()"> <div class="radio m-bottom-20"> <label><input type="radio" ng-model="environmentRequest.configurationTemplate.source" ng-value="\'solution-stack\'">Preconfigured platform</label> <div class="help-block">Platforms published and maintained by AWS Elastic Beanstalk.</div> <div class="m-top-10"> <platform-picker change="platformChange(platformName)" controls-disabled="environmentRequest.configurationTemplate.isCustomPlatform()" value="environmentRequest.configurationTemplate.solutionStack"></platform-picker> </div> </div> <div class="radio" ng-class="{ \'text-disabled\': customPlatforms.isEmpty() }"> <label><input type="radio" ng-disabled="customPlatforms.isEmpty()" ng-model="environmentRequest.configurationTemplate.source" ng-value="\'custom\'">Custom platform&nbsp;<sup class="new-section">NEW</sup></label> <div class="help-block">Platforms created and owned by you. <a eb-docs-href="/console/elasticbeanstalk/custom-platform">Learn more</a> </div> <div class="m-top-10"> <select class="input-xlarge" name="customPlatform" ng-change="platformChange(\'Custom\')" ng-disabled="!environmentRequest.configurationTemplate.isCustomPlatform()" ng-model="environmentRequest.configurationTemplate.platform" ng-options="group.recommended as group.platformName for group in customPlatforms.groups track by group.platformName"> <option value="" ng-disabled="true" selected="selected">-- Choose a custom platform --</option> </select> </div> <div class="text-error" ng-bind-html="message" ng-repeat="message in environmentRequest.configurationTemplate.errorMessages()"></div> </div> </div> </div> <div class="control-group application-version-selection" ng-class="{ \'input-error\': !createApplicationVersion.isValid() || !environmentRequest.versionLabel.isValid() }"> <label class="control-label">Application code</label> <div class="controls"> <div class="radio m-bottom-20" ng-class="{ \'text-disabled\': !environmentRequest.canHaveSampleApplication() }"> <label><input type="radio" ng-disabled="!environmentRequest.canHaveSampleApplication()" ng-model="applicationVersionSource.value" ng-value="\'sample\'">Sample application</label> <div class="help-block">Get started right away with sample code.</div> </div> <div class="radio m-bottom-20" ng-show="isNewEnvironmentMode()"> <label><input type="radio" ng-disabled="!hasApplicationVersions()" ng-model="applicationVersionSource.value" ng-value="\'existing\'">Existing version</label> <div class="help-block">Application versions that you have uploaded for <strong>{{createApplication.applicationName.value}}</strong>.</div> <div class="m-top-10"> <select class="input-xlarge" name="versionLabel" ng-change="versionLabelChange(versionLabel)" ng-disabled="!applicationVersionSource.isExistingVersion()" ng-model="versionLabel" ng-options="label for label in environmentRequest.application.versions | filter:filterSampleApplication | orderBy"> <option value="" ng-disabled="true" selected="selected">-- Choose a version --</option> </select> </div> </div> <div class="radio"> <label><input type="radio" ng-model="applicationVersionSource.value" ng-value="\'new\'">Upload your code</label> <div class="help-block">Upload a source bundle from your computer or copy one from Amazon S3.</div> <div class="m-top-10"> <button class="btn" ng-click="upload()" ng-disabled="!applicationVersionSource.isNewVersion()"> <i class="icon-upload-alt"></i> Upload </button> <div class="help-inline" ng-show="createApplicationVersion.versionLabel.isAutofilled()">ZIP or WAR</div> <eb-inline-editor class="inline-editor" model="createApplicationVersion.versionLabel" ng-hide="createApplicationVersion.versionLabel.isAutofilled()"> <span class="help-inline" ng-bind-html="createApplicationVersion.versionLabel.value"></span> </eb-inline-editor> </div> <div class="text-error" ng-bind-html="message" ng-repeat="message in createApplicationVersion.getErrorMessages()" ng-if="!applicationVersionSource.isExistingVersion()"></div> <div class="text-error" ng-bind-html="message" ng-repeat="message in environmentRequest.versionLabel.errorMessages()" ng-if="!applicationVersionSource.isNewVersion()"></div> </div> </div> </div> </div> <div class="wizard-actions"> <div class="pull-right"> <a href="" class="btn btn-link" analytics-click="create_env_BtnCancel" ng-click="cancel()">Cancel</a> <button class="btn" analytics-click="create_env_BtnConfigure" ng-bind-html="showReviewButton() ? \'Review and launch\' : \'Configure more options\'" ng-click="configure()" ng-class="{ \'btn-primary\': showReviewButton() }"></button> <button class="btn btn-primary" analytics-click="create_env_BtnCreate" ng-click="createWithDefaultConfiguration()" ng-hide="showReviewButton()"> <span ng-bind-html="isNewEnvironmentMode() ? \'Create environment\' : \'Create application\'"></span> </button> </div> </div> </div> </div></div><div class="row-fluid" style="margin-top:60px;"> <div class="span8 offset1 text-center color-text-mid-grey type-size-small" style="padding:0 20px;"><span>We&rsquo;re moving to a new design for AWS Elastic Beanstalk. <a href="" show-feedback>Let us know what you think</a>!</span><span ng-if="experimentEnabled"> You can <a qs-experiment-opt-out-href>switch back to the previous version</a> while we finalize the design.</span></div></div>');
a.put("partials/experimental/getting-started/create-new-application-modal.html",'<div class="modal-header"> <button type="button" class="close" data-dismiss="modal" ng-click="dialog.close()">&times;</button> <h3>Create New Application</h3></div><div class="create-new-application-modal" ng-controller="CreateNewApplicationModalController"> <div class="modal-body"> <div class="alert alert-error" ng-show="errorMessage"> <span class="text-error" ng-bind-html="errorMessage"></span> </div> <div class="form-horizontal new-form"> <div class="control-group" ng-class="{ \'input-error\': !request.applicationName.isValid() }"> <label class="control-label">Application Name</label> <div class="controls"> <input type="text" class="input-large" name="applicationName" ng-model="request.applicationName.value"> <div class="help-block">Maximum length of 100 characters, not including forward slash (/).</div> <div class="text-error" ng-bind-html="message" ng-repeat="message in request.applicationName.errorMessages()"></div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': !request.description.isValid() }"> <label class="control-label">Description</label> <div class="controls"> <textarea name="description" ng-model="request.description.value"></textarea> <div class="help-block">Maximum length of 200 characters.</div> <div class="text-error" ng-bind-html="message" ng-repeat="message in request.description.errorMessages()"></div> </div> </div> </div> </div> <div class="modal-footer text-left"> <div class="pull-right"> <a href="" click-eater class="btn btn-link" ng-click="cancel()">Cancel</a> <button class="btn btn-primary" ng-click="submit()" ng-disabled="status">Create</button> </div> <span class="status-display" ng-bind-html="status" ng-show="status"></span> </div></div>');
a.put("partials/experimental/getting-started/first-run.html",'<div class="row-fluid getting-started"> <div class="span12"> <div class="row-fluid top-part"> <div class="span12 p-20"> <i class="hero pull-left m-right-40 m-bottom-10 m-top-20"></i> <div class="right-content"> <h1 class="m-bottom-10">Welcome to AWS Elastic Beanstalk</h1> <p>With Elastic Beanstalk, you can <strong>deploy</strong>, <strong>monitor</strong>, and <strong>scale</strong> an application quickly and easily. Let us do the heavy lifting so you can focus on your business.</p> <p>To deploy your <strong>existing web application</strong>, create an <a eb-docs-href="/elasticbeanstalk/latest/dg/using-features.deployment.source.html">application source bundle</a> and then <a ng-href="#/newApplication">create a new application</a>. If you\'re using <strong>Git</strong> and would prefer to use it with our command line tool, please see <a eb-docs-href="/elasticbeanstalk/latest/dg/eb-cli3.html">Getting Started with the EB CLI</a>.</p> <p>To deploy a <strong>sample application</strong>, click <strong>Get started</strong>, choose a name, select a platform and click <strong>Create app</strong>.</p> <p>By launching the sample application, you allow AWS Elastic Beanstalk to administer AWS resources and necessary permissions on your behalf. <a eb-docs-href="/console/elasticbeanstalk/roles">Learn more</a></p> <div class="control"> <button id="btn-gs" class="btn btn-primary m-top-10" ng-click="getStarted()">Get started</button> </div> </div> </div> </div> <div class="row-fluid m-bottom-20"> <div class="span12"> <hr class="header-hr"> <h2 class="text-center"><span class="header p-horiz-10">Get Started in Three Easy Steps</span></h2> </div> </div> <div class="row-fluid callouts m-bottom-40 text-center"> <div class="span4"> <i class="callout select"></i><br/> <span class="type-size-big">Select a Platform</span> </div> <div class="span4"> <i class="callout upload"></i><br/> <span class="type-size-big">Upload an Application or Use a Sample</span> </div> <div class="span4"> <i class="callout run"></i><br/> <span class="type-size-big">Run it!</span> </div> </div> <div class="row-fluid m-top-40 m-bottom-20"> <div class="span12"> <hr class="header-hr"> <h2 class="text-center"><span class="header p-horiz-10">Start Now by Selecting Your Platform</span></h2> </div> </div> <div class="row-fluid"> <div class="span12 text-center"> <i class="inline-block m-horiz-20 icon-php"></i> <i class="inline-block m-horiz-20 icon-ruby"></i> <i class="inline-block m-horiz-20 icon-iis-8"></i> <i class="inline-block m-horiz-20 icon-tomcat"></i> <i class="inline-block m-horiz-20 icon-node-js"></i> <i class="inline-block m-horiz-20 icon-python"></i> <span class="inline-block m-horiz-20 and-more type-weight-bold">&hellip;and more</span> </div> </div> </div></div>');
a.put("partials/experimental/getting-started/opt-out-modal.html",'<div ng-controller="OptOutModalController"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal" ng-click="cancel()">&times;</button> <h3>Tell us why you are opting out</h3> </div> <div class="modal-body"> <div class="row-fluid form-horizontal new-form"> <div class="span12"> <p class="m-bottom-15">Thank you for trying the new console experience. To help us improve, please tell us why you opted out.</p> <div class="control-group"> <div class="radio"> <label> <input type="radio" name="reason" ng-model="reason" value="notFound"> I didn\'t find what I was looking for. </label> </div> <div class="radio"> <label> <input type="radio" name="reason" ng-model="reason" value="features"> I couldn\'t achieve what I wanted to do. </label> </div> <div class="radio"> <label> <input type="radio" name="reason" ng-model="reason" value="navigation"> It was difficult to navigate. </label> </div> <div class="radio"> <label> <input type="radio" name="reason" ng-model="reason" value="errors"> I got errors while using it. </label> </div> <div class="radio"> <label> <input type="radio" ng-model="reason" value="other"> Other: </label> <textarea type="text" class="input-xlarge" style="resize:none" maxlength="100" ng-model="other" ng-focus="reason = \'other\'" placeholder="Type your feedback here."></textarea> </div> </div> </div> </div> <div> <p>To confirm opting out of the new console experience and to send feedback, choose <strong>Confirm</strong>. To keep using the new console experience, choose <strong>Cancel</strong>.</p> </div> </div> <div class="modal-footer text-left"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()">Cancel</a> <button class="btn btn-primary" ng-click="confirm()" ng-disabled="isConfirmDisabled()" >Confirm</button> </div> </div></div>');
a.put("partials/experimental/getting-started/select-platform-version-modal.html",'<div class="modal-header"> <button type="button" class="close" data-dismiss="modal" ng-click="dialog.close()">&times;</button> <h3>Choose a platform version</h3></div><div class="select-solution-stack-modal" ng-controller="SelectPlatformVersionModalController"> <div class="modal-body"> <dl class="dl-horizontal"> <dt>Name</dt> <dd>{{platform.platformName}}</dd> <dt>Version</dt> <dd>{{platform.platformVersion}}</dd> <dt>Owner</dt> <dd>{{platform.platformOwner}}</dd> <dt ng-show="platform.hasOperatingSystem()">Operating system</dt> <dd ng-show="platform.hasOperatingSystem()">{{platform.operatingSystemName}} {{platform.operatingSystemVersion}}</dd> <dt ng-show="platform.supportsTiers()">Tiers</dt> <dd ng-show="platform.supportsTiers()"><ul class="comma-list"><li ng-repeat="slug in localizationForSupportedTiers(platform)">{{slug | localize}}</li></ul></dd> </dl> <div class="form-horizontal new-form"> <div class="control-group"> <label class="control-label">&nbsp;</label> <div class="controls"> <select class="input-xlarge" ng-model="platform" ng-options="platformVersion as platformVersion.toString() for platformVersion in group.platformVersions track by platformVersion.platformVersion"></select> </div> </div> </div> </div> <div class="modal-footer text-left"> <div class="pull-right"> <a href="" click-eater class="btn btn-link" ng-click="dialog.close()">Cancel</a> <button class="btn btn-primary" ng-click="dialog.resolve(platform)">Save</button> </div> </div></div>');
a.put("partials/experimental/getting-started/select-solution-stack-modal.html",'<div class="modal-header"> <button type="button" class="close" data-dismiss="modal" ng-click="dialog.close()">&times;</button> <h3>Choose a platform version</h3></div><div class="select-solution-stack-modal" ng-controller="SelectSolutionStackModelController"> <div class="modal-body"> <dl class="dl-horizontal"> <dt>Platform version</dt> <dd> <span ng-bind="solutionStack.platformName"></span> <span ng-bind="solutionStack.platformDescription"></span> <span ng-show="solutionStack.solutionStackVersion">- v{{solutionStack.solutionStackVersion}}</span> </dd> <dt>Operating system</dt> <dd>{{solutionStack.architectureVersion}}bit {{solutionStack.osName}} {{solutionStack.osVersion}}</dd> <dt>Tiers</dt> <dd>Web server<span ng-show="solutionStack.canBeWorker">, Worker</span></dd> </dl> <div class="form-horizontal new-form"> <div class="control-group"> <label class="control-label">&nbsp;</label> <div class="controls" ng-show="platformIsModern"> <select class="input-xxlarge" ng-model="solutionStack" ng-options="version as version.solutionStackName group by version.group for version in versions track by version.solutionStackName"></select> <div class="help-block"> <span class="text-success" ng-show="recommendedIsSelected()">Latest version</span> <span class="text-warning" ng-show="!recommendedIsSelected()">Newer version available</span> </div> </div> <div class="controls" ng-hide="platformIsModern"> <select class="input-xxlarge" ng-model="solutionStack" ng-options="version as version.solutionStackName for version in versions track by version.solutionStackName"></select> </div> </div> </div> </div> <div class="modal-footer text-left"> <div class="pull-right"> <a href="" click-eater class="btn btn-link" ng-click="dialog.close()">Cancel</a> <button class="btn btn-primary" ng-click="dialog.resolve(solutionStack)">Save</button> </div> </div></div>');
a.put("partials/experimental/getting-started/select-tier-modal.html",'<div class="modal-header"> <button type="button" class="close" data-dismiss="modal" ng-click="dialog.close()">&times;</button> <h3>Choose an environment tier</h3></div><div class="create-new-environment-modal"> <div class="modal-body"> <div class="form-horizontal new-form"> <label> <div class="radio"><input type="radio" name="tierName" ng-model="dialog.context.tier" ng-value="dialog.context.tiers.find(\'WebServer\')"> <strong>Web server environment</strong></div> <p>Run a website, web application, or web API that serves HTTP requests. <a eb-docs-href="/console/elasticbeanstalk/concepts-web-environment">Learn more</a></p> </label> <label> <div class="radio"><input type="radio" name="tierName" ng-model="dialog.context.tier" ng-value="dialog.context.tiers.find(\'Worker\')"> <strong>Worker environment</strong></div> <p>Run a worker application that processes long-running workloads on demand or performs tasks on a schedule. In a worker environment, each instance runs a daemon process that reads messages from an Amazon SQS queue and relays the contents of the messages in a POST request to a path that you configure. <a eb-docs-href="/console/elasticbeanstalk/concepts-worker-environment">Learn more</a></p> </label> </div> </div> <div class="modal-footer text-left"> <div class="pull-right"> <a href="" click-eater class="btn btn-link" ng-click="dialog.close()">Cancel</a> <button class="btn btn-primary" ng-click="dialog.resolve({ application: dialog.context.application, tier: dialog.context.tier })">Select</button> </div> </div></div>');
a.put("partials/experimental/getting-started/upload-panel.html",'<div ng-controller="UploadPanelController"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal" ng-click="cancel()">&times;</button> <h3>Upload your code</h3> </div> <div class="modal-body"> <div class="row-fluid form-horizontal new-form"> <div class="span12"> <p class="m-bottom-15">Upload a source bundle from your computer or copy one from Amazon S3.</p> <div class="alert alert-error" ng-show="errorMessage"> <i class="icon-warning-sign color-text-red"></i> <span ng-bind-html="errorMessage"></span> </div> <div class="control-group" ng-class="{ \'input-error\': !createApplicationVersion.sourceBundle.isValid() }"> <label class="control-label"> Source code origin <div class="help-block type-size-small">(Maximum size 512 MB)</div> </label> <div class="controls"> <label class="radio"> <input type="radio" ng-change="createApplicationVersion.sourceBundle.validate()" ng-model="createApplicationVersion.sourceBundle.source" ng-value="\'upload\'">Local file </label> <div class="control-option"> <file-uploader accept-types="acceptTypes" change-handler="fileChanged($filename, $filesize)" error-handler="error($messageKey, $error)" get-filename="uploader.getFilename" has-file-checker="uploader.hasFileSelected" reset="uploader.reset" upload-trigger="uploader.upload"></file-uploader> </div> <label class="radio"> <input type="radio" ng-model="createApplicationVersion.sourceBundle.source" ng-value="\'url\'">Public S3 URL </label> <div class="control-option"> <input type="text" autofocus ng-blur="s3UrlChanged()" ng-disabled="createApplicationVersion.sourceBundle.source !== \'url\'" ng-model="createApplicationVersion.sourceBundle.url" placeholder="{{s3Domain}}"> <div class="text-error" ng-bind-html="message" ng-repeat="message in createApplicationVersion.sourceBundle.errorMessages()"></div> </div> </div> </div> <div class="control-group" ng-class="{ \'input-error\': !createApplicationVersion.versionLabel.isValid() }"> <label class="control-label">Version label</label> <div class="controls"> <input type="text" ng-blur="createApplicationVersion.versionLabel.validate()" ng-change="createApplicationVersion.versionLabel.errors.reset()" ng-model="createApplicationVersion.versionLabel.value" placeholder="e.g., v0.0.1-{{dateNumber}}"> <div class="help-block" ng-show="createApplicationVersion.versionLabel.isValid()">Unique name for this version of your application code. </div> <div class="text-error" ng-bind-html="message" ng-repeat="message in createApplicationVersion.versionLabel.errorMessages()"></div> </div> </div> </div> </div> </div> <div class="modal-footer text-left"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancel()">Cancel</a> <button class="btn btn-primary" ng-click="submit()">Upload</button> </div> </div></div>');
a.put("partials/modal.html",'<div class="modal" ng-class="{hide: !state.open}" tabindex="-1" role="dialog" data-modal="{{state.title}}"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal" ng-click="handlers.close()">&times;</button> <h3>{{state.title}}</h3> </div> <div class="alert alert-icon" ng-class="{\'alert-icon-danger\': state.alertError, \'alert-danger\': state.alertError, \'alert-warning\': !state.alertError}" ng-show="state.alertText"> <h3 ng-show="state.alertTitle">{{state.alertTitle}}</h3> <p ng-bind-html="state.alertText"></p> </div> <div ng-show="state.body" class="modal-body" ng-bind-html="state.body"></div> <div class="modal-footer"> <button class="btn" ng-click="handlers.cancel()" data-cancel="{{state.cancelButtonText}}">{{state.cancelButtonText}}</button> <button class="btn btn-danger" ng-click="handlers.confirm()" data-confirm="{{state.confirmButtonText}}" ng-hide="state.confirmButtonHide">{{state.confirmButtonText}}</button> </div></div><div class="modal-backdrop" ng-class="{hide: !state.open}"></div>');
a.put("partials/redirecting.html",'<div class="m-top-10"><h1>Redirecting&hellip;<i class="icon-spin icon-spinner"></i></h1></div>');a.put("partials/wizards/application-info.html",'<h2 class="underline bottom-gutter step-header">Application Information</h2><p>To create a new application, enter the details of your application.</p><form name="appInfoForm" class="form-horizontal" submit-to-class> <div class="control-group" blur-to-class ng-class="{invalid: appInfoForm.applicationName.$invalid}"> <label class="control-label">Application name:</label> <div class="controls"> <input type="text" class="input-xlarge" ng-model="input.applicationName" required="required" ng-maxlength="100" name="applicationName" autofocus="autofocus" ng-pattern="/^[^\\/]+$/"/> <div class="help-inline">Must be less than 100 characters and cannot contain a /</div> </div> </div> <div class="control-group" ng-class="{invalid: appInfoForm.description.$invalid}"> <label class="control-label">Description:</label> <div class="controls"> <input type="text" class="input-xlarge" ng-model="input.applicationDescription" name="description" ng-maxlength="200" /> <div class="help-inline">Optional.</div> <div class="help-inline text-error" ng-show="appInfoForm.description.$invalid">The description cannot have more than 200 characters.</div> </div> </div> <div class="form-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancelRequested()" data-cancel>Cancel</a> <button class="btn btn-primary m-right-5" ng-click="appInfoForm.$valid && continueRequested()" ng-disabled="changeInProgress || launchInProgress" id="continue-button"> <i class="icon-spinner icon-spin" ng-show="changeInProgress"></i> Next </button> <button ng-show="input.displayReviewLink" class="btn btn-primary" ng-click="appInfoForm.$valid && launchReview()" ng-disabled="changeInProgress || launchInProgress" id="launch-button"> <i class="icon-spinner icon-spin" ng-show="launchInProgress"></i> Review and Launch </button> </div> <span ng-show="data.stepsById.appInfoStep.status" ng-bind-html="data.stepsById.appInfoStep.status"></span> </div></form>');
a.put("partials/wizards/application-version.html",'<h2 class="underline bottom-gutter step-header">Application Version</h2><p>Select a source for your application version.</p><form name="appVersionForm" class="form-horizontal" submit-to-class> <div blur-to-class class="control-group"> <label class="control-label">Source:</label> <div class="controls m-top-5"> <div class="control"> <div ng-if="data.stepsById.appVersion.hasApplicationVersions()"> <label class="radio inline-block"> <input type="radio" name="application-source-type" ng-change="data.stepsById.appVersion.applicationSourceTypeChange()" ng-model="input.sourceType" value="existing"> Existing application version </label> <div class="conditional-input"> <select class="input-xlarge" ng-disabled="input.sourceType !== \'existing\'" ng-model="input.applicationVersionLabel" ng-options="version.versionLabel as version.versionLabel for version in data.stepsById.appVersion.versions" ng-required="input.sourceType === \'existing\'"></select> </div> </div> <label class="radio inline-block" ng-if="!data.stepsById.appVersion.hasApplicationVersions()"> <input type="radio" name="application-source-type" ng-model="input.sourceType" ng-change="data.stepsById.appVersion.applicationSourceTypeChange()" value="sample"> Sample application </label> </div> <div class="control" ng-class="{ invalid: data.stepsById.appVersion.noFileError && input.sourceType === \'upload\' && !data.stepsById.appVersion.uploader.hasFileSelected() && !input.uploadedLocation }"> <label class="radio inline-block"> <input type="radio" name="application-source-type" ng-change="data.stepsById.appVersion.applicationSourceTypeChange()" ng-model="input.sourceType" value="upload"> Upload your own (<a eb-docs-href="/console/elasticbeanstalk/app-version-upload">Learn more</a>) </label> <div class="conditional-input"> <file-uploader accept-types="data.stepsById.appVersion.acceptTypes" get-filename="data.stepsById.appVersion.uploader.getFilename" has-file-checker="data.stepsById.appVersion.uploader.hasFileSelected" reset="data.stepsById.appVersion.uploader.reset" upload-trigger="data.stepsById.appVersion.uploader.upload"></file-uploader> <div class="help-block" ng-show="data.stepsById.appVersion.noFileError">Choose an application source bundle file to upload.</div> </div> </div> <div class="control" ng-class="{ invalid: data.stepsById.appVersion.s3LocationError }"> <label class="radio"> <input type="radio" name="application-source-type" ng-change="data.stepsById.appVersion.applicationSourceTypeChange()" ng-model="input.sourceType" value="url"> S3 URL </label> <div class="conditional-input"> <input type="text" class="input-xlarge" ng-change="data.stepsById.appVersion.s3UrlChange()" ng-disabled="input.sourceType !== \'url\'" ng-model="input.s3URL" ng-pattern="data.stepsById.appVersion.s3UrlPattern" ng-required="input.sourceType === \'url\'"> (e.g. https://s3.amazonaws.com/s3Bucket/s3Key) <div class="m-top-10 help-block" ng-show="data.stepsById.appVersion.s3LocationError">Provide a valid URL for the S3 bucket that contains your application source bundle.</div> </div> </div> </div> </div> <div ng-if="data.stepsById.appVersion.hasRollingDeployments"> <h3 class="underline bottom-gutter">Deployment Preferences</h3> <p>Elastic Beanstalk will update your application in batches so as to avoid downtime when deploying.</p> <div class="control-group"> <label class="control-label">Deployment policy:</label> <div class="controls"> <select name="deploymentPolicy" ng-model="input.deploymentPolicy"> <option value="{{constants.ALL_AT_ONCE}}" ng-selected="constants.ALL_AT_ONCE === input.deploymentPolicy">All at once</option> <option value="{{constants.ROLLING}}" ng-selected="constants.ROLLING === input.deploymentPolicy">Rolling</option> <option ng-if="data.stepsById.appVersion.isEnhancedPolicies" value="{{constants.ROLLING_WITH_ADDITIONAL_BATCH}}" ng-selected="constants.ROLLING_WITH_ADDITIONAL_BATCH === input.deploymentPolicy">Rolling with additional batch</option> <option ng-if="data.stepsById.appVersion.isEnhancedPolicies" value="{{constants.IMMUTABLE}}" ng-selected="constants.IMMUTABLE === input.deploymentPolicy">Immutable</option> </select> <div class="help-inline"><a eb-docs-href="/console/elasticbeanstalk/rolling-version-deployment">Learn more</a></div> </div> </div> <div class="control-group" ng-if="input.healthReportingSystemType"> <label class="control-label">Healthy threshold:</label> <div class="controls"> <select ng-model="input.healthCheckSuccessThreshold" ng-options="value as (value | localizeHealthStatus) for value in data.stepsById.appVersion.healthThresholdValues track by value"> </select> </div> </div> <div class="control-group m-bottom-1-em"> <label class="control-label">Ignore health check:</label> <div class="controls"> <select class="input-small" ng-model="input.ignoreHealthCheck"> <option value="true" ng-selected="input.ignoreHealthCheck">True</option> <option value="false" ng-selected="!input.ignoreHealthCheck">False</option> </select> </div> </div> <div blur-to-class class="control-group"> <label class="control-label">Batch size:</label> <div class="controls m-top-5"> <div class="control"> <label class="radio inline-block"> <input type="radio" name="deploymentBatchSizeType" ng-model="input.deploymentBatchSizeType" value="Percentage" ng-disabled="input.deploymentPolicy === constants.ALL_AT_ONCE || input.deploymentPolicy === constants.IMMUTABLE"> Percentage </label> <div class="conditional-input"> <div class="input-append"> <input type="number" class="input-mini" max="100" min="1" name="deploymentBatchSizePercentage" ng-disabled="input.deploymentPolicy === constants.ALL_AT_ONCE || input.deploymentPolicy === constants.IMMUTABLE || input.deploymentBatchSizeType !== \'Percentage\'" ng-model="input.deploymentBatchSizePercentage" ng-required="!(input.deploymentPolicy === constants.ALL_AT_ONCE || input.deploymentPolicy === constants.IMMUTABLE) && input.deploymentBatchSizeType === \'Percentage\'"> <span class="add-on">%</span> </div> <div class="help-inline">of the fleet at a time</div> </div> </div> <div class="control"> <label class="radio inline-block"> <input type="radio" name="deploymentBatchSizeType" ng-model="input.deploymentBatchSizeType" value="Fixed" ng-disabled="input.deploymentPolicy === constants.ALL_AT_ONCE || input.deploymentPolicy === constants.IMMUTABLE"> Fixed </label> <div class="conditional-input"> <input type="number" class="input-mini" max="10000" min="1" name="deploymentBatchSizeFixed" ng-disabled="input.deploymentPolicy === constants.ALL_AT_ONCE || input.deploymentPolicy === constants.IMMUTABLE || input.deploymentBatchSizeType !== \'Fixed\'" ng-model="input.deploymentBatchSizeFixed" ng-required="!(input.deploymentPolicy === constants.ALL_AT_ONCE || input.deploymentPolicy === constants.IMMUTABLE) && input.deploymentBatchSizeType === \'Fixed\'"> <div class="help-inline">instances at a time</div> </div> </div> </div> </div> </div> <div class="form-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancelRequested()" >Cancel</a> <a href="#" click-eater class="btn" ng-click="backRequested()" ng-disabled="changeInProgress">Previous</a> <button class="btn btn-primary" ng-click="continueRequested()" ng-disabled="changeInProgress" id="continue-button"> <i class="icon-spinner icon-spin" ng-show="changeInProgress"></i> Next </button> </div> <span ng-show="data.stepsById.appVersion.status" ng-bind-html="data.stepsById.appVersion.status"></span> </div></form>');
a.put("partials/wizards/choose-environment.html",'<h2 class="underline bottom-gutter step-header">Environment Type</h2><p>Choose the platform and type of environment to launch.</p><form name="chooseEnvForm" class="form-horizontal"> <div class="control-group" ng-if="!hasConfigurationTemplates" ng-class="{\'error\' : data.stepsById.chooseEnv.solutionStackMissing}"> <label class="control-label">Predefined configuration:</label> <div class="controls"> <solution-stack-picker change="data.stepsById.chooseEnv.solutionStackChanged()" controls-disabled="data.stepsById.chooseEnv.loadingValues" options="data.stepsById.chooseEnv.util.solutionStacks" tier="input.tier" value="input.solutionStack"></solution-stack-picker> <div class="m-top-10 help-inline" ng-show="data.stepsById.chooseEnv.solutionStackMissing">You must select a platform to continue.</div> </div> </div> <div class="control-group" ng-if="hasConfigurationTemplates" ng-class="{\'error\' : data.stepsById.chooseEnv.solutionStackMissing}"> <label class="control-label">Start from:</label> <div class="controls"> <label class="radio"> <input type="radio" autofocus="autofocus" name="configuration-source" ng-model="input.configurationSource" ng-disabled="data.stepsById.chooseEnv.loadingValues" ng-change="data.stepsById.chooseEnv.configSourceChanged(input)" value="solution-stack"> Predefined configuration: </label> <div class="m-left-20 m-top-10 m-bottom-20"> <solution-stack-picker change="data.stepsById.chooseEnv.solutionStackChanged()" controls-disabled="input.configurationSource !== \'solution-stack\' || data.stepsById.chooseEnv.loadingValues" options="data.stepsById.chooseEnv.util.solutionStacks" tier="input.tier" value="input.solutionStack"></solution-stack-picker> <div class="m-top-10 help-block" ng-show="data.stepsById.chooseEnv.solutionStackError">You must select a platform to continue.</div> </div> <label class="radio"> <input type="radio" name="configuration-source" ng-model="input.configurationSource" ng-disabled="data.stepsById.chooseEnv.loadingValues" ng-change="data.stepsById.chooseEnv.configSourceChanged(input)" value="saved-configuration"> Saved configuration: </label> <div class="m-left-20 m-top-10 m-bottom-20"> <select class="input-xlarge" click-eater ng-model="input.savedConfiguration" ng-change="checkVisibilities(); data.stepsById.chooseEnv.configSourceChanged(input)" ng-disabled="input.configurationSource !== \'saved-configuration\' || data.stepsById.chooseEnv.loadingValues" ng-options="config for config in application.configurationTemplates"></select> <div class="m-top-10 help-block" ng-show="data.stepsById.chooseEnv.savedConfigurationError">This saved configuration is not supported by this tier.</div> </div> </div> </div> <div class="control-group" ng-hide="input.solutionStack.isLegacy"> <label class="control-label">Environment type:</label> <div class="controls"> <select class="input-xlarge" ng-model="input.environmentType" ng-options="type.value as type.displayName for type in data.stepsById.chooseEnv.environmentTypes" name="environmentType" ng-disabled="data.stepsById.chooseEnv.loadingValues" ng-required="input.launchEnvironment"></select> <div class="help-inline"><a eb-docs-href="/console/elasticbeanstalk/env-type">Learn more</a></div> </div> </div> <div class="form-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancelRequested()" >Cancel</a> <a href="#" click-eater class="btn" ng-click="backRequested()" ng-disabled="changeInProgress">Previous</a> <button class="btn btn-primary" ng-click="continueRequested()" ng-disabled="changeInProgress || data.stepsById.chooseEnv.loadingValues" id="continue-button"> <i class="icon-spinner icon-spin" ng-show="changeInProgress || data.stepsById.chooseEnv.loadingValues"></i> Next </button> </div> <span ng-show="data.stepsById.chooseEnv.status" ng-bind-html="data.stepsById.chooseEnv.status"></span> </div></form>');
a.put("partials/wizards/configuration-details.html",'<h2 class="underline bottom-gutter step-header">Configuration Details</h2><p> Modify the following settings or click Next to accept the default configuration. <a eb-docs-href="/console/elasticbeanstalk/config-ec2-instances">Learn more</a> </p><form name="configDetailsForm" class="form-horizontal"> <div class="control-group"> <label class="control-label">Instance type:</label> <div class="controls"> <div ng-switch on="data.stepsById.configDetailsStep.data.instanceTypes.state"> <div ng-switch-when="ready"> <select class="input-medium" ng-model="input.instanceType" ng-options="type for type in data.stepsById.configDetailsStep.data.instanceTypes.options" name="instanceType" required="required"></select> </div> <div ng-switch-when="error"> <input type="text" ng-model="input.instanceType" /> <span class="text-error">Unable to load instance type options.</span> </div> <div ng-switch-when="loading"> <i class="icon-spinner icon-spin"></i> Loading </div> </div> <div class="help-inline">Determines the processing power of the servers in your environment.</div> </div> </div> <div class="control-group"> <label class="control-label">EC2 key pair:</label> <div class="controls"> <external-service-select info="data.stepsById.configDetailsStep.data.keyPairs" input-model="input" input-key="keyPair" default-option-text="Select a key pair" on-refresh="data.stepsById.configDetailsStep.refreshKeyPairs()"> </external-service-select> <div class="help-inline">Optional: Enables remote login to your instances.</div> </div> </div> <div class="control-group"> <label class="control-label">Email address:</label> <div class="controls"> <input type="email" class="input-xlarge" ng-model="input.email" name="email"/> <div class="help-inline">Optional: Get notified about any major changes to your environment.</div> </div> </div> <div class="control-group" ng-if="input.environmentType !== \'SingleInstance\'"> <label class="control-label">Application health check URL:</label> <div class="controls"> <input type="text" class="input-xlarge" ng-model="input.healthCheckUrl" name="healthCheckUrl" pattern="{{data.stepsById.configDetailsStep.data.healthCheckPattern}}"/> <div class="help-inline">Enter the relative URL that ELB continually monitors to ensure your application is available.</div> </div> </div> <div class="control-group" ng-if="data.stepsById.configDetailsStep.canHaveRollingUpdates"> <label class="control-label">Rolling updates type:</label> <div class="controls"> <select name="rollingUpdateType" ng-model="input.rollingUpdateValue"> <option value="{{constants.DISABLED}}" ng-selected="constants.DISABLED === input.rollingUpdateValue">Disabled</option> <option ng-if="data.stepsById.configDetailsStep.canHaveHealthBasedUpdates" value="{{constants.HEALTH}}" ng-selected="constants.HEALTH === input.rollingUpdateValue">Rolling based on Health</option> <option value="{{constants.TIME}}" ng-selected="constants.TIME === input.rollingUpdateValue">Rolling based on Time</option> <option ng-if="data.stepsById.configDetailsStep.canHaveImmutableUpdate" value="{{constants.IMMUTABLE}}" ng-selected="constants.IMMUTABLE === input.rollingUpdateValue">Immutable</option> </select> <span class="help-inline"><a eb-docs-href="/console/elasticbeanstalk/rolling-environment-config">Learn more</a></span> </div> </div> <div class="control-group" ng-if="data.stepsById.configDetailsStep.canHaveNonLegacyElbOptions"> <label class="control-label">Cross zone load balancing:</label> <div class="controls"> <input type="checkbox" ng-model="input.crossZoneEnabled" name="crossZoneEnabled" /> <div class="help-inline">Enables load balancing across multiple Availability Zones. <a eb-docs-href="/console/elasticbeanstalk/config-elb">Learn more</a></div> </div> </div> <div class="control-group" ng-if="data.stepsById.configDetailsStep.canHaveNonLegacyElbOptions"> <label class="control-label">Connection draining:</label> <div class="controls"> <input type="checkbox" ng-model="input.connectionDrainingEnabled" name="connectionDrainingEnabled" /> <div class="help-inline">Enables the load balancer to maintain connections to an Amazon EC2 instance to complete in-progress requests while also stopping new requests. <a eb-docs-href="/console/elasticbeanstalk/config-elb">Learn more</a></div> </div> </div> <div class="control-group" ng-if="data.stepsById.configDetailsStep.canHaveNonLegacyElbOptions"> <label class="control-label">Connection draining timeout:</label> <div class="controls"> <div class="input-append block"> <input type="number" class="input-mini" ng-disabled="!input.connectionDrainingEnabled" ng-model="input.connectionDrainingTimeout" name="connectionDrainingTimeout" required="required" min="1" max="3600" /> <span class="add-on">seconds</span> </div> <div class="help-inline">Maximum time that the load balancer maintains connections to an Amazon EC2 instance before forcibly closing connections.</div> </div> </div> <div ng-if="input.healthReportingSystemType"> <h3 class="underline bottom-gutter">Health Reporting</h3> <div class="control-group" ng-class="{ error: input.healthReportingSystemType === constants.BASIC && (input.deploymentPolicy === constants.IMMUTABLE || input.rollingUpdateValue === constants.IMMUTABLE || (input.healthCheckSuccessThreshold && input.healthCheckSuccessThreshold !== \'Ok\')) }"> <label class="control-label">System type:</label> <div class="controls"> <select class="input-medium" name="healthReportingSystemType" ng-model="input.healthReportingSystemType" ng-options="type.id as type.name for type in data.stepsById.configDetailsStep.data.healthReportingTypes"> </select> <div class="help-inline">Determines the health reporting type.</div> <div class="help-block" ng-show="input.healthReportingSystemType === constants.BASIC && input.deploymentPolicy === constants.IMMUTABLE">Enhanced health reporting is required for immutable deployment policy.</div> <div class="help-block" ng-show="input.healthReportingSystemType === constants.BASIC && input.rollingUpdateValue === constants.IMMUTABLE">Enhanced health reporting is required for immutable environment updates.</div> <div class="help-block" ng-show="input.healthReportingSystemType === constants.BASIC && input.healthCheckSuccessThreshold && input.healthCheckSuccessThreshold !== \'Ok\'">Enhanced health reporting is required to lower the health check threshold.</div> </div> </div> </div> <div ng-if="!input.solutionStack.isLegacy"> <h3 class="underline bottom-gutter">Root Volume (Boot Device)</h3> <div class="control-group"> <label class="control-label">Root volume type:</label> <div class="controls"> <div ng-switch on="data.stepsById.configDetailsStep.data.rootVolumeTypes.state"> <div ng-switch-when="ready"> <select class="input" ng-model="input.rootVolumeType" ng-options="type.value as type.displayName for type in data.stepsById.configDetailsStep.data.rootVolumeTypes.localizedOptions" ng-change="data.stepsById.configDetailsStep.rootVolumeTypeChange()" name="rootVolumeType"> <option value="">(Container default)</option> </select> </div> <div ng-switch-when="error"> <input type="text" ng-model="input.rootVolumeType" /> <span class="text-error">Unable to load volume type options.</span> </div> <div ng-switch-when="loading"> <i class="icon-spinner icon-spin"></i> Loading </div> </div> <div class="help-inline">Determines the type of storage volume to attach to instances.</div> </div> </div> <div class="control-group"> <label class="control-label">Root volume size:</label> <div class="controls"> <label class="checkbox" ng-class="{disabled: input.rootVolumeType === \'io1\'}"> <input type="checkbox" ng-model="input.isCustomVolumeSize" ng-disabled="input.rootVolumeType === \'io1\'" ng-change="input.rootVolumeSize = input.isCustomVolumeSize ? input.rootVolumeSize : null"/> Enables you to specify the size of the root volume. </label> <div class="input-append block"> <input type="number" class="input-mini" min="8" maxvalue="input.rootVolumeType === \'io1\' || input.rootVolumeType === \'gp2\' ? 16384 : 1024" ng-model="input.rootVolumeSize" ng-required="input.isCustomVolumeSize" ng-disabled="!input.isCustomVolumeSize" name="rootVolumeSize"/> <span class="add-on">GiB</span> </div> <div class="help-inline">Number of gibibytes of the root volume attached to each instance. Must be between 10 and 16384 for Provisioned IOPS (SSD) and General Purpose (SSD) root volumes and between 8 and 1024 for other root volumes.</div> </div> </div> <div class="control-group" ng-hide="input.rootVolumeType !== \'io1\'"> <label class="control-label">Root volume IOPS:</label> <div class="controls"> <div class="input-append block"> <input type="number" class="input-mini" min="100" max="20000" ng-model="input.rootVolumeIops" ng-required="input.rootVolumeType === \'io1\'" ng-disabled="input.rootVolumeType !== \'io1\'" name="rootVolumeIops"/> <span class="add-on">IOPS</span> </div> <div class="help-inline">Input/output operations per second for a Provisioned IOPS (SSD) root volume type. Must be between 100 and 20000 and cannot be more than 50 times the root volume size.</div> </div> </div> </div> <div class="form-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancelRequested()" >Cancel</a> <a href="#" click-eater class="btn" ng-click="backRequested()">Previous</a> <button class="btn btn-primary" ng-click="configDetailsForm.$valid && continueRequested()" id="continue-button">Next</button> </div> </div></form>');
a.put("partials/wizards/environment-info.html",'<h2 class="underline bottom-gutter step-header">Environment Information</h2><p>Enter your environment information.</p><form name="envInfoForm" class="form-horizontal" submit-to-class> <div class="control-group" blur-to-class ng-class="{invalid: envInfoForm.environmentName.$invalid}"> <label class="control-label">Environment name:</label> <div class="controls"> <input type="text" autofocus="autofocus" class="input-xlarge" name="environmentName" ng-maxlength="40" ng-minlength="4" ng-model="input.environmentName" ng-pattern="environmentNamePattern" required="required" unique-from="data.stepsById.environmentInfoStep.environmentNames"> <p ng-show="envInfoForm.environmentName.$invalid && !envInfoForm.environmentName.$error.unique">Environment name must be from 4 to 40 characters in length, can contain only letters, numbers, and hyphens, and cannot start or end with a hyphen.</p> <p ng-show="envInfoForm.environmentName.$error.unique">Environment name must be unique in your account.</p> </div> </div> <div class="control-group" blur-to-class ng-class="{ invalid: envInfoForm.environmentUrl.$invalid || data.stepsById.environmentInfoStep.urlAvailable === false, success: data.stepsById.environmentInfoStep.urlAvailable }" ng-show="data.stepsById.environmentInfoStep.showEnvironmentUrl"> <label class="control-label">Environment URL:</label> <div class="controls"> <div class="inline-block input-append"> <input type="text" class="input-medium" name="environmentUrl" ng-change="data.stepsById.environmentInfoStep.urlChanged()" ng-model="input.environmentUrl" required="required"> <span class="add-on" ng-bind-html="data.stepsById.environmentInfoStep.cnameDomain"></span> </div> <div class="help-block"> <a href="#" class="btn" click-eater data-check-availability ng-click="data.stepsById.environmentInfoStep.checkAvailability(input.environmentUrl)">Check availability</a> </div> <p ng-show="data.stepsById.environmentInfoStep.urlAvailable === false">That URL is already taken.</p> <p class="text-error" ng-show="data.stepsById.environmentInfoStep.urlCheckError">We were unable to check the availability of this url: {{data.stepsById.environmentInfoStep.urlCheckError}}</p> </div> </div> <div class="control-group"> <label class="control-label">Description:</label> <div class="controls"> <input type="text" class="input-xlarge" ng-model="input.environmentDescription" name="description"> <div class="help-inline">Optional: 200 character maximum</div> </div> </div> <div class="form-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancelRequested()" >Cancel</a> <a href="#" click-eater class="btn" ng-click="backRequested()" ng-disabled="changeInProgress">Previous</a> <button class="btn btn-primary" ng-click="continueRequested()" ng-disabled="changeInProgress" id="continue-button"> <i class="icon-spinner icon-spin" ng-show="changeInProgress"></i> Next </button> </div> <span ng-show="data.stepsById.environmentInfoStep.status" ng-bind-html="data.stepsById.environmentInfoStep.status"></span> </div></form>');
a.put("partials/wizards/environment-tags.html",'<h2 class="underline bottom-gutter step-header">Environment Tags</h2><p>You can specify tags (key-value pairs) for your Environment. You can add up to {{input.tags.max}} unique key-value pairs for each Environment.</p><form class="form-horizontal" name="environmentTagsForm"> <div class="control-group"> <div class="tags-control"> <div class="tags-control-header-row"> <div class="key-header">Key <span class="limit">(128 characters maximum)</span></div> <div class="value-header">Value <span class="limit">(256 characters maximum)</span></div> </div> <ul class="tags-list"> <li class="tag-row" ng-form="tagRowForm" ng-repeat="tag in input.tags.collection track by $index"> <div class="tag-index">{{$index + 1}}.</div> <div class="tag-key"> <input type="text" name="tagKey" ng-blur="input.tags.validate()" ng-class="{ invalid: !tag.errors.isEmpty() }" ng-keyup="input.tags.addBlankTag()" ng-maxlength="128" ng-model="tag.key" ng-pattern="/^[\\w\\d\\s\\\\_.:/=+-@].*$/" onclick="this.select()"> </div> <div class="tag-value"> <input type="text" name="tagValue" ng-class="{ invalid: !tag.errors.isEmpty() }" ng-maxlength="256" ng-model="tag.value" ng-pattern="/^[\\w\\d\\s\\\\_.:/=+-@].*$/" onclick="this.select()"> </div> <div class="remove-tag" ng-show="true"><i class="icon-remove-sign icon-large" aria-label="Remove tag" ng-click="input.tags.remove($index)" ng-hide="tag.isBlank()" title="Remove tag"></i></div> <div class="error-text"> <div ng-show="tagRowForm.tagKey.$error.maxlength">Tag keys can\'t be longer than 128 characters.</div> <div ng-show="tagRowForm.tagValue.$error.maxlength">Tag values can\'t be longer than 256 characters.</div> <div ng-show="tagRowForm.$error.pattern">Tags may only contain letters, numbers, white spaces and the following symbols: / _ . : = + - @</div> <div ng-repeat="error in tag.errors.fullMessages()">{{error}}</div> </div> </li> </ul> </div> <p class="help-inline">{{input.tags.max - input.tags.length + input.tags.blanks().length}} remaining</p> </div> <div class="form-actions"> <div class="pull-right"> <a click-eater class="btn btn-link" ng-click="cancelRequested()">Cancel</a> <a click-eater class="btn" ng-click="backRequested()">Previous</a> <button class="btn btn-primary" id="continue-button" ng-click="continueRequested()">Next</button> </div> </div></form>');
a.put("partials/wizards/environment-tier.html",'<h2 class="underline step-header">New Environment</h2><p>AWS Elastic Beanstalk has two types of environment tiers to support different types of web applications. Web servers are standard applications that listen for and then process HTTP requests, typically over port 80. Workers are specialized applications that have a background processing task that listens for messages on an Amazon SQS queue. Worker applications post those messages to your application by using HTTP.</p><div class="tier-list"> <h3>Web Server Environment</h3> <div class="tier-description"> <p>Provides resources for an AWS Elastic Beanstalk web server in either a single instance or load-balancing, auto scaling environment. <a eb-docs-href="/console/elasticbeanstalk/concepts-web-environment">Learn more</a></p> <div class="call-to-action"> <button class="btn btn-primary select-tier-button" ng-click="data.stepsById.environmentTier.createNewWebServer(input)">Create web server</button> </div> </div> <hr> <h3>Worker Environment<sup>*</sup></h3> <div class="tier-description"> <p>Provides resources for an AWS Elastic Beanstalk worker application in either a single instance or load-balancing, auto scaling environment. <a eb-docs-href="/console/elasticbeanstalk/concepts-worker-environment">Learn more</a></p> <div class="call-to-action"> <button class="btn btn-primary select-tier-button" ng-click="data.stepsById.environmentTier.createNewWorker(input)">Create worker</button> </div> </div></div><div class="form-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancelRequested()">Cancel</a> <button class="btn btn-primary" id="done-button" ng-click="done()" ng-show="input.launchApplication">Done</button> </div></div>');
a.put("partials/wizards/permissions.html",'<h2 class="underline bottom-gutter step-header">Permissions</h2><p>Select an instance profile and service role for your AWS Elastic Beanstalk environment.</p><p>An instance profile is an IAM role configured for use with EC2 instances. The instances in your Elastic Beanstalk use the credentials provided by the instance profile to communicate with AWS.</p><p>A service role allows the Elastic Beanstalk service to monitor environment resources on your behalf. See <a eb-docs-href="/console/elasticbeanstalk/roles">Roles and Instance Profiles</a> in the Elastic Beanstalk developer guide for details.</p><form name="permissionsForm" class="form-horizontal submitted"> <div class="control-group" ng-class="{invalid: errors.instanceProfile}"> <label class="control-label">Instance profile:</label> <div class="controls"> <select ng-model="input.instanceProfile" ng-options="role.value as role.displayName for role in data.stepsById.permissions.instanceProfiles" ng-change="selectChanged(\'instanceProfile\')"> </select> <p ng-show="errors.instanceProfile">{{errors.instanceProfile}}</p> </div> </div> <div class="control-group" ng-class="{invalid: errors.serviceRole}"> <label class="control-label">Service role:</label> <div class="controls"> <select ng-model="input.serviceRole" ng-options="role.value as role.displayName for role in data.stepsById.permissions.iamRoles" ng-change="selectChanged(\'serviceRole\')"> </select> <p ng-show="errors.serviceRole">{{errors.serviceRole}}</p> <div class="text-warning m-top-1em" ng-show="(input.serviceRole === \'new\' || input.instanceProfile === \'new\') && !(errors.serviceRole || errors.instanceProfile)"> {{(input.serviceRole === \'new\' && input.instanceProfile === \'new\' ? \'permissions_create_instance_and_service\' : input.instanceProfile === \'new\' ? \'permissions_create_instance\' : \'permissions_create_service\') | localize}} <a eb-docs-href="/console/elasticbeanstalk/roles">Learn more</a> </div> </div> </div> <div class="form-actions"> <div class="pull-right"> <a click-eater href="" class="btn btn-link" ng-click="cancelRequested()">Cancel</a> <a click-eater href="" class="btn" ng-disabled="changeInProgress" ng-click="backRequested()">Previous</a> <button class="btn btn-primary" ng-click="continueRequested()" ng-disabled="changeInProgress" id="continue-button"> <i class="icon-spinner icon-spin" ng-show="changeInProgress"></i> Next </button> </div> <span ng-show="status" ng-bind-html="status"></span> </div></form>');
a.put("partials/wizards/rds-configuration.html",'<h2 class="underline bottom-gutter step-header">RDS Configuration</h2><div ng-show="data.stepsById.rdsConfigStep.failedToLoad" class="alert alert-error alert-icon"> <h3>Error</h3> <p ng-bind-html="data.stepsById.rdsConfigStep.failedMessage"></p></div><p> Specify your RDS settings. <a eb-docs-href="/console/elasticbeanstalk/config-dbs">Learn more</a> </p><form name="rdsConfigForm" class="form-horizontal" submit-to-class> <div class="control-group"> <label class="control-label">Snapshot:</label> <div class="controls"> <external-service-select default-option-text="None" disabled="!!data.stepsById.rdsConfigStep.status" info="data.stepsById.rdsConfigStep.data.rdsSnapshots" input-key="rdsSnapshot" input-model="input" on-change="data.stepsById.rdsConfigStep.snapshotChanged(input.rdsSnapshot)" on-refresh="data.stepsById.rdsConfigStep.refreshSnapshots()"></external-service-select> </div> </div> <div class="control-group"> <label class="control-label">DB engine:</label> <div class="controls"> <select ng-change="data.stepsById.rdsConfigStep.dbEngineChange(input.rdsEngine)" ng-disabled="data.stepsById.rdsConfigStep.status" ng-model="input.rdsEngine" ng-options="engine for engine in data.stepsById.rdsConfigStep.data.dbEngineOptions track by engine"> </select> </div> </div> <div class="control-group"> <label class="control-label">DB engine version:</label> <div class="controls"> <select ng-change="data.stepsById.rdsConfigStep.dbEngineVersionChange(input.rdsEngine, input.rdsEngineVersion)" ng-disabled="data.stepsById.rdsConfigStep.status" ng-model="input.rdsEngineVersion" ng-options="version for version in data.stepsById.rdsConfigStep.data.dbEngineVersionOptions track by version"> </select> </div> </div> <div class="control-group"> <label class="control-label">Instance class:</label> <div class="controls"> <select ng-disabled="data.stepsById.rdsConfigStep.status" ng-model="input.rdsInstanceClass" ng-options="instanceClass for instanceClass in data.stepsById.rdsConfigStep.data.dbInstanceClassOptions track by instanceClass"> </select> </div> </div> <div class="control-group" ng-class="{invalid: rdsConfigForm.allocatedStorage.$invalid}" blur-to-class> <label class="control-label">Allocated storage:</label> <div class="controls"> <div class="input-append block"> <input type="number" class="input-mini" maxvalue="input.rdsAllocatedStorageMaxValue" minvalue="input.rdsAllocatedStorageMinValue" name="allocatedStorage" ng-model="input.rdsAllocatedStorage" required="required"> <span class="add-on">GB</span> </div> <div class="help-inline">You must specify a value from 5 GB to 1024 GB.</div> </div> </div> <div class="control-group" ng-class="{invalid: rdsConfigForm.username.$invalid}" blur-to-class> <label class="control-label">Username:</label> <div class="controls"> <input type="text" name="username" ng-model="input.rdsUsername" required="required"> </div> </div> <div class="control-group" ng-class="{invalid: rdsConfigForm.password.$invalid}" blur-to-class> <label class="control-label">Password:</label> <div class="controls"> <input type="password" name="password" ng-model="input.rdsPassword" required="required"> </div> </div> <div class="control-group"> <label class="control-label">Retention setting:</label> <div class="controls"> <select name="deletionPolicy" ng-model="input.rdsDeletionPolicy" required="required"> <option value="Snapshot">Create snapshot</option> <option value="Delete">Delete</option> </select> <div class="help-inline">Terminating your environment can permanently delete your Amazon RDS DB instance and all its data. By default, AWS Elastic Beanstalk saves a snapshot, which preserves your data but may incur backup storage charges.</div> </div> </div> <div class="control-group"> <label class="control-label">Availability:</label> <div class="controls"> <select name="multiAz" ng-model="input.rdsMultiAz"> <option value="true">Multiple availability zones</option> <option value="false">Single availability zone</option> </select> </div> </div> <div class="form-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancelRequested()">Cancel</a> <a href="#" click-eater class="btn" ng-click="backRequested()">Previous</a> <button class="btn btn-primary" id="continue-button" ng-click="continueRequested()" ng-disabled="data.stepsById.rdsConfigStep.failedToLoad">Next</button> </div> <span ng-show="data.stepsById.rdsConfigStep.status" ng-bind-html="data.stepsById.rdsConfigStep.status"></span> </div></form>');
a.put("partials/wizards/resource-selection.html",'<h2 class="underline bottom-gutter step-header">Additional Resources</h2><p> Select additional resources for this environment.</p><form name="resourceForm" class="form-horizontal"> <div class="control-group resource-select-div"> <label class="checkbox"> <input type="checkbox" name="includeRds" autofocus="autofocus" ng-model="input.includeRds" ng-disabled="input.forceRds" ng-change="checkVisibilities()"> Create an RDS DB Instance with this environment <a eb-docs-href="/console/elasticbeanstalk/config-dbs">Learn more</a> </label> </div> <div class="control-group resource-select-div"> <label class="checkbox"> <input type="checkbox" name="includeVpc" ng-disabled="data.stepsById.vpcConfigStep.getLoadingError()" ng-model="input.includeVpc" ng-change="checkVisibilities()"> Create this environment inside a VPC <a eb-docs-href="/console/elasticbeanstalk/vpc">Learn more</a> </label> <div class="controls" ng-show="data.stepsById.vpcConfigStep.getLoadingError()"> <div class="help-inline"> <p class="text-error"> Unable to load the necessary information for adding a VPC: {{data.stepsById.vpcConfigStep.getLoadingError()}} <a href="#" click-eater ng-click="data.stepsById.vpcConfigStep.refresh()" class="btn">Retry</a> </p> </div> </div> </div> <div class="form-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancelRequested()">Cancel</a> <a href="#" click-eater class="btn" ng-click="backRequested()">Previous</a> <button class="btn btn-primary" ng-click="continueRequested()" id="continue-button">Next</button> </div> </div></form>');
a.put("partials/wizards/review.html",'<h2 class="underline bottom-gutter step-header">Review</h2><p>Review the following information. Then click &ldquo;Launch.&rdquo;</p><div class="m-top-10" ng-repeat="section in data.stepsById.reviewStep.sections"> <h3 class="underline pointer" ng-click="!section.step.notNavigable && navigateToStep(section.step)"><a href="#" click-eater ng-disabled="section.step.notNavigable">{{section.step.name}}</a></h3> <div ng-hide="section.settings.length === 0"> <dl class="dl-horizontal" repeat-definition-list values="section.settings"></dl> </div> <p class="m-top-10 text-center" ng-show="section.settings.length === 0"><em>No settings provided.</em></p></div><div class="form-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancelRequested()" >Cancel</a> <a href="#" click-eater class="btn" ng-click="backRequested()">Previous</a> <button class="btn btn-primary" ng-click="reviewCompleted()" ng-disabled="changeInProgress" id="create-button"> <i class="icon-spinner icon-spin" ng-show="changeInProgress"></i> Launch </button> </div> <span id="creation-status-display" ng-show="creationStatus" ng-bind-html="creationStatus"></span></div>');
a.put("partials/wizards/vpc-configuration.html",'<h2 class="underline bottom-gutter step-header">VPC Configuration</h2><p>Select the VPC to use when creating your environment. <a eb-docs-href="/console/elasticbeanstalk/vpc">Learn more</a></p><form name="vpcConfigForm" class="form-horizontal" submit-to-class ng-class="{\'no-elb\': input.environmentType === \'SingleInstance\'}"> <div class="control-group" ng-class="{ invalid: !input.vpcId }" blur-to-class> <label class="control-label">VPC:</label> <div class="controls"> <external-service-select info="data.stepsById.vpcConfigStep.data.vpcs" input-model="input" input-key="vpcId" is-required="true" on-change="data.stepsById.vpcConfigStep.vpcChanged(input.vpcId)" on-refresh="data.stepsById.vpcConfigStep.refresh()"></external-service-select> <label class="checkbox m-top-10"><input type="checkbox" ng-change="data.stepsById.vpcConfigStep.checkAssociatePublicIpRecommended()" ng-model="input.vpcAssociatePublicIpAddress"> Associate Public IP Address</label> </div> </div> <div class="alert alert-icon alert-error" ng-hide="data.stepsById.vpcConfigStep.hasEnoughSubnetsForRds && data.stepsById.vpcConfigStep.hasEnoughSubnetsForEc2"> <h3>Insufficient Subnets</h3> <p ng-show="!data.stepsById.vpcConfigStep.hasEnoughSubnetsForEc2 && input.environmentType !== \'SingleInstance\'">You must have at least one Availability Zone with two subnets to use VPC with a load-balanced environment.</p> <p ng-show="!data.stepsById.vpcConfigStep.hasEnoughSubnetsForEc2 && input.environmentType === \'SingleInstance\'">You must have at least one subnet to use VPC with a single-instance environment.</p> <p ng-show="!data.stepsById.vpcConfigStep.hasEnoughSubnetsForRds">You must have subnets in at least two Availability Zones to use RDS with VPC.</p> </div> <div class="alert alert-block alert-icon alert-error" ng-show="data.stepsById.vpcConfigStep.noVpcFound"> <p>No VPC was found. Create a new VPC or uncheck "Create this environment inside a VPC" on the Additional Resources page.</p> </div> <div ng-hide="data.stepsById.vpcConfigStep.noVpcFound"> <div ng-hide="input.environmentType === \'SingleInstance\'"><p>Select different subnets for ELB and EC2 instances in your Availability Zone.</p></div> <div ng-show="input.environmentType === \'SingleInstance\'"><p>Select the subnets for EC2 instances in your Availability Zone.</p></div> <div class="text-error"> <p ng-repeat="error in data.stepsById.vpcConfigStep.errors track by $index">{{error}}</p> </div> <div class="alert alert-block alert-icon alert-warning" ng-repeat="warning in data.stepsById.vpcConfigStep.warnings track by $index"> <p class="text-warning">{{warning}}</p> </div> <table class="subnet-selector" ng-class="{\'no-rds\': !input.includeRds}" data-table="resource"> <thead> <tr data-table-header="togglable"> <th class="az-header">AZ</th> <th>Subnet</th> <th class="elb input-column">ELB</th> <th class="input-column">EC2</th> <th class="rds input-column">RDS</th> </tr> </thead> <tbody ng-repeat="az in data.stepsById.vpcConfigStep.data.availabilityZones.options"> <tr> <th class="az-header" rowspan="{{ data.stepsById.vpcConfigStep.subnetsToDisplay[az.value].length + ( data.stepsById.vpcConfigStep.areSubnetsInsufficientForElbAndEc2(az) ? 2 : 1 ) }}"> {{az.displayName}} </th> <td ng-hide="data.stepsById.vpcConfigStep.subnetsToDisplay[az.value]"></td> <td ng-hide="data.stepsById.vpcConfigStep.subnetsToDisplay[az.value]" class="elb"></td> <td ng-hide="data.stepsById.vpcConfigStep.subnetsToDisplay[az.value]"></td> <td ng-hide="data.stepsById.vpcConfigStep.subnetsToDisplay[az.value]" class="rds"></td> </tr> <tr ng-show="data.stepsById.vpcConfigStep.areSubnetsInsufficientForElbAndEc2(az)"> <td colspan="4"> <div class="alert"> An Availability Zone must have at least two subnets to be used for ELB and EC2. </div> </td> </tr> <tr ng-repeat="subnet in data.stepsById.vpcConfigStep.subnetsToDisplay[az.value]"> <td>{{subnet.displayName}} <span ng-show="subnet.additionalInfo.cidr">({{subnet.additionalInfo.cidr}})</span></td> <td class="elb input-column"> <input type="checkbox" ng-change="data.stepsById.vpcConfigStep.handleUseForElb(subnet)" ng-disabled="data.stepsById.vpcConfigStep.areSubnetsInsufficientForElbAndEc2(az)" ng-model="input.usedForElb[subnet.value]"> </td> <td class="input-column"> <input type="checkbox" ng-change="data.stepsById.vpcConfigStep.handleUseForEc2(subnet)" ng-disabled="data.stepsById.vpcConfigStep.areSubnetsInsufficientForElbAndEc2(az)" ng-model="input.usedForEc2[subnet.value]"> </td> <td class="rds input-column"> <input type="checkbox" ng-model="input.usedForRds[subnet.value]"> </td> </tr> </tbody> </table> <div class="control-group"> <label class="control-label">VPC security group:</label> <div class="controls"> <external-service-select info="data.stepsById.vpcConfigStep.data.securityGroups" input-model="input" input-key="vpcSecurityGroup" is-required="true" options-filter="data.stepsById.vpcConfigStep.securityGroupFilter" on-refresh="data.stepsById.vpcConfigStep.refreshSecurityGroups()"> </external-service-select> </div> </div> <div class="control-group elb"> <label class="control-label">ELB visibility:</label> <div class="controls"> <select ng-model="input.vpcInternalLoadBalancer" name="internalLoadBalancer"> <option value="public">External</option> <option value="internal">Internal</option> </select> <p class="help-inline"> Select Internal when load balancing a back-end service that should not be publicly available. </p> </div> </div> </div> <div class="form-actions"> <div class="pull-right"> <a href="#" click-eater class="btn btn-link" ng-click="cancelRequested()" >Cancel</a> <a href="#" click-eater class="btn" ng-click="backRequested()">Previous</a> <button class="btn btn-primary" id="continue-button" ng-click="continueRequested()" ng-disabled="!data.stepsById.vpcConfigStep.canContinue(input)"> Next </button> </div> </div></form>');
a.put("partials/wizards/wizard-base.html",'<div class="row-fluid"> <div class="span12 alert alert-info alert-icon" ng-show="showQsOptInAlert"> <a class="close" ng-click=\'closeQsOptInAlert()\' href="#" click-eater>&times;</a> <h3>Try the new design</h3> <p>We\'re testing a new design for the environment creation wizard. <a ng-click="qsOptIn()" href="#" click-eater analytics-click="console_OptIn">Opt in now</a> to try it and let us know what you think! </p> <p ng-show="qsUpdatingPrefs"> <i class="icon-spinner icon-spin pull-left m-top-2"></i>Updating preferences&hellip;</p> </div></div><div class="row-fluid"> <div class="span2 aws-sidenav"> <ul class="wizard-steps"> <li ng-repeat="step in data.steps" ng-show="step.isVisible()" ng-click="!step.notNavigable && navigateToStep(step)" ng-class="{selected: step == getSelectedStep(), pointer: $index <= furthestStep && !step.notNavigable}">{{step.name}}</li> </ul> </div> <div class="span10" ng-include="getSelectedStep().partialUrl"> </div></div>');
a.put("partials/wizards/worker-details.html",'<h2 class="underline bottom-gutter step-header">Worker Details</h2><p>Modify the following settings or click Next to accept the default configuration. <a eb-docs-href="/elasticbeanstalk/latest/dg/using-features.environments.html#worker">Learn more</a></p><form name="workerDetailsForm" class="form-horizontal"> <div class="control-group"> <label class="control-label">Worker queue</label> <div class="controls"> <external-service-select default-option-text="Autogenerate queue" info="data.stepsById.workerDetailsStep.data.sqsQueues" input-key="workerQueueUrl" input-model="input" on-refresh="data.stepsById.workerDetailsStep.refreshSqsQueues()" options-filter="data.stepsById.workerDetailsStep.filterQueueName"></external-service-select> <div class="help-inline"> <div class="text-error" ng-show="data.stepsById.workerDetailsStep.data.sqsQueuesError">Your SQS Queue list could not be displayed. Error Message: {{data.stepsById.workerDetailsStep.data.sqsQueuesError.message}}</div> SQS queue from which to read. </div> </div> </div> <div class="control-group"> <label class="control-label">HTTP path</label> <div class="controls"> <input type="text" ng-model="input.workerHttpPath"> <div class="help-inline">URL on localhost where messages will be forwarded as HTTP POST requests.</div> </div> </div> <div class="control-group"> <label class="control-label">MIME type</label> <div class="controls"> <div class="control"> <select ng-model="input.workerMimeType"> <option value="custom">Provide your own&hellip;</option> <option ng-repeat="type in data.stepsById.workerDetailsStep.data.mimeTypeOptions" ng-value="type">{{type}}</option> </select> <div class="help-inline">MIME type of the message being sent.</div> </div> <div class="control" ng-show="input.workerMimeType === \'custom\'"> <input type="text" ng-model="input.workerCustomMimeType" placeholder="e.g. \'text/xml\'"> </div> </div> </div> <div class="control-group"> <label class="control-label">HTTP connections</label> <div class="controls"> <input type="text" ng-model="input.httpConnections" required="required"> <div class="help-inline">Maximum number of concurrent connections to the application.</div> </div> </div> <div class="control-group"> <label class="control-label">Visibility timeout</label> <div class="controls"> <input type="text" ng-model="input.visibilityTimeout" required="required" ng-change="input.inactivityTimeout = input.visibilityTimeout - 1"> <div class="help-inline">Number of seconds to lock an incoming message for processing before returning it to the queue.</div> </div> </div> <div class="form-actions"> <div class="pull-right"> <a click-eater class="btn btn-link" ng-click="cancelRequested()">Cancel</a> <a click-eater class="btn" ng-click="backRequested()">Previous</a> <button class="btn btn-primary" id="continue-button" ng-click="continueRequested()" ng-disabled="data.stepsById.workerDetailsStep.loadingValues"> <i class="icon-spinner icon-spin" ng-show="data.stepsById.workerDetailsStep.loadingValues"></i> <span>Next</span> </button> </div> </div></form>')}])})();
